{
	"info": {
		"_postman_id": "00aa2e1b-0bd5-465b-8087-460cc67f0f0f",
		"name": "OpenProject API V3 (Stable)",
		"description": "You're looking at the current **stable** documentation of the OpenProject APIv3. If you're interested in the current\ndevelopment version, please go to [github.com/opf](https://github.com/opf/openproject/tree/dev/docs/api/apiv3).\n\n## Introduction\n\nThe documentation for the APIv3 is written according to the [OpenAPI 3.0 Specification](https://swagger.io/specification/).\nYou can either view the static version of this documentation on the [website](https://www.openproject.com/docs/api/introduction/)\nor the interactive Swagger UI version in your OpenProject installation under `/api/docs`.\nIn the latter you can try out the various API endpoints directly interacting with our OpenProject data.\nMoreover you can access the specification source itself under `/api/v3/spec.json` and `/api/v3/spec.yml`\n(e.g. [here](https://community.openproject.org/api/v3/spec.yml)).\n\nThe APIv3 is a hypermedia REST API, a shorthand for \"Hypermedia As The Engine Of Application State\" (HATEOAS).\nThis means that each endpoint of this API will have links to other resources or actions defined in the resulting body.\n\nThese related resources and actions for any given resource will be context sensitive. For example, only actions that the\nauthenticated user can take are being rendered. This can be used to dynamically identify actions that the user might take for any\ngiven response.\n\nAs an example, if you fetch a work package through the [Work Package endpoint](https://www.openproject.org/docs/api/endpoints/work-packages/), the `update` link will only\nbe present when the user you authenticated has been granted a permission to update the work package in the assigned project.\n\n## HAL+JSON\n\nHAL is a simple format that gives a consistent and easy way to hyperlink between resources in your API.\nRead more in the following specification: [https://tools.ietf.org/html/draft-kelly-json-hal-08](https://tools.ietf.org/html/draft-kelly-json-hal-08)\n\n**OpenProject API implementation of HAL+JSON format** enriches JSON and introduces a few meta properties:\n\n- `_type` - specifies the type of the resource (e.g.: WorkPackage, Project)\n- `_links` - contains all related resource and action links available for the resource\n- `_embedded` - contains all embedded objects\n\nHAL does not guarantee that embedded resources are embedded in their full representation, they might as well be\npartially represented (e.g. some properties can be left out).\nHowever in this API you have the guarantee that whenever a resource is **embedded**, it is embedded in its **full representation**.\n\n## API response structure\n\nAll API responses contain a single HAL+JSON object, even collections of objects are technically represented by\na single HAL+JSON object that itself contains its members. More details on collections can be found\nin the [Collections Section](https://www.openproject.org/docs/api/group-objects/).\n\n## Authentication\n\nThe API supports the following authentication schemes: OAuth2, session based authentication, and basic auth.\n\nDepending on the settings of the OpenProject instance many resources can be accessed without being authenticated.\nIn case the instance requires authentication on all requests the client will receive an **HTTP 401** status code\nin response to any request.\n\nOtherwise unauthenticated clients have all the permissions of the anonymous user.\n\n### Session-based Authentication\n\nThis means you have to login to OpenProject via the Web-Interface to be authenticated in the API.\nThis method is well-suited for clients acting within the browser, like the Angular-Client built into OpenProject.\n\nIn this case, you always need to pass the HTTP header `X-Requested-With \"XMLHttpRequest\"` for authentication.\n\n### API Key through Basic Auth\n\nUsers can authenticate towards the API v3 using basic auth with `apikey` (as a string, NOT your API key) as the user name and their API key as the password.\nUsers can find their API key on their account page.\n\nExample:\n\n```bash\nAPI_KEY=2519132cdf62dcf5a66fd96394672079f9e9cad1\ncurl -u apikey:$API_KEY https://community.openproject.com/api/v3/users/42\n```\n\n### OAuth2.0 authentication\n\nOpenProject allows authentication and authorization with OAuth2 with *Authorization code flow*, as well as *Client credentials* operation modes.\n\nTo get started, you first need to register an application in the OpenProject OAuth administration section of your installation.\nThis will save an entry for your application with a client unique identifier (`client_id`) and an accompanying secret key (`client_secret`).\n\nYou can then use one the following guides to perform the supported OAuth 2.0 flows:\n\n- [Authorization code flow](https://oauth.net/2/grant-types/authorization-code)\n\n- [Authorization code flow with PKCE](https://doorkeeper.gitbook.io/guides/ruby-on-rails/pkce-flow), recommended for clients unable to keep the client_secret confidential.\n\n- [Client credentials](https://oauth.net/2/grant-types/client-credentials/) - Requires an application to be bound to an impersonating user for non-public access\n\n### Why not username and password?\n\nThe simplest way to do basic auth would be to use a user's username and password naturally.\nHowever, OpenProject already has supported API keys in the past for the API v2, though not through basic auth.\n\nUsing **username and password** directly would have some advantages:\n\n* It is intuitive for the user who then just has to provide those just as they would when logging into OpenProject.\n\n* No extra logic for token management necessary.\n\nOn the other hand using **API keys** has some advantages too, which is why we went for that:\n\n* If compromised while saved on an insecure client the user only has to regenerate the API key instead of changing their password, too.\n\n* They are naturally long and random which makes them invulnerable to dictionary attacks and harder to crack in general.\n\nMost importantly users may not actually have a password to begin with. Specifically when they have registered\nthrough an OpenID Connect provider.\n\n## Cross-Origin Resource Sharing (CORS)\n\nBy default, the OpenProject API is _not_ responding with any CORS headers.\nIf you want to allow cross-domain AJAX calls against your OpenProject instance, you need to enable CORS headers being returned.\n\nPlease see [our API settings documentation](https://www.openproject.org/docs/system-admin-guide/system-settings/api-settings/) on\nhow to selectively enable CORS.\n\n## Allowed HTTP methods\n\n- `GET` - Get a single resource or collection of resources\n\n- `POST` - Create a new resource or perform\n\n- `PATCH` - Update a resource\n\n- `DELETE` - Delete a resource\n\n## Compression\n\nResponses are compressed if requested by the client. Currently [gzip](https://www.gzip.org/) and [deflate](https://tools.ietf.org/html/rfc1951)\nare supported. The client signals the desired compression by setting the [`Accept-Encoding` header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3).\nIf no `Accept-Encoding` header is send, `Accept-Encoding: identity` is assumed which will result in the API responding uncompressed.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18890459"
	},
	"item": [
		{
			"name": "api/v3",
			"item": [
				{
					"name": "actions",
					"item": [
						{
							"name": "List actions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/actions?filters=[{ \"id\": { \"operator\": \"=\", \"values\": [\"memberships/create\"] }\" }]&sortBy=[[\"id\", \"asc\"]]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"actions"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"id\": { \"operator\": \"=\", \"values\": [\"memberships/create\"] }\" }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.\nCurrently supported filters are:\n\n+ id: Returns only the action having the id or all actions except those having the id(s)."
										},
										{
											"key": "sortBy",
											"value": "[[\"id\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:\n\n+ *No sort supported yet*"
										}
									]
								},
								"description": "Returns a collection of actions. The client can choose to filter the actions similar to how work packages are filtered.\nIn addition to the provided filters, the server will reduce the result set to only contain actions, for which the requesting client\nhas sufficient permissions."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/actions?filters=[{ \"id\": { \"operator\": \"=\", \"values\": [\"memberships/create\"] }\" }]&sortBy=[[\"id\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"actions"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"id\": { \"operator\": \"=\", \"values\": [\"memberships/create\"] }\" }]"
												},
												{
													"key": "sortBy",
													"value": "[[\"id\", \"asc\"]]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/actions/work_packages/create\",\n      \"title\": \"Add work package\"\n     }\n    },\n    \"_type\": \"Action\",\n    \"description\": \"Creating a work package within a project including the uploading of attachments. Some attributes might not be selected, e.g version which requires a second permission\",\n    \"id\": \"work_packages/create\",\n    \"modules\": [\n     \"work_packages\"\n    ],\n    \"name\": \"Add work package\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/actions/work_packages/assign_versions\",\n      \"title\": \"Assigning version\"\n     }\n    },\n    \"_type\": \"Action\",\n    \"description\": \"Assigning a work package to a version when creating/updating a work package. Only principals having this permission can assign a value to the version property of the work package resource.\",\n    \"id\": \"work_packages/assign_versions\",\n    \"modules\": [\n     \"work_packages\",\n     \"versions\"\n    ],\n    \"name\": \"Assign version\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/actions\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								}
							]
						},
						{
							"name": "View action",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/actions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"actions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "work_packages/create",
											"description": "(Required) action id which is the name of the action"
										}
									]
								},
								"description": "Returns an individual action."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/actions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"actions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "work_packages/create",
													"description": "(Required) action id which is the name of the action"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/actions/work_packages/create\",\n   \"title\": \"Add work package\"\n  }\n },\n \"_type\": \"Action\",\n \"description\": \"Creating a work package within a project including the uploading of attachments. Some attributes might not be selected, e.g version which requires a second permission\",\n \"id\": \"work_packages/create\",\n \"modules\": [\n  \"work_packages\"\n ],\n \"name\": \"Add work package\"\n}"
								},
								{
									"name": "Returned if the action does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/actions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"actions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "work_packages/create",
													"description": "(Required) action id which is the name of the action"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "activities/{id}",
					"item": [
						{
							"name": "View activity",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Activity id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/activities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"activities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Activity id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/activity/1\",\n   \"title\": \"Priority changed from High to Low\"\n  },\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"John Sheppard - admin\"\n  },\n  \"workPackage\": {\n   \"href\": \"/api/v3/work_packages/1\",\n   \"title\": \"quis numquam qui voluptatum quia praesentium blanditiis nisi\"\n  }\n },\n \"_type\": \"Activity::Comment\",\n \"comment\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Lorem ipsum dolor sit amet.</p>\",\n  \"raw\": \"Lorem ipsum dolor sit amet.\"\n },\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"details\": [\n  {\n   \"format\": \"markdown\",\n   \"html\": \"<p>Lorem ipsum dolor sit amet.</p>\",\n   \"raw\": \"Lorem ipsum dolor sit amet.\"\n  }\n ],\n \"id\": 1,\n \"version\": 31\n}"
								}
							]
						},
						{
							"name": "Update activity",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": {\n        \"raw\": \"The updated comment\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v3/activities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"activities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Activity id"
										}
									]
								},
								"description": "Updates an activity's comment and, on success, returns the updated activity."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": {\n        \"raw\": \"The updated comment\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/activities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"activities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Activity id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/activity/1\",\n   \"title\": \"Priority changed from High to Low\"\n  },\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"John Sheppard - admin\"\n  },\n  \"workPackage\": {\n   \"href\": \"/api/v3/work_packages/1\",\n   \"title\": \"quis numquam qui voluptatum quia praesentium blanditiis nisi\"\n  }\n },\n \"_type\": \"Activity::Comment\",\n \"comment\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Lorem ipsum dolor sit amet.</p>\",\n  \"raw\": \"Lorem ipsum dolor sit amet.\"\n },\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"details\": [\n  {\n   \"format\": \"markdown\",\n   \"html\": \"<p>Lorem ipsum dolor sit amet.</p>\",\n   \"raw\": \"Lorem ipsum dolor sit amet.\"\n  }\n ],\n \"id\": 1,\n \"version\": 31\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": {\n        \"raw\": \"The updated comment\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/activities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"activities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Activity id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit journals",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": {\n        \"raw\": \"The updated comment\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/activities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"activities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Activity id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to edit the comment of this journal entry.\"\n}"
								},
								{
									"name": "Returned if the client tries to modify a read-only property.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": {\n        \"raw\": \"The updated comment\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/activities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"activities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Activity id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyIsReadOnly\",\n \"message\": \"The ID of an activity can't be changed.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "attachments",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete attachment",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/attachments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"attachments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Attachment id"
												}
											]
										},
										"description": "Permanently deletes the specified attachment."
									},
									"response": [
										{
											"name": "Returned if the attachment was deleted successfully.\n\nNote that the response body is empty as of now. In future versions of the API a body\n*might* be returned along with an appropriate HTTP status.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/attachments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"attachments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Attachment id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit permission for the container of the attachment or being the author for attachments without container\n\n*Note that you will only receive this error, if you are at le",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/attachments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"attachments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Attachment id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to delete this attachment.\"\n}"
										},
										{
											"name": "Returned if the attachment does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view permission for the container of the attachment or being the author for attachments without container\n\n*Note: A client wi",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/attachments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"attachments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Attachment id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified attachment does not exist.\"\n}"
										}
									]
								},
								{
									"name": "View attachment",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/attachments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"attachments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Attachment id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/attachments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"attachments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Attachment id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"author\": {\n   \"href\": \"/api/v3/users/1\"\n  },\n  \"container\": {\n   \"href\": \"/api/v3/work_packages/1\"\n  },\n  \"downloadLocation\": {\n   \"href\": \"/some/remote/aws/url/image.png\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/attachments/1\"\n  },\n  \"staticDownloadLocation\": {\n   \"href\": \"/api/v3/attachments/1/download\"\n  }\n },\n \"_type\": \"Attachment\",\n \"contentType\": \"image/png\",\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"description\": {\n  \"format\": \"plain\",\n  \"html\": \"<p>A picture of a cute cat</p>\",\n  \"raw\": \"A picture of a cute cat\"\n },\n \"digest\": {\n  \"algorithm\": \"md5\",\n  \"hash\": \"64c26a8403cd796ea4cf913cda2ee4a9\"\n },\n \"fileName\": \"cat.png\",\n \"filesize\": 24,\n \"id\": 1\n}"
										},
										{
											"name": "Returned if the attachment does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view permission for the container of the attachment or being the author for attachments without container\n\n*Note: A client wi",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/attachments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"attachments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Attachment id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified attachment does not exist.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create Attachment",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"attachments"
									]
								},
								"description": "Clients can create attachments without a container first and attach them later on.\nThis is useful if the container does not exist at the time the attachment is uploaded.\nAfter the upload, the client can then claim such containerless attachments for any resource eligible (e.g. WorkPackage) on subsequent requests.\nThe upload and the claiming *must* be done for the same user account. Attachments uploaded by another user cannot be claimed and\nonce claimed for a resource, they cannot be claimed by another.\n\nThe upload request must be of type `multipart/form-data` with exactly two parts.\n\nThe first part *must* be called `metadata`. Its content type is expected to be `application/json`,\nthe body *must* be a single JSON object, containing at least the `fileName` and optionally the attachments `description`.\n\nThe second part *must* be called `file`, its content type *should* match the mime type of the file.\nThe body *must* be the raw content of the file.\nNote that a `filename` *must* be indicated in the `Content-Disposition` of this part, although it will be ignored.\nInstead the `fileName` inside the JSON of the metadata part will be used."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"attachments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"author\": {\n   \"href\": \"/api/v3/users/1\"\n  },\n  \"container\": {\n   \"href\": \"/api/v3/work_packages/1\"\n  },\n  \"downloadLocation\": {\n   \"href\": \"/some/remote/aws/url/image.png\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/attachments/1\"\n  },\n  \"staticDownloadLocation\": {\n   \"href\": \"/api/v3/attachments/1/download\"\n  }\n },\n \"_type\": \"Attachment\",\n \"contentType\": \"image/png\",\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"description\": {\n  \"format\": \"plain\",\n  \"html\": \"<p>A picture of a cute cat</p>\",\n  \"raw\": \"A picture of a cute cat\"\n },\n \"digest\": {\n  \"algorithm\": \"md5\",\n  \"hash\": \"64c26a8403cd796ea4cf913cda2ee4a9\"\n },\n \"fileName\": \"cat.png\",\n \"filesize\": 24,\n \"id\": 1\n}"
								},
								{
									"name": "Returned if the client sends a not understandable request. Reasons include:\n\n* Omitting one of the required parts (metadata and file)\n\n* sending unparsable JSON in the metadata part",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"attachments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request could not be parsed as JSON.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** At least one permission in any project: edit work package, add work package, edit messages, edit wiki pages (plugins might extend this list)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"attachments"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to delete this attachment.\"\n}"
								},
								{
									"name": "Returned if the client tries to send an invalid attachment.\nReasons are:\n\n* Omitting the file name (`fileName` property of metadata part)\n\n* Sending a file that is too large",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"attachments"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"File is too large (maximum size is 5242880 Bytes).\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "capabilities",
					"item": [
						{
							"name": "List capabilities",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/capabilities?filters=[{ \"principal\": { \"operator\": \"=\", \"values\": [\"1\"] }\" }]&sortBy=[[\"id\", \"asc\"]]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"capabilities"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"principal\": { \"operator\": \"=\", \"values\": [\"1\"] }\" }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.\n\n+ action: Get all capabilities of a certain action\n\n+ principal: Get all capabilities of a principal\n\n+ context: Get all capabilities within a context. Note that for a project context the client needs to provide `p{id}`, e.g. `p5` and for the global context a `g`"
										},
										{
											"key": "sortBy",
											"value": "[[\"id\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:\n\n+ id: Sort by the capabilities id"
										}
									]
								},
								"description": "Returns a collection of actions assigned to a principal in a context. The client can choose to filter the actions similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain actions, for which the requesting client has sufficient permissions"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/capabilities?filters=[{ \"principal\": { \"operator\": \"=\", \"values\": [\"1\"] }\" }]&sortBy=[[\"id\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"capabilities"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"principal\": { \"operator\": \"=\", \"values\": [\"1\"] }\" }]"
												},
												{
													"key": "sortBy",
													"value": "[[\"id\", \"asc\"]]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"action\": {\n      \"href\": \"/api/v3/actions/work_packages/create\",\n      \"title\": \"Add work package\"\n     },\n     \"context\": {\n      \"href\": \"/api/v3/projects/123\",\n      \"title\": \"A project\"\n     },\n     \"principal\": {\n      \"href\": \"/api/v3/users/567\",\n      \"title\": \"Some user\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/capabilities/work_packages/create/p123-567\"\n     }\n    },\n    \"_type\": \"Capability\",\n    \"id\": \"work_packages/create/p123-567\"\n   },\n   {\n    \"_links\": {\n     \"action\": {\n      \"href\": \"/api/v3/actions/work_packages/assignee\"\n     },\n     \"context\": {\n      \"href\": \"/api/v3/projects/123\",\n      \"title\": \"A project\"\n     },\n     \"principal\": {\n      \"href\": \"/api/v3/users/567\",\n      \"title\": \"Some user\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/capabilities/work_packages/assignee/p123-567\"\n     }\n    },\n    \"_type\": \"Capability\",\n    \"id\": \"work_packages/assignee/p123-567\"\n   },\n   {\n    \"_links\": {\n     \"action\": {\n      \"href\": \"/api/v3/actions/memberships/create\"\n     },\n     \"context\": {\n      \"href\": \"/api/v3/projects/345\",\n      \"title\": \"A project\"\n     },\n     \"principal\": {\n      \"href\": \"/api/v3/users/821\",\n      \"title\": \"Some user\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/capabilities/memberships/create/p345-821\",\n      \"title\": \"Create members\"\n     }\n    },\n    \"_type\": \"Capability\",\n    \"id\": \"memberships/create/p345-821\"\n   },\n   {\n    \"_links\": {\n     \"context\": {\n      \"href\": \"/api/v3/capabilities/context/global\",\n      \"title\": \"Global\"\n     },\n     \"principal\": {\n      \"href\": \"/api/v3/users/567\",\n      \"title\": \"Some user\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/capabilities/users/delete/g-567\",\n      \"title\": \"Delete user\"\n     }\n    },\n    \"_type\": \"Capability\",\n    \"id\": \"users/delete/g-567\"\n   }\n  ]\n },\n \"_links\": {\n  \"changeSize\": {\n   \"href\": \"/api/v3/capabilities?pageSize={size}\",\n   \"templated\": true\n  },\n  \"jumpTo\": {\n   \"href\": \"/api/v3/capabilities?offset={offset}\",\n   \"templated\": true\n  },\n  \"self\": {\n   \"href\": \"/api/v3/capabilities\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 4,\n \"total\": 4\n}"
								}
							]
						},
						{
							"name": "View global context",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/capabilities/context/global",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"capabilities",
										"context",
										"global"
									]
								},
								"description": "Returns the global capability context. This context is necessary to consistently link to a context even if the context is not a project."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/capabilities/context/global",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"capabilities",
												"context",
												"global"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/capabilities/context/global\"\n  }\n },\n \"_type\": \"CapabilityContext::Global\",\n \"id\": \"global\"\n}"
								},
								{
									"name": "Returned if the action does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/capabilities/context/global",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"capabilities",
												"context",
												"global"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "View capabilities",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/capabilities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"capabilities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "work_packages/create/p123-567",
											"description": "(Required) capability id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/capabilities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"capabilities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "work_packages/create/p123-567",
													"description": "(Required) capability id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"action\": {\n   \"href\": \"/api/v3/actions/work_packages/create\",\n   \"title\": \"Add work package\"\n  },\n  \"context\": {\n   \"href\": \"/api/v3/projects/123\",\n   \"title\": \"A project\"\n  },\n  \"principal\": {\n   \"href\": \"/api/v3/users/567\",\n   \"title\": \"Some user\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/capabilities/work_packages/create/p123-567\"\n  }\n },\n \"_type\": \"Capability\",\n \"id\": \"work_packages/create/p123-567\"\n}"
								},
								{
									"name": "Returned if the capability does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/capabilities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"capabilities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "work_packages/create/p123-567",
													"description": "(Required) capability id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "custom actions/{id}",
					"item": [
						{
							"name": "View custom action",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/custom_actions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"custom_actions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) The id of the custom action to fetch"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/custom_actions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"custom_actions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) The id of the custom action to fetch"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"executeImmediately\": {\n   \"href\": \"/apiChanges project and type in one go\",\n   \"method\": \"post\",\n   \"title\": \"Execute Change project and type\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/custom_actions/2\",\n   \"title\": \"Change project and type\"\n  }\n },\n \"_type\": \"CustomAction\",\n \"description\": \"Changes project and type in one go\",\n \"name\": \"Change project and type\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work packages in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/custom_actions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"custom_actions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) The id of the custom action to fetch"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if the custom action does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/custom_actions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"custom_actions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) The id of the custom action to fetch"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "Execute custom action",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"_links\": {\n        \"workPackage\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": \"3\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v3/custom_actions/:id/execute",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"custom_actions",
										":id",
										"execute"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) The id of the custom action to execute"
										}
									]
								},
								"description": "A POST to this end point executes the custom action on the work package provided in the payload. The altered work package will be returned. In order to avoid executing\n the custom action unbeknown to a change that has already taken place, the client has to provide the work package's current lockVersion."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"workPackage\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": \"3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/custom_actions/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"custom_actions",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) The id of the custom action to execute"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"workPackage\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": \"3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/custom_actions/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"custom_actions",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) The id of the custom action to execute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work packages - Additional permissions might be required based on the custom action.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"workPackage\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": \"3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/custom_actions/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"custom_actions",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) The id of the custom action to execute"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if the custom action does not exist.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"workPackage\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": \"3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/custom_actions/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"custom_actions",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) The id of the custom action to execute"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								},
								{
									"name": "Returned if the client provided an outdated lockVersion or no lockVersion at all.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"workPackage\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": \"3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/custom_actions/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"custom_actions",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) The id of the custom action to execute"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:UpdateConflict\",\n \"message\": \"Couldn't update the resource because of conflicting modifications.\"\n}"
								},
								{
									"name": "Returned if the custom action was not executed successfully e.g. when a constraint on a work package property was violated.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"workPackage\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": \"3\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/custom_actions/:id/execute",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"custom_actions",
												":id",
												"execute"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) The id of the custom action to execute"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"delay\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Delay must be a number greater than or equal to 0\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "documents",
					"item": [
						{
							"name": "List Documents",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/documents?offset=1&pageSize=55287423&sortBy=[[\"created_at\", \"asc\"]]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"documents"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "Page number inside the requested collection."
										},
										{
											"key": "pageSize",
											"value": "55287423",
											"description": "Number of elements to display per page."
										},
										{
											"key": "sortBy",
											"value": "[[\"created_at\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ created_at: Sort by document creation datetime"
										}
									]
								},
								"description": "The documents returned depend on the provided parameters and also on the requesting user's permissions."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/documents?offset=1&pageSize=55287423&sortBy=[[\"created_at\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"documents"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"created_at\", \"asc\"]]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"addAttachment\": {\n      \"href\": \"/api/v3/documents/1/attachments\",\n      \"method\": \"post\"\n     },\n     \"attachments\": {\n      \"href\": \"/api/v3/documents/1/attachments\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/19\",\n      \"title\": \"Some project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/documents/1\",\n      \"title\": \"Some document\"\n     }\n    },\n    \"_type\": \"Document\",\n    \"createdAt\": \"2018-12-10T20:53:39Z\",\n    \"description\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>\",\n     \"raw\": \"Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.\"\n    },\n    \"id\": 1,\n    \"title\": \"Some other document\"\n   },\n   {\n    \"_links\": {\n     \"addAttachment\": {\n      \"href\": \"/api/v3/documents/2/attachments\",\n      \"method\": \"post\"\n     },\n     \"attachments\": {\n      \"href\": \"/api/v3/documents/2/attachments\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/29\",\n      \"title\": \"Some other project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/documents/2\",\n      \"title\": \"Some other document\"\n     }\n    },\n    \"_type\": \"Document\",\n    \"createdAt\": \"2018-12-10T20:55:54Z\",\n    \"description\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>\",\n     \"raw\": \"Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.\"\n    },\n    \"id\": 2,\n    \"title\": \"Some other document\"\n   }\n  ]\n },\n \"_links\": {\n  \"changeSize\": {\n   \"href\": \"/api/v3/documents?offset=1&pageSize=%7Bsize%7D\",\n   \"templated\": true\n  },\n  \"jumpTo\": {\n   \"href\": \"/api/v3/documents?offset=%7Boffset%7D&pageSize=30\",\n   \"templated\": true\n  },\n  \"self\": {\n   \"href\": \"/api/v3/documents?offset=1&pageSize=30\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"offset\": 1,\n \"pageSize\": 30,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client sends invalid request parameters e.g. filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/documents?offset=1&pageSize=55287423&sortBy=[[\"created_at\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"documents"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"created_at\", \"asc\"]]"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidQuery\",\n \"message\": [\n  \"Filters Invalid filter does not exist.\"\n ]\n}"
								},
								{
									"name": "Returned if the client is not logged in and login is required.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/documents?offset=1&pageSize=55287423&sortBy=[[\"created_at\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"documents"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"created_at\", \"asc\"]]"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to view this resource.\"\n}"
								}
							]
						},
						{
							"name": "View document",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/documents/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"documents",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Document id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/documents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"documents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Document id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"attachments\": {\n   \"_embedded...\": {\n    \"elements\": []\n   },\n   \"_links\": {\n    \"self\": {\n     \"href\": \"/api/v3/documents/1/attachments\"\n    }\n   },\n   \"_type\": \"Collection\",\n   \"count\": 2,\n   \"total\": 2\n  },\n  \"project\": {\n   \"_type\": \"Project...\"\n  }\n },\n \"_links\": {\n  \"addAttachment\": {\n   \"href\": \"/api/v3/documents/1/attachments\",\n   \"method\": \"post\"\n  },\n  \"attachments\": {\n   \"href\": \"/api/v3/documents/1/attachments\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/19\",\n   \"title\": \"Some project\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/documents/1\",\n   \"title\": \"Some document\"\n  }\n },\n \"_type\": \"Document\",\n \"createdAt\": \"2018-12-10T20:53:39Z\",\n \"description\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>\",\n  \"raw\": \"Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.\"\n },\n \"id\": 1,\n \"title\": \"Some other document\"\n}"
								},
								{
									"name": "Returned if the document does not exist or if the user does not have permission to view it.\n\n**Required permission** `view documents` in the project the document belongs to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/documents/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"documents",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Document id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "example",
					"item": [
						{
							"name": "show or validate form",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"_type\": \"Example\",\n    \"lockVersion\": 5,\n    \"subject\": \"An example title\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v3/example/form",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"example",
										"form"
									]
								},
								"description": "This is an example of how a form might look like. Note that this endpoint does not exist in the actual implementation."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_type\": \"Example\",\n    \"lockVersion\": 5,\n    \"subject\": \"An example title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/example/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"example",
												"form"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"payload\": {\n   \"_links\": {\n    \"status\": {\n     \"href\": \"/api/v3/statuses/1\"\n    }\n   },\n   \"_type\": \"Example\",\n   \"lockVersion\": 5,\n   \"subject\": \"An example title\"\n  },\n  \"schema\": {\n   \"_links\": {\n    \"self\": {\n     \"href\": \"/api/v3/example/schema\"\n    }\n   },\n   \"_type\": \"Schema\",\n   \"lockVersion\": {\n    \"type\": \"Integer\",\n    \"writable\": false\n   },\n   \"status\": {\n    \"_embedded\": {\n     \"allowedValues\": [\n      {\n       \"_links\": {\n        \"self\": {\n         \"href\": \"/api/v3/statuses/1\"\n        }\n       },\n       \"_type\": \"Status\",\n       \"createdAt\": \"2014-05-21T08:51:20Z\",\n       \"defaultDoneRatio\": 0,\n       \"id\": 1,\n       \"isClosed\": false,\n       \"isDefault\": true,\n       \"name\": \"New\",\n       \"position\": 1,\n       \"updatedAt\": \"2014-05-21T09:12:00Z\"\n      },\n      {\n       \"_links\": {\n        \"self\": {\n         \"href\": \"/api/v3/statuses/2\"\n        }\n       },\n       \"_type\": \"Status\",\n       \"createdAt\": \"2014-05-21T08:51:20Z\",\n       \"defaultDoneRatio\": 100,\n       \"id\": 2,\n       \"isClosed\": true,\n       \"isDefault\": false,\n       \"name\": \"Closed\",\n       \"position\": 2,\n       \"updatedAt\": \"2014-05-21T09:12:00Z\"\n      }\n     ]\n    },\n    \"_links\": {\n     \"allowedValues\": [\n      {\n       \"href\": \"/api/v3/statuses/1\",\n       \"title\": \"New\"\n      },\n      {\n       \"href\": \"/api/v3/statuses/2\",\n       \"title\": \"Closed\"\n      }\n     ]\n    },\n    \"type\": \"Status\"\n   },\n   \"subject\": {\n    \"maxLength\": 255,\n    \"minLength\": 1,\n    \"type\": \"String\"\n   }\n  },\n  \"validationErrors\": {\n   \"subject\": {\n    \"_type\": \"Error\",\n    \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:BadExampleError\",\n    \"message\": \"For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors.\"\n   }\n  }\n },\n \"_links\": {\n  \"commit\": {\n   \"href\": \"/api/v3/example\",\n   \"method\": \"PATCH\"\n  },\n  \"previewMarkup\": {\n   \"href\": \"/api/v3/render/markdown\",\n   \"method\": \"POST\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/example/form\"\n  },\n  \"validate\": {\n   \"href\": \"/api/v3/example/form\",\n   \"method\": \"POST\"\n  }\n },\n \"_type\": \"Form\"\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body and the request body\nwas not empty.\n\nNote that this error only occurs when the content is not at all a single JSON object.\nIt **does not occur** for requests containing undefined ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_type\": \"Example\",\n    \"lockVersion\": 5,\n    \"subject\": \"An example title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/example/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"example",
												"form"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was neither empty, nor did it contain a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to modify the associated resource.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_type\": \"Example\",\n    \"lockVersion\": 5,\n    \"subject\": \"An example title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/example/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"example",
												"form"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to edit example resources.\"\n}"
								},
								{
									"name": "Returned if underlying resource was changed since the client requested the form. This is determined using the `lockVersion` property.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_type\": \"Example\",\n    \"lockVersion\": 5,\n    \"subject\": \"An example title\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/example/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"example",
												"form"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:UpdateConflict\",\n \"message\": \"The resource you are about to edit was changed in the meantime.\"\n}"
								}
							]
						},
						{
							"name": "view the schema",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/example/schema",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"example",
										"schema"
									]
								},
								"description": "This is an example of how a schema might look like. Note that this endpoint does not exist in the actual implementation."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/example/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"example",
												"schema"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_dependencies\": [],\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/example/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"lockVersion\": {\n  \"name\": \"Resource Version\",\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"status\": {\n  \"_embedded\": {\n   \"allowedValues\": [\n    {\n     \"_links\": {\n      \"self\": {\n       \"href\": \"/api/v3/statuses/1\"\n      }\n     },\n     \"_type\": \"Status\",\n     \"createdAt\": \"2014-05-21T08:51:20Z\",\n     \"defaultDoneRatio\": 0,\n     \"id\": 1,\n     \"isClosed\": false,\n     \"isDefault\": true,\n     \"name\": \"New\",\n     \"position\": 1,\n     \"updatedAt\": \"2014-05-21T09:12:00Z\"\n    },\n    {\n     \"_links\": {\n      \"self\": {\n       \"href\": \"/api/v3/statuses/2\"\n      }\n     },\n     \"_type\": \"Status\",\n     \"createdAt\": \"2014-05-21T08:51:20Z\",\n     \"defaultDoneRatio\": 100,\n     \"id\": 2,\n     \"isClosed\": true,\n     \"isDefault\": false,\n     \"name\": \"Closed\",\n     \"position\": 2,\n     \"updatedAt\": \"2014-05-21T09:12:00Z\"\n    }\n   ]\n  },\n  \"_links\": {\n   \"allowedValues\": [\n    {\n     \"href\": \"/api/v3/statuses/1\",\n     \"title\": \"New\"\n    },\n    {\n     \"href\": \"/api/v3/statuses/2\",\n     \"title\": \"Closed\"\n    }\n   ]\n  },\n  \"location\": \"_links\",\n  \"name\": \"Status\",\n  \"type\": \"Status\"\n },\n \"subject\": {\n  \"maxLength\": 255,\n  \"minLength\": 1,\n  \"name\": \"Subject\",\n  \"type\": \"String\"\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "grids",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "View grid",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Grid id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/grids/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"grids",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Grid id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"scope\": {\n   \"href\": \"/my/page\",\n   \"type\": \"text/html\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/grids/2\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/grids/2/form\",\n   \"method\": \"post\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/grids/2\",\n   \"method\": \"patch\"\n  }\n },\n \"_type\": \"Grid\",\n \"columnCount\": 5,\n \"createdAt\": \"2018-12-03T16:58:30Z\",\n \"id\": 2,\n \"rowCount\": 8,\n \"updatedAt\": \"2018-12-13T19:36:40Z\",\n \"widgets\": [\n  {\n   \"_type\": \"GridWidget\",\n   \"endColumn\": 3,\n   \"endRow\": 8,\n   \"identifier\": \"time_entries_current_user\",\n   \"startColumn\": 1,\n   \"startRow\": 1\n  },\n  {\n   \"_type\": \"GridWidget\",\n   \"endColumn\": 5,\n   \"endRow\": 8,\n   \"identifier\": \"news\",\n   \"startColumn\": 4,\n   \"startRow\": 3\n  },\n  {\n   \"_type\": \"GridWidget\",\n   \"endColumn\": 6,\n   \"endRow\": 3,\n   \"identifier\": \"documents\",\n   \"startColumn\": 3,\n   \"startRow\": 1\n  }\n ]\n}"
										},
										{
											"name": "Returned if the Grid does not exist or if the user does not have permission to view it.\n\n**Required permission** depends on the page the grid is defined for",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/grids/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"grids",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Grid id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "Grid Update Form",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids/:id/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids",
												":id",
												"form"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the grid being modified"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/grids/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"grids",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the grid being modified"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"payload\": {\n   \"columnCount\": 5,\n   \"rowCount\": 6,\n   \"widgets\": [\n    {\n     \"_type\": \"GridWidget\",\n     \"endColumn\": 3,\n     \"endRow\": 8,\n     \"identifier\": \"time_entries_current_user\",\n     \"startColumn\": 1,\n     \"startRow\": 1\n    },\n    {\n     \"_type\": \"GridWidget\",\n     \"endColumn\": 5,\n     \"endRow\": 8,\n     \"identifier\": \"news\",\n     \"startColumn\": 4,\n     \"startRow\": 3\n    },\n    {\n     \"_type\": \"GridWidget\",\n     \"endColumn\": 6,\n     \"endRow\": 3,\n     \"identifier\": \"documents\",\n     \"startColumn\": 3,\n     \"startRow\": 1\n    }\n   ]\n  },\n  \"schema\": {\n   \"_links\": {},\n   \"_type\": \"Schema\",\n   \"columnCount\": {\n    \"hasDefault\": false,\n    \"name\": \"Number of columns\",\n    \"required\": true,\n    \"type\": \"Integer\",\n    \"writable\": true\n   },\n   \"createdAt\": {\n    \"hasDefault\": false,\n    \"name\": \"Created on\",\n    \"required\": true,\n    \"type\": \"DateTime\",\n    \"writable\": false\n   },\n   \"id\": {\n    \"hasDefault\": false,\n    \"name\": \"ID\",\n    \"required\": true,\n    \"type\": \"Integer\",\n    \"writable\": false\n   },\n   \"rowCount\": {\n    \"hasDefault\": false,\n    \"name\": \"Number of rows\",\n    \"required\": true,\n    \"type\": \"Integer\",\n    \"writable\": true\n   },\n   \"scope\": {\n    \"_links\": {},\n    \"hasDefault\": false,\n    \"name\": \"Page\",\n    \"required\": true,\n    \"type\": \"Href\",\n    \"writable\": false\n   },\n   \"updatedAt\": {\n    \"hasDefault\": false,\n    \"name\": \"Updated on\",\n    \"required\": true,\n    \"type\": \"DateTime\",\n    \"writable\": false\n   },\n   \"widgets\": {\n    \"_links\": {},\n    \"hasDefault\": false,\n    \"name\": \"Widgets\",\n    \"required\": true,\n    \"type\": \"[]GridWidget\",\n    \"writable\": true\n   }\n  },\n  \"validationErrors\": {\n   \"widgets\": {\n    \"_embedded\": {\n     \"errors\": [\n      {\n       \"_embedded\": {\n        \"details\": {\n         \"attribute\": \"widgets\"\n        }\n       },\n       \"_type\": \"Error\",\n       \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n       \"message\": \"Widgets is outside of the grid.\"\n      },\n      {\n       \"_embedded\": {\n        \"details\": {\n         \"attribute\": \"widgets\"\n        }\n       },\n       \"_type\": \"Error\",\n       \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n       \"message\": \"Widgets is outside of the grid.\"\n      }\n     ]\n    },\n    \"_type\": \"Error\",\n    \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MultipleErrors\",\n    \"message\": \"Multiple field constraints have been violated.\"\n   }\n  }\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/grids/2/form\",\n   \"method\": \"post\"\n  },\n  \"validate\": {\n   \"href\": \"/api/v3/grids/2/form\",\n   \"method\": \"post\"\n  }\n },\n \"_type\": \"Form\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** depends on the page the grid is defined for.\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding grid.*",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/grids/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"grids",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the grid being modified"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the grid does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/grids/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"grids",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the grid being modified"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Grids",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/grids?offset=1&pageSize=55287423&filters=[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] } }]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"grids"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "Page number inside the requested collection."
										},
										{
											"key": "pageSize",
											"value": "55287423",
											"description": "Number of elements to display per page."
										},
										{
											"key": "filters",
											"value": "[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] } }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:\n\n+ page: Filter grid by work package"
										}
									]
								},
								"description": "Lists all grids matching the provided filters and being part of the selected query page. The grids returned will also depend on the permissions of the requesting user."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids?offset=1&pageSize=55287423&filters=[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "filters",
													"value": "[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] } }]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"scope\": {\n   \"href\": \"/my/page\",\n   \"type\": \"text/html\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/grids/2\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/grids/2/form\",\n   \"method\": \"post\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/grids/2\",\n   \"method\": \"patch\"\n  }\n },\n \"_type\": \"Grid\",\n \"columnCount\": 5,\n \"createdAt\": \"2018-12-03T16:58:30Z\",\n \"id\": 2,\n \"rowCount\": 8,\n \"updatedAt\": \"2018-12-13T19:36:40Z\",\n \"widgets\": [\n  {\n   \"_type\": \"GridWidget\",\n   \"endColumn\": 3,\n   \"endRow\": 8,\n   \"identifier\": \"time_entries_current_user\",\n   \"startColumn\": 1,\n   \"startRow\": 1\n  },\n  {\n   \"_type\": \"GridWidget\",\n   \"endColumn\": 5,\n   \"endRow\": 8,\n   \"identifier\": \"news\",\n   \"startColumn\": 4,\n   \"startRow\": 3\n  },\n  {\n   \"_type\": \"GridWidget\",\n   \"endColumn\": 6,\n   \"endRow\": 3,\n   \"identifier\": \"documents\",\n   \"startColumn\": 3,\n   \"startRow\": 1\n  }\n ]\n}"
								},
								{
									"name": "Returned if the client sends invalid request parameters e.g. filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids?offset=1&pageSize=55287423&filters=[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "filters",
													"value": "[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] } }]"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidQuery\",\n \"message\": [\n  \"Filters Invalid filter does not exist.\"\n ]\n}"
								},
								{
									"name": "Returned if the client is not logged in and login is required.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids?offset=1&pageSize=55287423&filters=[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "filters",
													"value": "[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] } }]"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to view this resource.\"\n}"
								}
							]
						},
						{
							"name": "Update Grid",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/grids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"grids"
									]
								},
								"description": "Updates the given grid by applying the attributes provided in the body.  The constraints applied to the grid depend on the page the grid is placed in which is why the create form end point should be used to be guided when wanting to update a grid."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "null"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** The permission depends on the page the grid is placed in.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Grid",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/grids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"grids"
									]
								},
								"description": "Creates a new grid applying the attributes provided in the body. The constraints applied to the grid depend on the page the grid is placed in which is why the create form end point should be used to be guided when wanting to create a grid."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "null"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Depends on the page the grid is defined for.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Grid Create Form",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/grids/form",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"grids",
										"form"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/grids/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"grids",
												"form"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "groups",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete group",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Group id"
												}
											]
										},
										"description": "Deletes the group."
									},
									"response": [
										{
											"name": "Returned if the group was successfully deleted\n\nNote that the response body is empty as of now. In future versions of the API a body\n*might* be returned, indicating the progress of deletion.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the group does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** Administrator\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's why",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "View group",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Group id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"delete\": {\n   \"href\": \"/api/v3/group/9\",\n   \"method\": \"delete\"\n  },\n  \"members\": [\n   {\n    \"href\": \"/api/v3/users/363\",\n    \"title\": \"First user\"\n   },\n   {\n    \"href\": \"/api/v3/users/60\",\n    \"title\": \"Second user\"\n   }\n  ],\n  \"memberships\": {\n   \"href\": \"/api/v3/memberships?filters=[{\\\"principal\\\":{\\\"operator\\\":\\\"=\\\",\\\"values\\\":[\\\"9\\\"]}}]\",\n   \"title\": \"Memberships\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/groups/9\",\n   \"title\": \"The group\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/group/9\",\n   \"method\": \"patch\"\n  }\n },\n \"_type\": \"Group\",\n \"createdAt\": \"2015-09-23T11:06:36Z\",\n \"id\": 9,\n \"name\": \"The group\",\n \"updatedAt\": \"2015-09-23T11:06:36Z\"\n}"
										},
										{
											"name": "Returned if the group does not exist or if the API user does not have permission to view them.\n\n**Required permission** If the user has the *manage members* permission in at least one project the user will be able to query all groups. If not, the user\nwil",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "Update group",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Group id"
												}
											]
										},
										"description": "Updates the given group by applying the attributes provided in the\nbody.\n\nPlease note that the `members` array provided will override the existing set of members (similar to a PUT). A client thus\nhas to provide the complete list of members the group is to have after the PATCH even if only one member is to be added."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"delete\": {\n   \"href\": \"/api/v3/group/9\",\n   \"method\": \"delete\"\n  },\n  \"members\": [\n   {\n    \"href\": \"/api/v3/users/363\",\n    \"title\": \"First user\"\n   },\n   {\n    \"href\": \"/api/v3/users/60\",\n    \"title\": \"Second user\"\n   }\n  ],\n  \"memberships\": {\n   \"href\": \"/api/v3/memberships?filters=[{\\\"principal\\\":{\\\"operator\\\":\\\"=\\\",\\\"values\\\":[\\\"9\\\"]}}]\",\n   \"title\": \"Memberships\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/groups/9\",\n   \"title\": \"The group\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/group/9\",\n   \"method\": \"patch\"\n  }\n },\n \"_type\": \"Group\",\n \"createdAt\": \"2015-09-23T11:06:36Z\",\n \"id\": 9,\n \"name\": \"The group\",\n \"updatedAt\": \"2015-09-23T11:06:36Z\"\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the group does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission** If the user has the *manage members* permission in at least one project the user will be able to query all groups. If not, the user",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										},
										{
											"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Group id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"members\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Member is already taken.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/groups?sortBy=[[\"id\", \"asc\"]]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"groups"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "[[\"id\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ created_at: Sort by group creation datetime\n\n+ updated_at: Sort by the time the group was updated last"
										}
									]
								},
								"description": "Returns a collection of groups. The client can choose to filter the groups similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain groups, for which the requesting client has sufficient permissions (*view_members*, *manage_members*)."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/groups?sortBy=[[\"id\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"groups"
											],
											"query": [
												{
													"key": "sortBy",
													"value": "[[\"id\", \"asc\"]]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"members\": [\n      {\n       \"href\": \"/api/v3/users/363\",\n       \"title\": \"First user\"\n      },\n      {\n       \"href\": \"/api/v3/users/60\",\n       \"title\": \"Second user\"\n      }\n     ],\n     \"memberships\": {\n      \"href\": \"/api/v3/memberships?filters=[{\\\"principal\\\":{\\\"operator\\\":\\\"=\\\",\\\"values\\\":[\\\"9\\\"]}}]\",\n      \"title\": \"Memberships\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/groups/9\",\n      \"title\": \"The group\"\n     }\n    },\n    \"_type\": \"Group\",\n    \"createdAt\": \"2015-09-23T11:06:36Z\",\n    \"id\": 9,\n    \"name\": \"The group\",\n    \"updatedAt\": \"2015-09-23T11:06:36Z\"\n   },\n   {\n    \"_links\": {\n     \"members\": [\n      {\n       \"href\": \"/api/v3/users/343\",\n       \"title\": \"Third user\"\n      },\n      {\n       \"href\": \"/api/v3/users/60\",\n       \"title\": \"Second user\"\n      }\n     ],\n     \"memberships\": {\n      \"href\": \"/api/v3/memberships?filters=[{\\\"principal\\\":{\\\"operator\\\":\\\"=\\\",\\\"values\\\":[\\\"123\\\"]}}]\",\n      \"title\": \"Memberships\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/groups/123\",\n      \"title\": \"Another group\"\n     }\n    },\n    \"_type\": \"Group\",\n    \"createdAt\": \"2018-09-23T11:06:36Z\",\n    \"id\": 123,\n    \"name\": \"Another group\",\n    \"updatedAt\": \"2019-09-23T11:06:36Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/groups\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** View members or manage members in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/groups?sortBy=[[\"id\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"groups"
											],
											"query": [
												{
													"key": "sortBy",
													"value": "[[\"id\", \"asc\"]]"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "Create group",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v3/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"groups"
									]
								},
								"description": "Creates a new group applying the attributes provided in the body."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"groups"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Group\",\n \"id\": 9,\n \"name\": \"The group\",\n \"createdAt\": \"2015-09-23T11:06:36Z\",\n \"updatedAt\": \"2015-09-23T11:06:36Z\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/groups/9\",\n   \"title\": \"The group\"\n  },\n  \"delete\": {\n   \"href\": \"/api/v3/group/9\",\n   \"method\": \"delete\"\n  },\n  \"memberships\": {\n   \"href\": \"/api/v3/memberships?filters=[{\\\"principal\\\":{\\\"operator\\\":\\\"=\\\",\\\"values\\\":[\\\"9\\\"]}}]\",\n   \"title\": \"Memberships\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/group/9\",\n   \"method\": \"patch\"\n  },\n  \"members\": [\n   {\n    \"href\": \"/api/v3/users/363\",\n    \"title\": \"First user\"\n   },\n   {\n    \"href\": \"/api/v3/users/60\",\n    \"title\": \"Second user\"\n   }\n  ]\n }\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"groups"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"groups"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "null",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"groups"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"name\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Name can't be blank.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "help texts",
					"item": [
						{
							"name": "List all help texts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/help_texts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"help_texts"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/help_texts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"help_texts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/help_texts/1\"\n     }\n    },\n    \"_type\": \"HelpText\",\n    \"attribute\": \"id\",\n    \"attributeCaption\": \"ID\",\n    \"helpText\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Help text for id attribute.</p>\",\n     \"raw\": \"Help text for id attribute.\"\n    },\n    \"id\": 1,\n    \"scope\": \"WorkPackage\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/help_texts/2\"\n     }\n    },\n    \"_type\": \"HelpText\",\n    \"attribute\": \"status\",\n    \"attributeCaption\": \"Status\",\n    \"helpText\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Help text for status attribute.</p>\",\n     \"raw\": \"Help text for status attribute.\"\n    },\n    \"id\": 2,\n    \"scope\": \"WorkPackage\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/help_texts\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								}
							]
						},
						{
							"name": "View help text",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/help_texts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"help_texts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Help text id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/help_texts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"help_texts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Help text id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"editText\": {\n   \"href\": \"/admin/attribute_help_texts/1/edit\",\n   \"type\": \"text/html\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/help_texts/1\"\n  }\n },\n \"_type\": \"HelpText\",\n \"attribute\": \"id\",\n \"attributeCaption\": \"ID\",\n \"helpText\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Help text for id attribute.</p>\",\n  \"raw\": \"Help text for id attribute.\"\n },\n \"id\": 1,\n \"scope\": \"WorkPackage\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "memberships",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete membership",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Membership id"
												}
											]
										},
										"description": "Deletes the membership."
									},
									"response": [
										{
											"name": "Returned if the membership was successfully deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage members",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the membership does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view members\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "View membership",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Membership id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"principal...\": {},\n  \"project...\": {},\n  \"roles...\": []\n },\n \"_links\": {\n  \"principal\": {\n   \"href\": \"/api/v3/users/4\",\n   \"title\": \"Some user\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/3\",\n   \"title\": \"A project\"\n  },\n  \"roles\": [\n   {\n    \"href\": \"/api/v3/roles/5\",\n    \"title\": \"Member\"\n   },\n   {\n    \"href\": \"/api/v3/roles/4\",\n    \"title\": \"Reader\"\n   }\n  ],\n  \"schema\": {\n   \"href\": \"/api/v3/memberships/schema\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/memberships/11\",\n   \"title\": \"Some user\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/memberships/11/form\",\n   \"method\": \"post\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/memberships/11\",\n   \"method\": \"patch\"\n  }\n },\n \"_type\": \"Membership\",\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"id\": 11,\n \"updatedAt\": \"2018-12-20T18:16:11Z\"\n}"
										},
										{
											"name": "Returned if the membership does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view members **or** manage members\n\n*Note: A client without sufficient permissions shall not be able to test for the existenc",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "Update membership",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Membership id"
												}
											]
										},
										"description": "Updates the given membership by applying the attributes provided in the body.\n\nBy providing a `notificationMessage` within the `_meta` block of the payload, the client can include a customized message to the user\nof the updated membership. In case of a group, the message will be sent to every user belonging to the group."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/memberships/11\",\n   \"title\": \"Some user\"\n  },\n  \"schema\": {\n   \"href\": \"/api/v3/memberships/schema\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/memberships/11/form\",\n   \"method\": \"post\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/memberships/11\",\n   \"method\": \"patch\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/3\",\n   \"title\": \"A project\"\n  },\n  \"principal\": {\n   \"href\": \"/api/v3/users/4\",\n   \"title\": \"Some user\"\n  },\n  \"roles\": [\n   {\n    \"href\": \"/api/v3/roles/5\",\n    \"title\": \"Member\"\n   },\n   {\n    \"href\": \"/api/v3/roles/4\",\n    \"title\": \"Reader\"\n   }\n  ]\n },\n \"_type\": \"Membership\",\n \"id\": 11,\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"updatedAt\": \"2018-12-20T18:16:11Z\",\n \"_embedded\": {\n  \"project...\": {},\n  \"principal...\": {},\n  \"roles...\": []\n }\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Manage members in the membership's project.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the membership does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view member\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's ",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										},
										{
											"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"roles\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Roles has an unassignable role.\"\n}"
										}
									]
								},
								{
									"name": "Membership update form",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/:id/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												":id",
												"form"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Membership id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"payload\": {\n   \"_links\": {\n    \"roles\": [\n     {\n      \"href\": \"/api/v3/roles/4\",\n      \"title\": \"A role\"\n     }\n    ]\n   },\n   \"_meta\": {\n    \"notificationMessage\": {\n     \"raw\": \"Alice, you can now also create work packages.\"\n    }\n   }\n  },\n  \"schema\": {\n   \"_dependencies\": [],\n   \"_links\": {},\n   \"_type\": \"Schema\",\n   \"createdAt\": {\n    \"hasDefault\": false,\n    \"name\": \"Created on\",\n    \"required\": true,\n    \"type\": \"DateTime\",\n    \"writable\": false\n   },\n   \"id\": {\n    \"hasDefault\": false,\n    \"name\": \"ID\",\n    \"required\": true,\n    \"type\": \"Integer\",\n    \"writable\": false\n   },\n   \"notificationMessage\": {\n    \"hasDefault\": false,\n    \"location\": \"_meta\",\n    \"name\": \"Message\",\n    \"options\": {},\n    \"required\": false,\n    \"type\": \"Formattable\",\n    \"writable\": true\n   },\n   \"principal\": {\n    \"_links\": {},\n    \"hasDefault\": false,\n    \"name\": \"Principal\",\n    \"required\": true,\n    \"type\": \"Principal\",\n    \"writable\": false\n   },\n   \"project\": {\n    \"_links\": {},\n    \"hasDefault\": false,\n    \"name\": \"Project\",\n    \"required\": false,\n    \"type\": \"Project\",\n    \"writable\": false\n   },\n   \"roles\": {\n    \"_links\": {\n     \"allowedValues\": {\n      \"href\": \"/api/v3/roles?filters=%5B%7B%22unit%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22project%22%5D%7D%7D%5D\"\n     }\n    },\n    \"hasDefault\": false,\n    \"location\": \"_links\",\n    \"name\": \"Role\",\n    \"required\": true,\n    \"type\": \"[]Role\",\n    \"writable\": true\n   },\n   \"updatedAt\": {\n    \"hasDefault\": false,\n    \"name\": \"Updated on\",\n    \"required\": true,\n    \"type\": \"DateTime\",\n    \"writable\": false\n   }\n  },\n  \"validationErrors\": {}\n },\n \"_links\": {\n  \"commit\": {\n   \"href\": \"/api/v3/memberships/5\",\n   \"method\": \"patch\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/memberships/5/form\",\n   \"method\": \"post\"\n  },\n  \"validate\": {\n   \"href\": \"/api/v3/memberships/5/form\",\n   \"method\": \"post\"\n  }\n },\n \"_type\": \"Form\"\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions in the version's project",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/memberships/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"memberships",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Membership id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List memberships",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/memberships?filters=[{ \"name\": { \"operator\": \"=\", \"values\": [\"A User\"] }\" }]&sortBy=[[\"id\", \"asc\"]]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"memberships"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"name\": { \"operator\": \"=\", \"values\": [\"A User\"] }\" }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.\nCurrently supported filters are:\n\n+ any_name_attribute: filters memberships based on the name of the principal. All possible name variants (and also email and login) are searched.\n\n+ blocked: reduces the result set to all memberships that are temporarily blocked or that are not blocked temporarily.\n\n+ group: filters memberships based on the name of a group. The group however is not the principal used for filtering. Rather, the memberships of the group are used as the filter values.\n\n+ name: filters memberships based on the name of the principal. Note that only the name is used which depends on a setting in the OpenProject instance.\n\n+ principal: filters memberships based on the id of the principal.\n\n+ project: filters memberships based on the id of the project.\n\n+ role: filters memberships based on the id of any role assigned to the membership.\n\n+ status: filters memberships based on the status of the principal.\n\n+ created_at: filters memberships based on the time the membership was created.\n\n+ updated_at: filters memberships based on the time the membership was updated last."
										},
										{
											"key": "sortBy",
											"value": "[[\"id\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ name: Sort by the name of the principal. Note that this depends on the setting for how the name is to be displayed at least for users.\n\n+ email: Sort by the email address of the principal. Groups and principal users, which do not have an email, are sorted last.\n\n+ status: Sort by the status of the principal. Groups and principal users, which do not have a status, are sorted together with the active users.\n\n+ created_at: Sort by membership creation datetime\n\n+ updated_at: Sort by the time the membership was updated last"
										}
									]
								},
								"description": "Returns a collection of memberships. The client can choose to filter the memberships similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain memberships, for which the requesting client has sufficient permissions (*view_members*, *manage_members*)."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships?filters=[{ \"name\": { \"operator\": \"=\", \"values\": [\"A User\"] }\" }]&sortBy=[[\"id\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"name\": { \"operator\": \"=\", \"values\": [\"A User\"] }\" }]"
												},
												{
													"key": "sortBy",
													"value": "[[\"id\", \"asc\"]]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"principal\": {\n      \"href\": \"/api/v3/users/5\",\n      \"title\": \"A user\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/3\",\n      \"title\": \"A Project\"\n     },\n     \"roles\": [\n      {\n       \"href\": \"/api/v3/roles/4\",\n       \"title\": \"Reader\"\n      }\n     ],\n     \"schema\": {\n      \"href\": \"/api/v3/memberships/schema\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/memberships/11\"\n     }\n    },\n    \"_type\": \"Membership\",\n    \"createdAt\": \"2015-03-20T12:56:56Z\",\n    \"id\": 11,\n    \"updatedAt\": \"2018-12-20T18:16:11Z\"\n   },\n   {\n    \"_links\": {\n     \"principal\": {\n      \"href\": \"/api/v3/groups/5\",\n      \"title\": \"A group\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/6\",\n      \"title\": \"Another Project\"\n     },\n     \"roles\": [\n      {\n       \"href\": \"/api/v3/roles/8\",\n       \"title\": \"Project admin\"\n      }\n     ],\n     \"schema\": {\n      \"href\": \"/api/v3/memberships/schema\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/memberships/41\"\n     }\n    },\n    \"_type\": \"Membership\",\n    \"createdAt\": \"2019-12-22T12:56:06Z\",\n    \"id\": 41,\n    \"updatedAt\": \"2020-12-20T18:16:12Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/memberships\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								}
							]
						},
						{
							"name": "Create membership",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/memberships",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"memberships"
									]
								},
								"description": "Creates a new membership applying the attributes provided in the body.\n\nYou can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation.\n\nBy providing a `notificationMessage` within the `_meta` block of the payload, the client can include a customized message to the user\nof the newly created membership. In case of a group, the message will be sent to every user belonging to the group."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/memberships/11\",\n   \"title\": \"Some user\"\n  },\n  \"schema\": {\n   \"href\": \"/api/v3/memberships/schema\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/memberships/11/form\",\n   \"method\": \"post\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/memberships/11\",\n   \"method\": \"patch\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/3\",\n   \"title\": \"A project\"\n  },\n  \"principal\": {\n   \"href\": \"/api/v3/users/4\",\n   \"title\": \"Some user\"\n  },\n  \"roles\": [\n   {\n    \"href\": \"/api/v3/roles/5\",\n    \"title\": \"Member\"\n   },\n   {\n    \"href\": \"/api/v3/roles/4\",\n    \"title\": \"Reader\"\n   }\n  ]\n },\n \"_type\": \"Membership\",\n \"id\": 11,\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"updatedAt\": \"2018-12-20T18:16:11Z\",\n \"_embedded\": {\n  \"project...\": {},\n  \"principal...\": {},\n  \"roles...\": []\n }\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Manage members",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"project\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Project can't be blank.\"\n}"
								}
							]
						},
						{
							"name": "Available projects for memberships",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/memberships/available_projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"memberships",
										"available_projects"
									]
								},
								"description": "Gets a list of projects in which a membership can be created in. The list contains all projects in which the user issuing the request has the manage members permissions."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/available_projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												"available_projects"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/6/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/6/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/6/work_packages\",\n      \"method\": \"post\"\n     },\n     \"editWorkPackage\": {\n      \"href\": \"/api/v3//work_packages/{id}/form\",\n      \"method\": \"post\",\n      \"templated\": true\n     },\n     \"memberships\": {\n      \"href\": \"/api/v3/projects/6/memberships\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/6\",\n      \"title\": \"A project\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"createdAt\": \"2015-07-06T13:28:14+00:00\",\n    \"description\": \"Eveniet molestias omnis quis aut qui eum adipisci. Atque aut aut in exercitationem adipisci amet. Nisi asperiores quia ratione veritatis enim exercitationem magnam. Aut fuga architecto adipisci nihil. Et repellat pariatur. Aliquam et sed perferendis nostrum quaerat. Fugit doloremque voluptatem.\",\n    \"id\": 6,\n    \"identifier\": \"a_project\",\n    \"name\": \"A project\",\n    \"type\": \"Customer Project\",\n    \"updatedAt\": \"2015-10-01T09:55:02+00:00\"\n   },\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/14/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/14/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/14/work_packages\",\n      \"method\": \"post\"\n     },\n     \"memberships\": {\n      \"href\": \"/api/v3/projects/14/memberships\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/14\",\n      \"title\": \"Another project\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"createdAt\": \"2016-02-29T12:50:20+00:00\",\n    \"description\": \"\",\n    \"id\": 14,\n    \"identifier\": \"another_project\",\n    \"name\": \"Another project\",\n    \"type\": null,\n    \"updatedAt\": \"2016-02-29T12:50:20+00:00\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/memberships/available_projects\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage members",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/available_projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												"available_projects"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "Membership create form",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/memberships/form",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"memberships",
										"form"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												"form"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												"form"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage memberships in any project",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												"form"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "View membership schema",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/memberships/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"memberships",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_dependencies\": [],\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/memberships/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"createdAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Created on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"id\": {\n  \"hasDefault\": false,\n  \"name\": \"ID\",\n  \"required\": true,\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"notificationMessage\": {\n  \"hasDefault\": false,\n  \"location\": \"_meta\",\n  \"name\": \"Message\",\n  \"options\": {},\n  \"required\": false,\n  \"type\": \"Formattable\",\n  \"writable\": true\n },\n \"principal\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"Principal\",\n  \"required\": true,\n  \"type\": \"Principal\",\n  \"writable\": true\n },\n \"project\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"Project\",\n  \"required\": false,\n  \"type\": \"Project\",\n  \"writable\": true\n },\n \"roles\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"Role\",\n  \"required\": true,\n  \"type\": \"[]Role\",\n  \"writable\": true\n },\n \"updatedAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Updated on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n }\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see the schema.\n\n**Required permission:** manage members or view memberships on any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/memberships/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"memberships",
												"schemas"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "my preferences",
					"item": [
						{
							"name": "Show my preferences",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/my_preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"my_preferences"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/my_preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"my_preferences"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/my_preferences\"\n  },\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"John Sheppard\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/users/3/preferences\",\n   \"method\": \"patch\"\n  }\n },\n \"_type\": \"UserPreferences\",\n \"commentSortDescending\": true,\n \"hideMail\": false,\n \"timeZone\": \"Europe/Berlin\",\n \"warnOnLeavingUnsaved\": true,\n \"notifications\": {\n  \"watched\": false,\n  \"involved\": true,\n  \"mentioned\": false,\n  \"newsAdded\": \"false,\",\n  \"newsCommented\": false,\n  \"documentAdded\": false,\n  \"forumMessages\": false,\n  \"wikiPageAdded\": false,\n  \"wikiPageUpdated\": false,\n  \"membershipAdded\": false,\n  \"membershipUpdated\": false,\n  \"workPackageCommented\": false,\n  \"workPackageProcessed\": false,\n  \"workPackagePrioritized\": false,\n  \"workPackageScheduled\": false,\n  \"_links\": {\n   \"project\": {\n    \"href\": null\n   }\n  }\n }\n}"
								},
								{
									"name": "Returned if no user is currently authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/my_preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"my_preferences"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:Unauthenticated\",\n \"message\": \"You need to be authenticated to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "Update my preferences",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"autoHidePopups\": true,\n    \"timeZone\": \"Europe/Paris\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v3/my_preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"my_preferences"
									]
								},
								"description": "When calling this endpoint the client provides a single object, containing the properties that it wants to change, in the body."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"autoHidePopups\": true,\n    \"timeZone\": \"Europe/Paris\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/my_preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"my_preferences"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/my_preferences\"\n  },\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"John Sheppard\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/users/3/preferences\",\n   \"method\": \"patch\"\n  }\n },\n \"_type\": \"UserPreferences\",\n \"commentSortDescending\": true,\n \"hideMail\": false,\n \"timeZone\": \"Europe/Berlin\",\n \"warnOnLeavingUnsaved\": true,\n \"notifications\": {\n  \"watched\": false,\n  \"involved\": true,\n  \"mentioned\": false,\n  \"newsAdded\": \"false,\",\n  \"newsCommented\": false,\n  \"documentAdded\": false,\n  \"forumMessages\": false,\n  \"wikiPageAdded\": false,\n  \"wikiPageUpdated\": false,\n  \"membershipAdded\": false,\n  \"membershipUpdated\": false,\n  \"workPackageCommented\": false,\n  \"workPackageProcessed\": false,\n  \"workPackagePrioritized\": false,\n  \"workPackageScheduled\": false,\n  \"_links\": {\n   \"project\": {\n    \"href\": null\n   }\n  }\n }\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"autoHidePopups\": true,\n    \"timeZone\": \"Europe/Paris\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/my_preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"my_preferences"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if no user is currently authenticated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"autoHidePopups\": true,\n    \"timeZone\": \"Europe/Paris\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/my_preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"my_preferences"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:Unauthenticated\",\n \"message\": \"You need to be authenticated to access this resource.\"\n}"
								},
								{
									"name": "Returned if the update contains invalid properties.\nReasons are:\n\n* Specifying an invalid type\n\n* Using an unknown time zone",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"autoHidePopups\": true,\n    \"timeZone\": \"Europe/Paris\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/my_preferences",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"my_preferences"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Time zone is not set to one of the allowed values.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "news",
					"item": [
						{
							"name": "List News",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/news?offset=1&pageSize=55287423&sortBy=[[\"created_at\", \"asc\"]]&filters=[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"news"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "Page number inside the requested collection."
										},
										{
											"key": "pageSize",
											"value": "55287423",
											"description": "Number of elements to display per page."
										},
										{
											"key": "sortBy",
											"value": "[[\"created_at\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ created_at: Sort by news creation datetime"
										},
										{
											"key": "filters",
											"value": "[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:\n\n+ project_id: Filter news by project"
										}
									]
								},
								"description": "Lists news. The news returned depend on the provided parameters and also on the requesting user's permissions."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/news?offset=1&pageSize=55287423&sortBy=[[\"created_at\", \"asc\"]]&filters=[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"news"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"created_at\", \"asc\"]]"
												},
												{
													"key": "filters",
													"value": "[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"author\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Peggie Feeney\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/1\",\n      \"title\": \"Seeded Project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/news/1\",\n      \"title\": \"asperiores possimus nam doloribus ab\"\n     }\n    },\n    \"_type\": \"News\",\n    \"createdAt\": \"2015-03-20T12:57:01Z\",\n    \"description\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>\",\n     \"raw\": \"Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.\"\n    },\n    \"id\": 1,\n    \"summary\": \"Celebrer spiculum colo viscus claustrum atque. Id nulla culpa sumptus. Comparo crapula depopulo demonstro.\",\n    \"title\": \"asperiores possimus nam doloribus ab\"\n   },\n   {\n    \"_links\": {\n     \"author\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Peggie Feeney\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/1\",\n      \"title\": \"Seeded Project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/news/2\",\n      \"title\": \"terminatio tutamen. Officia adeptio sp\"\n     }\n    },\n    \"_type\": \"News\",\n    \"createdAt\": \"2015-03-20T12:57:01Z\",\n    \"description\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen. Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci cicuta. Cur delicate alias curto cursim atqui talio fugiat.</p>\",\n     \"raw\": \"Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen. Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci cicuta. Cur delicate alias curto cursim atqui talio fugiat.\"\n    },\n    \"id\": 2,\n    \"summary\": \"Consequatur sequi surculus creo tui aequitas.\",\n    \"title\": \"terminatio tutamen. Officia adeptio sp\"\n   }\n  ]\n },\n \"_links\": {\n  \"changeSize\": {\n   \"href\": \"/api/v3/news?offset=1&pageSize=%7Bsize%7D\",\n   \"templated\": true\n  },\n  \"jumpTo\": {\n   \"href\": \"/api/v3/news?offset=%7Boffset%7D&pageSize=2\",\n   \"templated\": true\n  },\n  \"nextByOffset\": {\n   \"href\": \"/api/v3/news?offset=2&pageSize=2\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/news?offset=1&pageSize=2\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"offset\": 1,\n \"pageSize\": 2,\n \"total\": 78\n}"
								},
								{
									"name": "Returned if the client sends invalid request parameters e.g. filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/news?offset=1&pageSize=55287423&sortBy=[[\"created_at\", \"asc\"]]&filters=[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"news"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"created_at\", \"asc\"]]"
												},
												{
													"key": "filters",
													"value": "[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }]"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidQuery\",\n \"message\": [\n  \"Filters Invalid filter does not exist.\"\n ]\n}"
								},
								{
									"name": "Returned if the client is not logged in and login is required.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/news?offset=1&pageSize=55287423&sortBy=[[\"created_at\", \"asc\"]]&filters=[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"news"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"created_at\", \"asc\"]]"
												},
												{
													"key": "filters",
													"value": "[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }]"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to view this resource.\"\n}"
								}
							]
						},
						{
							"name": "View news",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/news/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"news",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) news id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/news/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"news",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) news id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"author\": {\n   \"_type\": \"User...\"\n  },\n  \"project\": {\n   \"_type\": \"Project...\"\n  }\n },\n \"_links\": {\n  \"author\": {\n   \"href\": \"/api/v3/users/2\",\n   \"title\": \"Peggie Feeney\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"A project\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/news/1\",\n   \"title\": \"asperiores possimus nam doloribus ab\"\n  }\n },\n \"_type\": \"News\",\n \"createdAt\": \"2015-03-20T12:57:01Z\",\n \"description\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>\",\n  \"raw\": \"Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius. Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.\"\n },\n \"id\": 1,\n \"summary\": \"Celebrer spiculum colo viscus claustrum atque. Id nulla culpa sumptus. Comparo crapula depopulo demonstro.\",\n \"title\": \"asperiores possimus nam doloribus ab\"\n}"
								},
								{
									"name": "Returned if the news does not exist or if the user does not have permission to view it.\n\n**Required permission** being member of the project the news belongs to",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/news/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"news",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) news id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "notifications",
					"item": [
						{
							"name": "List Notifications",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/notifications?offset=1&pageSize=55287423&sortBy=[[\"reason\", \"asc\"]]&groupBy=reason&filters=[{ \"readIAN\": { \"operator\": \"=\", \"values\": [\"t\"] } }]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"notifications"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "Page number inside the requested collection."
										},
										{
											"key": "pageSize",
											"value": "55287423",
											"description": "Number of elements to display per page."
										},
										{
											"key": "sortBy",
											"value": "[[\"reason\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ reason: Sort by notification reason\n\n+ readIAN: Sort by read status"
										},
										{
											"key": "groupBy",
											"value": "reason",
											"description": "string specifying group_by criteria.\n\n+ reason: Group by notification reason\n\n+ project: Sort by associated project"
										},
										{
											"key": "filters",
											"value": "[{ \"readIAN\": { \"operator\": \"=\", \"values\": [\"t\"] } }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:\n\n+ id: Filter by primary key\n\n+ project: Filter by the project the notification was created in\n\n+ readIAN: Filter by read status\n\n+ reason: Filter by the reason, e.g. 'mentioned' or 'assigned' the notification was created because of\n\n+ resourceId: Filter by the id of the resource the notification was created for. Ideally used together with the `resourceType` filter.\n\n+ resourceType: Filter by the type of the resource the notification was created for. Ideally used together with the `resourceId` filter."
										}
									]
								},
								"description": "Lists available in-app notifications. The notifications returned depend on the provided parameters and also on the requesting user's permissions."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/notifications?offset=1&pageSize=55287423&sortBy=[[\"reason\", \"asc\"]]&groupBy=reason&filters=[{ \"readIAN\": { \"operator\": \"=\", \"values\": [\"t\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"notifications"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"reason\", \"asc\"]]"
												},
												{
													"key": "groupBy",
													"value": "reason"
												},
												{
													"key": "filters",
													"value": "[{ \"readIAN\": { \"operator\": \"=\", \"values\": [\"t\"] } }]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Collection\",\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"readIAN\": {\n      \"href\": \"/api/v3/notifications/1/read_ian\",\n      \"method\": \"post\"\n     },\n     \"actor\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Peggie Feeney\"\n     },\n     \"activity\": {\n      \"href\": \"/api/v3/activities/1234\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/1\",\n      \"title\": \"Seeded Project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/notifications/1\"\n     }\n    },\n    \"_type\": \"Notification\",\n    \"createdAt\": \"2021-07-20T08:32:18Z\",\n    \"updatedAt\": \"2021-07-20T08:33:19Z\",\n    \"id\": 1,\n    \"reason\": \"mentioned\",\n    \"subject\": \"You have been mentioned in Task #1234 An important task\"\n   }\n  ],\n  \"_links\": {\n   \"changeSize\": {\n    \"href\": \"/api/v3/notifications?offset=1&pageSize=%7Bsize%7D\",\n    \"templated\": true\n   },\n   \"jumpTo\": {\n    \"href\": \"/api/v3/notifications?offset=%7Boffset%7D&pageSize=2\",\n    \"templated\": true\n   },\n   \"nextByOffset\": {\n    \"href\": \"/api/v3/notifications?offset=2&pageSize=2\"\n   },\n   \"self\": {\n    \"href\": \"/api/v3/notifications?offset=1&pageSize=2\"\n   }\n  },\n  \"_type\": \"Collection\",\n  \"count\": 1,\n  \"offset\": 1,\n  \"pageSize\": 50,\n  \"total\": 1\n }\n}"
								},
								{
									"name": "Returned if the client sends invalid request parameters e.g. filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/notifications?offset=1&pageSize=55287423&sortBy=[[\"reason\", \"asc\"]]&groupBy=reason&filters=[{ \"readIAN\": { \"operator\": \"=\", \"values\": [\"t\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"notifications"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"reason\", \"asc\"]]"
												},
												{
													"key": "groupBy",
													"value": "reason"
												},
												{
													"key": "filters",
													"value": "[{ \"readIAN\": { \"operator\": \"=\", \"values\": [\"t\"] } }]"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidQuery\",\n \"message\": [\n  \"Filters Invalid filter does not exist.\"\n ]\n}"
								},
								{
									"name": "Returned if the client is not logged in and login is required.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/notifications?offset=1&pageSize=55287423&sortBy=[[\"reason\", \"asc\"]]&groupBy=reason&filters=[{ \"readIAN\": { \"operator\": \"=\", \"values\": [\"t\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"notifications"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"reason\", \"asc\"]]"
												},
												{
													"key": "groupBy",
													"value": "reason"
												},
												{
													"key": "filters",
													"value": "[{ \"readIAN\": { \"operator\": \"=\", \"values\": [\"t\"] } }]"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to view this resource.\"\n}"
								}
							]
						},
						{
							"name": "View notification",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/notifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"notifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) notification id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) notification id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 28789554,\n \"subject\": \"commodo culpa fugiat\",\n \"reason\": \"officia nulla\",\n \"readIAN\": false,\n \"createdAt\": \"2008-11-13T12:38:58.359Z\",\n \"updatedAt\": \"1957-08-27T22:35:46.986Z\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"elit dolor id ex\",\n   \"title\": \"occaecat in ut\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"sunt esse reprehenderit non\",\n   \"identifier\": \"quis deserunt velit\"\n  },\n  \"project\": {\n   \"href\": \"cupidatat\",\n   \"title\": \"sed cupidatat dolor\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"sed consectetur adipisicing esse\",\n   \"identifier\": \"dolor\"\n  },\n  \"actor\": {\n   \"href\": \"labore in eu\",\n   \"title\": \"incididunt occaecat\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"pariatur reprehenderit\",\n   \"identifier\": \"in esse id eu aliqua\"\n  },\n  \"resource\": {\n   \"href\": \"velit Duis commodo ea\",\n   \"title\": \"laboris\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"sed eiusmod\",\n   \"identifier\": \"consequat\"\n  },\n  \"activity\": {\n   \"href\": \"id aliqua adipisicing ipsum tempor\",\n   \"title\": \"laboris fugiat nisi\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"dolore\",\n   \"identifier\": \"mollit sed ad est\"\n  }\n }\n}"
								},
								{
									"name": "Returned if the notification does not exist or if the user does not have permission to view it.\n\n**Required permission** being recipient of the notification",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) notification id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "posts/{id}",
					"item": [
						{
							"name": "attachments",
							"item": [
								{
									"name": "List attachments by post",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/posts/:id/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"posts",
												":id",
												"attachments"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the post whose attachments will be listed"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/posts/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"posts",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the post whose attachments will be listed"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"author\": {\n      \"href\": \"/api/v3/users/1\",\n      \"title\": \"OpenProject Admin\"\n     },\n     \"container\": {\n      \"href\": \"/api/v3/posts/72\",\n      \"title\": \"wiki\"\n     },\n     \"delete\": {\n      \"href\": \"/api/v3/attachments/376\",\n      \"method\": \"delete\"\n     },\n     \"downloadLocation\": {\n      \"href\": \"/api/v3/attachments/376/content\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/attachments/376\",\n      \"title\": \"200.gif\"\n     }\n    },\n    \"_type\": \"Attachment\",\n    \"contentType\": \"image/gif\",\n    \"createdAt\": \"2018-06-01T07:24:19Z\",\n    \"description\": {\n     \"format\": \"plain\",\n     \"html\": \"\",\n     \"raw\": \"\"\n    },\n    \"digest\": {\n     \"algorithm\": \"md5\",\n     \"hash\": \"7ac9c97ef73d47127f590788b84c0c1c\"\n    },\n    \"fileName\": \"some.gif\",\n    \"fileSize\": 3521772,\n    \"id\": 376\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/posts/72/attachments\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 1,\n \"total\": 1\n}"
										},
										{
											"name": "Returned if the post does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view messages\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a post.\nThat's why a 4",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/posts/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"posts",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the post whose attachments will be listed"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "Add attachment to post",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/posts/:id/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"posts",
												":id",
												"attachments"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the post to receive the attachment"
												}
											]
										},
										"description": "Adds an attachment with the post as it's container."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/posts/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"posts",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the post to receive the attachment"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"author\": {\n   \"_links\": {\n    \"lock\": {\n     \"href\": \"/api/v3/users/1/lock\",\n     \"method\": \"post\",\n     \"title\": \"Set lock on admin\"\n    },\n    \"self\": {\n     \"href\": \"/api/v3/users/1\",\n     \"title\": \"OpenProject Admin\"\n    },\n    \"showUser\": {\n     \"href\": \"/users/1\",\n     \"type\": \"text/html\"\n    },\n    \"updateImmediately\": {\n     \"href\": \"/api/v3/users/1\",\n     \"method\": \"patch\",\n     \"title\": \"Update admin\"\n    }\n   },\n   \"_type\": \"User\",\n   \"admin\": true,\n   \"avatar\": \"\",\n   \"createdAt\": \"2015-03-20T12:56:52Z\",\n   \"email\": null,\n   \"firstName\": \"OpenProject\",\n   \"id\": 1,\n   \"identityUrl\": null,\n   \"lastName\": \"Admin\",\n   \"login\": \"admin\",\n   \"name\": \"OpenProject Admin\",\n   \"status\": \"active\",\n   \"updatedAt\": \"2018-05-29T13:57:44Z\"\n  },\n  \"container\": {\n   \"_links\": {\n    \"addAttachment\": {\n     \"href\": \"/api/v3/posts/150/attachments\",\n     \"method\": \"post\"\n    },\n    \"attachments\": {\n     \"href\": \"/api/v3/posts/150/attachments\"\n    },\n    \"project\": {\n     \"href\": \"/api/v3/projects/12\",\n     \"title\": \"Demo project\"\n    },\n    \"self\": {\n     \"href\": \"/api/v3/posts/150\"\n    }\n   },\n   \"_type\": \"Post\",\n   \"id\": 150,\n   \"subject\": \"sfsdfsdfsdfsdf\"\n  }\n },\n \"_links\": {\n  \"author\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin\"\n  },\n  \"container\": {\n   \"href\": \"/api/v3/posts/150\",\n   \"title\": \"sfsdfsdfsdfsdf\"\n  },\n  \"delete\": {\n   \"href\": \"/api/v3/attachments/377\",\n   \"method\": \"delete\"\n  },\n  \"downloadLocation\": {\n   \"href\": \"/api/v3/attachments/377/content\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/attachments/377\",\n   \"title\": \"200.gif\"\n  }\n },\n \"_type\": \"Attachment\",\n \"contentType\": \"image/gif\",\n \"createdAt\": \"2018-06-01T07:53:36Z\",\n \"description\": {\n  \"format\": \"plain\",\n  \"html\": \"\",\n  \"raw\": \"\"\n },\n \"digest\": {\n  \"algorithm\": \"md5\",\n  \"hash\": \"7ac9c97ef73d47127f590788b84c0c1c\"\n },\n \"fileName\": \"some.gif\",\n \"fileSize\": 3521772,\n \"id\": 377\n}"
										},
										{
											"name": "Returned if the client sends a not understandable request. Reasons include:\n\n* Omitting one of the required parts (metadata and file)\n\n* sending unparsable JSON in the metadata part",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/posts/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"posts",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the post to receive the attachment"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request could not be parsed as JSON.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit messages\n\n*Note that you will only receive this error, if you are at least allowed to see the wiki page*",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/posts/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"posts",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the post to receive the attachment"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to delete this attachment.\"\n}"
										},
										{
											"name": "Returned if the post does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view messages\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a post.\nThat's why a 4",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/posts/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"posts",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the post to receive the attachment"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										},
										{
											"name": "Returned if the client tries to send an invalid attachment.\nReasons are:\n\n* Omitting the file name (`fileName` property of metadata part)\n\n* Sending a file that is too large",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/posts/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"posts",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the post to receive the attachment"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"File is too large (maximum size is 5242880 Bytes).\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "View Post",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/posts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Post's identifier"
										}
									]
								},
								"description": "Retrieve an individual post as identified by the id parameter"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Post's identifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"project\": {\n   \"_type\": \"Project...\"\n  }\n },\n \"_links\": {\n  \"addAttachment\": {\n   \"href\": \"/api/v3/posts/1/attachments\",\n   \"method\": \"post\"\n  },\n  \"attachments\": {\n   \"href\": \"/api/v3/posts/1/attachments\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"A project with a title\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/posts/1\"\n  }\n },\n \"_type\": \"Post\",\n \"id\": 1,\n \"subject\": \"A post with a subject\"\n}"
								},
								{
									"name": "Returned if the post does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view messages in the post's project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/posts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"posts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Post's identifier"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "priorities",
					"item": [
						{
							"name": "List all Priorities",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/priorities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"priorities"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/priorities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"priorities"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/priorities/1\",\n      \"title\": \"Low\"\n     }\n    },\n    \"_type\": \"Priority\",\n    \"id\": 1,\n    \"isActive\": true,\n    \"isDefault\": false,\n    \"name\": \"Low\",\n    \"position\": 1\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/priorities/2\",\n      \"title\": \"Normal\"\n     }\n    },\n    \"_type\": \"Priority\",\n    \"id\": 2,\n    \"isActive\": true,\n    \"isDefault\": true,\n    \"name\": \"Normal\",\n    \"position\": 2\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/priorities/3\",\n      \"title\": \"High\"\n     }\n    },\n    \"_type\": \"Priority\",\n    \"id\": 3,\n    \"isActive\": true,\n    \"isDefault\": false,\n    \"name\": \"High\",\n    \"position\": 3\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/priorities/4\",\n      \"title\": \"Immediate\"\n     }\n    },\n    \"_type\": \"Priority\",\n    \"id\": 4,\n    \"isActive\": true,\n    \"isDefault\": false,\n    \"name\": \"Immediate\",\n    \"position\": 5\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/priorities\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 4,\n \"total\": 4\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package (on any project)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/priorities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"priorities"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see the priorities.\"\n}"
								}
							]
						},
						{
							"name": "View Priority",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/priorities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"priorities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Priority id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/priorities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"priorities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Priority id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/priorities/1\",\n   \"title\": \"Low\"\n  }\n },\n \"_type\": \"Priority\",\n \"id\": 1,\n \"isActive\": true,\n \"isDefault\": false,\n \"name\": \"Low\",\n \"position\": 1\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package (on any project)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/priorities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"priorities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Priority id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see this priority.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "projects",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "copy",
									"item": [
										{
											"name": "Create project copy",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/copy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"copy"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"response": [
												{
													"name": "Returned if the request is successful. It will redirect to the job statuses API with the backend job that got created. You can query that endpoint to check the status of the copy, and eventually get the created project.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"copy"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Found",
													"code": 302,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Occurs when the client did not send a valid JSON object in the request body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"copy"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** copy projects in the source project",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"copy"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
												},
												{
													"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/copy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"copy"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"name\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Name can't be blank.\"\n}"
												}
											]
										},
										{
											"name": "Project copy form",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/copy/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"copy",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/copy/form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"copy",
																"form"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Occurs when the client did not send a valid JSON object in the request body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/copy/form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"copy",
																"form"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** copy projects in the source project",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/copy/form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"copy",
																"form"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "queries",
									"item": [
										{
											"name": "View default query for project",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/queries/default?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&showHierarchies=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"queries",
														"default"
													],
													"query": [
														{
															"key": "filters",
															"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]",
															"description": "JSON specifying filter conditions.\nThe filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters.\nAll filters also accepted by the work packages endpoint are accepted. If no filter is to be applied, the client should send an empty array (`[]`)."
														},
														{
															"key": "offset",
															"value": "1",
															"description": "Page number inside the queries' result collection of work packages."
														},
														{
															"key": "pageSize",
															"value": "55287423",
															"description": "Number of elements to display per page for the queries' result collection of work packages."
														},
														{
															"key": "sortBy",
															"value": "[[\"status\", \"asc\"]]",
															"description": "JSON specifying sort criteria. The sort criteria is applied to the query's result collection of work packages overriding the query's persisted sort criteria."
														},
														{
															"key": "groupBy",
															"value": "status",
															"description": "The column to group by. The grouping criteria is applied to the to the query's result collection of work packages overriding the query's persisted group criteria."
														},
														{
															"key": "showSums",
															"value": "false",
															"description": "Indicates whether properties should be summed up if they support it. The showSums parameter is applied to the to the query's result collection of work packages overriding the query's persisted sums property."
														},
														{
															"key": "timelineVisible",
															"value": "false",
															"description": "Indicates whether the timeline should be shown."
														},
														{
															"key": "showHierarchies",
															"value": "true",
															"description": "Indicates whether the hierarchy mode should be enabled."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Id of the project the default query is requested for"
														}
													]
												},
												"description": "Same as [viewing an existing, persisted Query](https://www.openproject.org/docs/api/endpoints/queries/#list-queries) in its response, this resource returns an unpersisted query and by that allows to get the default query configuration. The client may also provide additional parameters which will modify the default query. The query will already be scoped for the project."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/queries/default?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&showHierarchies=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"queries",
																"default"
															],
															"query": [
																{
																	"key": "filters",
																	"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]"
																},
																{
																	"key": "offset",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "55287423"
																},
																{
																	"key": "sortBy",
																	"value": "[[\"status\", \"asc\"]]"
																},
																{
																	"key": "groupBy",
																	"value": "status"
																},
																{
																	"key": "showSums",
																	"value": "false"
																},
																{
																	"key": "timelineVisible",
																	"value": "false"
																},
																{
																	"key": "showHierarchies",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Id of the project the default query is requested for"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_embedded\": {\n  \"results\": {\n   \"_embedded\": {\n    \"elements\": [\n     \"<--- shortened for brevity --->\"\n    ]\n   },\n   \"_links\": {\n    \"changeSize\": {\n     \"href\": \"/api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"createWorkPackage\": {\n     \"href\": \"/api/v3/work_packages/form\",\n     \"method\": \"post\"\n    },\n    \"createWorkPackageImmediate\": {\n     \"href\": \"/api/v3/work_packages\",\n     \"method\": \"post\"\n    },\n    \"jumpTo\": {\n     \"href\": \"/api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"self\": {\n     \"href\": \"/api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n    }\n   },\n   \"_type\": \"WorkPackageCollection\",\n   \"count\": 30,\n   \"offset\": 1,\n   \"pageSize\": 2,\n   \"total\": 234\n  }\n },\n \"_links\": {\n  \"columns\": [\n   {\n    \"href\": \"/api/v3/queries/columns/id\",\n    \"title\": \"ID\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/subject\",\n    \"title\": \"Subject\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/type\",\n    \"title\": \"Type\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/status\",\n    \"title\": \"Status\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/priority\",\n    \"title\": \"Priority\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/assignee\",\n    \"title\": \"Assignee\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/updated_at\",\n    \"title\": \"Updated on\"\n   }\n  ],\n  \"groupBy\": {\n   \"href\": null,\n   \"title\": null\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/42\",\n   \"title\": \"Lorem ipsum project\"\n  },\n  \"results\": {\n   \"href\": \"/api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/projects/42/queries/default\",\n   \"title\": \"Default\"\n  },\n  \"sortBy\": [\n   {\n    \"href\": \"/api/v3/queries/sort_bys/parent-desc\",\n    \"title\": \"Parent (Descending)\"\n   }\n  ],\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin\"\n  }\n },\n \"_type\": \"Query\",\n \"filters\": [\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/status\",\n     \"title\": \"Status\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/o\",\n     \"title\": \"open\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/status\"\n    },\n    \"values\": []\n   },\n   \"_type\": \"StatusQueryFilter\",\n   \"name\": \"Status\"\n  }\n ],\n \"name\": \"default\",\n \"public\": false,\n \"showHierarchies\": true,\n \"starred\": false,\n \"sums\": false,\n \"timelineVisible\": false,\n \"timelineZoomLevel\": \"days\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions to see the default query.\n\n**Required permission:** view work packages in the project",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/queries/default?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&showHierarchies=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"queries",
																"default"
															],
															"query": [
																{
																	"key": "filters",
																	"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]"
																},
																{
																	"key": "offset",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "55287423"
																},
																{
																	"key": "sortBy",
																	"value": "[[\"status\", \"asc\"]]"
																},
																{
																	"key": "groupBy",
																	"value": "status"
																},
																{
																	"key": "showSums",
																	"value": "false"
																},
																{
																	"key": "timelineVisible",
																	"value": "false"
																},
																{
																	"key": "showHierarchies",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Id of the project the default query is requested for"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions to see the project.\n\n**Required permission:** any permission in the project",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/queries/default?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&showHierarchies=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"queries",
																"default"
															],
															"query": [
																{
																	"key": "filters",
																	"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]"
																},
																{
																	"key": "offset",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "55287423"
																},
																{
																	"key": "sortBy",
																	"value": "[[\"status\", \"asc\"]]"
																},
																{
																	"key": "groupBy",
																	"value": "status"
																},
																{
																	"key": "showSums",
																	"value": "false"
																},
																{
																	"key": "timelineVisible",
																	"value": "false"
																},
																{
																	"key": "showHierarchies",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Id of the project the default query is requested for"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
												}
											]
										},
										{
											"name": "List Query Filter Instance Schemas for Project",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/queries/filter_instance_schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"queries",
														"filter_instance_schemas"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												},
												"description": "Returns the list of QueryFilterInstanceSchemas defined for a query of the specified project."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/queries/filter_instance_schemas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"queries",
																"filter_instance_schemas"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_dependencies\": [\n     {\n      \"_type\": \"SchemaDependency\",\n      \"dependencies\": {\n       \"/api/v3/queries/operators/!\": {\n        \"values\": {\n         \"_links\": {},\n         \"hasDefault\": false,\n         \"name\": \"Values\",\n         \"required\": true,\n         \"type\": \"[]User\",\n         \"writable\": true\n        }\n       },\n       \"/api/v3/queries/operators/!*\": {},\n       \"/api/v3/queries/operators/*\": {},\n       \"/api/v3/queries/operators/=\": {\n        \"values\": {\n         \"_links\": {},\n         \"hasDefault\": false,\n         \"name\": \"Values\",\n         \"required\": true,\n         \"type\": \"[]User\",\n         \"writable\": true\n        }\n       }\n      },\n      \"on\": \"operator\"\n     }\n    ],\n    \"_links\": {\n     \"filter\": {\n      \"href\": \"/api/v3/queries/filters/assignee\",\n      \"title\": \"Assignee\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/queries/filter_instance_schemas/assignee\"\n     }\n    },\n    \"_type\": \"QueryFilterInstanceSchema\",\n    \"filter\": {\n     \"_links\": {},\n     \"hasDefault\": false,\n     \"name\": \"Filter\",\n     \"required\": true,\n     \"type\": \"QueryFilter\",\n     \"writable\": true\n    },\n    \"name\": {\n     \"hasDefault\": true,\n     \"name\": \"Name\",\n     \"required\": true,\n     \"type\": \"String\",\n     \"writable\": false\n    }\n   },\n   {\n    \"_dependencies\": [\n     {\n      \"_type\": \"SchemaDependency\",\n      \"dependencies\": {\n       \"/api/v3/queries/operators/!\": {\n        \"values\": {\n         \"_links\": {},\n         \"hasDefault\": false,\n         \"name\": \"Values\",\n         \"required\": true,\n         \"type\": \"[]User\",\n         \"writable\": true\n        }\n       },\n       \"/api/v3/queries/operators/=\": {\n        \"values\": {\n         \"_links\": {},\n         \"hasDefault\": false,\n         \"name\": \"Values\",\n         \"required\": true,\n         \"type\": \"[]User\",\n         \"writable\": true\n        }\n       }\n      },\n      \"on\": \"operator\"\n     }\n    ],\n    \"_links\": {\n     \"filter\": {\n      \"href\": \"/api/v3/queries/filters/author\",\n      \"title\": \"Author\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/queries/filter_instance_schemas/author\"\n     }\n    },\n    \"_type\": \"QueryFilterInstanceSchema\",\n    \"filter\": {\n     \"_links\": {},\n     \"hasDefault\": false,\n     \"name\": \"Filter\",\n     \"required\": true,\n     \"type\": \"QueryFilter\",\n     \"writable\": true\n    },\n    \"name\": {\n     \"hasDefault\": true,\n     \"name\": \"Name\",\n     \"required\": true,\n     \"type\": \"String\",\n     \"writable\": false\n    }\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/42/queries/filter_instance_schemas\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/queries/filter_instance_schemas",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"queries",
																"filter_instance_schemas"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:Unauthenticated\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
												}
											]
										},
										{
											"name": "View schema for project queries",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/queries/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"queries",
														"schema"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												},
												"description": "Retrieve the schema for project queries."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/queries/schema",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"queries",
																"schema"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_dependencies\": [],\n \"_embedded\": {\n  \"filtersSchemas\": {\n   \"_embedded\": {\n    \"elements\": [\n     {\n      \"_dependencies\": [\n       {\n        \"_type\": \"SchemaDependency\",\n        \"dependencies\": {\n         \"/api/v3/queries/operators/!\": {\n          \"values\": {\n           \"_links\": {},\n           \"hasDefault\": false,\n           \"name\": \"Values\",\n           \"required\": true,\n           \"type\": \"[]User\",\n           \"writable\": true\n          }\n         },\n         \"/api/v3/queries/operators/!*\": {},\n         \"/api/v3/queries/operators/*\": {},\n         \"/api/v3/queries/operators/=\": {\n          \"values\": {\n           \"_links\": {},\n           \"hasDefault\": false,\n           \"name\": \"Values\",\n           \"required\": true,\n           \"type\": \"[]User\",\n           \"writable\": true\n          }\n         }\n        },\n        \"on\": \"operator\"\n       }\n      ],\n      \"_links\": {\n       \"filter\": {\n        \"href\": \"/api/v3/queries/filters/assignee\",\n        \"title\": \"Assignee\"\n       },\n       \"self\": {\n        \"href\": \"/api/v3/queries/filter_instance_schemas/assignee\"\n       }\n      },\n      \"_type\": \"QueryFilterInstanceSchema\",\n      \"filter\": {\n       \"_links\": {},\n       \"hasDefault\": false,\n       \"name\": \"Filter\",\n       \"required\": true,\n       \"type\": \"QueryFilter\",\n       \"writable\": true\n      },\n      \"name\": {\n       \"hasDefault\": true,\n       \"name\": \"Name\",\n       \"required\": true,\n       \"type\": \"String\",\n       \"writable\": false\n      }\n     },\n     {\n      \"_dependencies\": [\n       {\n        \"_type\": \"SchemaDependency\",\n        \"dependencies\": {\n         \"/api/v3/queries/operators/!\": {\n          \"values\": {\n           \"_links\": {},\n           \"hasDefault\": false,\n           \"name\": \"Values\",\n           \"required\": true,\n           \"type\": \"[]User\",\n           \"writable\": true\n          }\n         },\n         \"/api/v3/queries/operators/=\": {\n          \"values\": {\n           \"_links\": {},\n           \"hasDefault\": false,\n           \"name\": \"Values\",\n           \"required\": true,\n           \"type\": \"[]User\",\n           \"writable\": true\n          }\n         }\n        },\n        \"on\": \"operator\"\n       }\n      ],\n      \"_links\": {\n       \"filter\": {\n        \"href\": \"/api/v3/queries/filters/author\",\n        \"title\": \"Author\"\n       },\n       \"self\": {\n        \"href\": \"/api/v3/queries/filter_instance_schemas/author\"\n       }\n      },\n      \"_type\": \"QueryFilterInstanceSchema\",\n      \"filter\": {\n       \"_links\": {},\n       \"hasDefault\": false,\n       \"name\": \"Filter\",\n       \"required\": true,\n       \"type\": \"QueryFilter\",\n       \"writable\": true\n      },\n      \"name\": {\n       \"hasDefault\": true,\n       \"name\": \"Name\",\n       \"required\": true,\n       \"type\": \"String\",\n       \"writable\": false\n      }\n     }\n    ]\n   },\n   \"_links\": {\n    \"self\": {\n     \"href\": \"/api/v3/projects/42/queries/filter_instance_schemas\"\n    }\n   },\n   \"_type\": \"Collection\",\n   \"count\": 20,\n   \"total\": 20\n  }\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/42/queries/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"columns\": {\n  \"_links\": {},\n  \"hasDefault\": true,\n  \"name\": \"Columns\",\n  \"required\": false,\n  \"type\": \"[]QueryColumn\",\n  \"writable\": true\n },\n \"createdAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Created on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"filters\": {\n  \"_links\": {\n   \"allowedValuesSchemas\": {\n    \"href\": \"/api/v3/projects/42/queries/filter_instance_schemas\"\n   }\n  },\n  \"hasDefault\": true,\n  \"name\": \"Filters\",\n  \"required\": false,\n  \"type\": \"[]QueryFilterInstance\",\n  \"writable\": true\n },\n \"groupBy\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"name\": \"Group results by\",\n  \"required\": false,\n  \"type\": \"[]QueryGroupBy\",\n  \"writable\": true\n },\n \"id\": {\n  \"hasDefault\": false,\n  \"name\": \"ID\",\n  \"required\": true,\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"name\": {\n  \"hasDefault\": false,\n  \"maxLength\": 255,\n  \"minLength\": 1,\n  \"name\": \"Name\",\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"project\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"name\": \"Project\",\n  \"required\": false,\n  \"type\": \"Project\",\n  \"writable\": true\n },\n \"public\": {\n  \"hasDefault\": true,\n  \"name\": \"Public\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"results\": {\n  \"hasDefault\": false,\n  \"name\": \"Results\",\n  \"required\": false,\n  \"type\": \"WorkPackageCollection\",\n  \"writable\": false\n },\n \"showHierarchies\": {\n  \"hasDefault\": true,\n  \"name\": \"Show hierarchies\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"sortBy\": {\n  \"_links\": {},\n  \"hasDefault\": true,\n  \"name\": \"Sort by\",\n  \"required\": false,\n  \"type\": \"[]QuerySortBy\",\n  \"writable\": true\n },\n \"starred\": {\n  \"hasDefault\": true,\n  \"name\": \"Starred\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"sums\": {\n  \"hasDefault\": true,\n  \"name\": \"Sums\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"timelineVisible\": {\n  \"hasDefault\": true,\n  \"name\": \"Timeline visible\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"timelineZoomLevel\": {\n  \"hasDefault\": true,\n  \"name\": \"Timeline zoom level\",\n  \"required\": false,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"updatedAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Updated on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"user\": {\n  \"hasDefault\": true,\n  \"name\": \"User\",\n  \"required\": true,\n  \"type\": \"User\",\n  \"writable\": false\n }\n}"
												},
												{
													"name": "**Required permission:** view work package in the project",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/queries/schema",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"queries",
																"schema"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "work packages",
									"item": [
										{
											"name": "List work packages by project",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?offset=1&pageSize=55287423&filters=[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"work_packages"
													],
													"query": [
														{
															"key": "offset",
															"value": "1",
															"description": "Page number inside the requested collection."
														},
														{
															"key": "pageSize",
															"value": "55287423",
															"description": "Number of elements to display per page."
														},
														{
															"key": "filters",
															"value": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]",
															"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. If no filter is to be applied, the client should send an empty array (`[]`)."
														},
														{
															"key": "sortBy",
															"value": "[[\"status\", \"asc\"]]",
															"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint."
														},
														{
															"key": "groupBy",
															"value": "status",
															"description": "The column to group by."
														},
														{
															"key": "showSums",
															"value": "false",
															"description": "Indicates whether properties should be summed up if they support it."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?offset=1&pageSize=55287423&filters=[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "55287423"
																},
																{
																	"key": "filters",
																	"value": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]"
																},
																{
																	"key": "sortBy",
																	"value": "[[\"status\", \"asc\"]]"
																},
																{
																	"key": "groupBy",
																	"value": "status"
																},
																{
																	"key": "showSums",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/work_packages/1\"\n     }\n    },\n    \"_type\": \"WorkPackage\",\n    \"id\": 1,\n    \"subject\": \"Skipped other properties for brevity\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/work_packages/2\"\n     }\n    },\n    \"_type\": \"WorkPackage\",\n    \"id\": 2,\n    \"subject\": \"Skipped other properties for brevity\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/14/work_packages\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
												},
												{
													"name": "Returned if the client sends a query parameter, that the server knows, but does not understand.\nE.g. by providing a syntactically incorrect `filters` parameter.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?offset=1&pageSize=55287423&filters=[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "55287423"
																},
																{
																	"key": "filters",
																	"value": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]"
																},
																{
																	"key": "sortBy",
																	"value": "[[\"status\", \"asc\"]]"
																},
																{
																	"key": "groupBy",
																	"value": "status"
																},
																{
																	"key": "showSums",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidQuery\",\n \"message\": \"Operator can't be blank.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?offset=1&pageSize=55287423&filters=[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "55287423"
																},
																{
																	"key": "filters",
																	"value": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]"
																},
																{
																	"key": "sortBy",
																	"value": "[[\"status\", \"asc\"]]"
																},
																{
																	"key": "groupBy",
																	"value": "status"
																},
																{
																	"key": "showSums",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see the work packages of this project.\"\n}"
												},
												{
													"name": "Returned if the project does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view project",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?offset=1&pageSize=55287423&filters=[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages"
															],
															"query": [
																{
																	"key": "offset",
																	"value": "1"
																},
																{
																	"key": "pageSize",
																	"value": "55287423"
																},
																{
																	"key": "filters",
																	"value": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]"
																},
																{
																	"key": "sortBy",
																	"value": "[[\"status\", \"asc\"]]"
																},
																{
																	"key": "groupBy",
																	"value": "status"
																},
																{
																	"key": "showSums",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified project does not exist.\"\n}"
												}
											]
										},
										{
											"name": "Create work package in project",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?notify=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"work_packages"
													],
													"query": [
														{
															"key": "notify",
															"value": "true",
															"description": "Indicates whether change notifications (e.g. via E-Mail) should be sent.\nNote that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),\nnot just the current user."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												},
												"description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\nThe required fields of a WorkPackage can be found in its schema, which is embedded in the respective form.\nNote that it is only allowed to provide properties or links supporting the write operation."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?notify=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages"
															],
															"query": [
																{
																	"key": "notify",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_links\": {\n  \"addAttachment\": {\n   \"href\": \"/api/v3/work_packages/1528/attachments\",\n   \"method\": \"post\"\n  },\n  \"addComment\": {\n   \"href\": \"/api/v3/work_packages/1528/activities\",\n   \"method\": \"post\",\n   \"title\": \"Add comment\"\n  },\n  \"addRelation\": {\n   \"href\": \"/api/v3/relations\",\n   \"method\": \"post\",\n   \"title\": \"Add relation\"\n  },\n  \"addWatcher\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\",\n   \"method\": \"post\",\n   \"payload\": {\n    \"user\": {\n     \"href\": \"/api/v3/users/{user_id}\"\n    }\n   },\n   \"templated\": true\n  },\n  \"ancestors\": [\n   {\n    \"href\": \"/api/v3/work_packages/1290\",\n    \"title\": \"Root node of hierarchy\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1291\",\n    \"title\": \"Intermediate node of hierarchy\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1298\",\n    \"title\": \"nisi eligendi officiis eos delectus quis voluptas dolores\"\n   }\n  ],\n  \"assignee\": {\n   \"href\": \"/api/v3/users/11\",\n   \"title\": \"Emmie Okuneva - Adele5450\"\n  },\n  \"attachments\": {\n   \"href\": \"/api/v3/work_packages/1528/attachments\"\n  },\n  \"author\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin - admin\"\n  },\n  \"availableWatchers\": {\n   \"href\": \"/api/v3/work_packages/1528/available_watchers\"\n  },\n  \"category\": {\n   \"href\": \"/api/v3/categories/1298\",\n   \"title\": \"eligend isi\"\n  },\n  \"changeParent\": {\n   \"href\": \"/api/v3/work_packages/694\",\n   \"method\": \"patch\",\n   \"title\": \"Change parent of Bug in OpenProject\"\n  },\n  \"children\": [\n   {\n    \"href\": \"/api/v3/work_packages/1529\",\n    \"title\": \"Write API documentation\"\n   }\n  ],\n  \"customActions\": [\n   {\n    \"href\": \"/api/v3/work_packages/1528/custom_actions/153/execute\",\n    \"method\": \"post\",\n    \"title\": \"Reset\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1528/custom_actions/94/execute\",\n    \"method\": \"post\",\n    \"title\": \"Forward to accounting\"\n   }\n  ],\n  \"customField3\": {\n   \"href\": \"api/v3/users/14\"\n  },\n  \"delete\": {\n   \"href\": \"/work_packages/bulk?ids=1528\",\n   \"method\": \"delete\",\n   \"title\": \"Delete Develop API\"\n  },\n  \"logTime\": {\n   \"href\": \"/work_packages/1528/time_entries/new\",\n   \"title\": \"Log time on Develop API\",\n   \"type\": \"text/html\"\n  },\n  \"move\": {\n   \"href\": \"/work_packages/1528/move/new\",\n   \"title\": \"Move Develop API\",\n   \"type\": \"text/html\"\n  },\n  \"parent\": {\n   \"href\": \"/api/v3/work_packages/1298\",\n   \"title\": \"nisi eligendi officiis eos delectus quis voluptas dolores\"\n  },\n  \"priority\": {\n   \"href\": \"/api/v3/priorities/2\",\n   \"title\": \"Normal\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"A Test Project\"\n  },\n  \"relations\": {\n   \"href\": \"/api/v3/work_packages/1528/relations\",\n   \"title\": \"Show relations\"\n  },\n  \"removeWatcher\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers/{user_id}\",\n   \"method\": \"delete\",\n   \"templated\": true\n  },\n  \"responsible\": {\n   \"href\": \"/api/v3/users/23\",\n   \"title\": \"Laron Leuschke - Alaina5788\"\n  },\n  \"revisions\": {\n   \"href\": \"/api/v3/work_packages/1528/revisions\"\n  },\n  \"schema\": {\n   \"href\": \"/api/v3/work_packages/schemas/11-2\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/1528\",\n   \"title\": \"Develop API\"\n  },\n  \"status\": {\n   \"href\": \"/api/v3/statuses/1\",\n   \"title\": \"New\"\n  },\n  \"timeEntries\": {\n   \"href\": \"/work_packages/1528/time_entries\",\n   \"title\": \"Time entries\",\n   \"type\": \"text/html\"\n  },\n  \"type\": {\n   \"href\": \"/api/v3/types/1\",\n   \"title\": \"A Type\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/work_packages/1528\",\n   \"method\": \"patch\",\n   \"title\": \"Update Develop API\"\n  },\n  \"version\": {\n   \"href\": \"/api/v3/versions/1\",\n   \"title\": \"Version 1\"\n  },\n  \"watch\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\",\n   \"method\": \"post\",\n   \"payload\": {\n    \"user\": {\n     \"href\": \"/api/v3/users/1\"\n    }\n   }\n  },\n  \"watchers\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\"\n  }\n },\n \"_type\": \"WorkPackage\",\n \"createdAt\": \"2014-08-29T12:40:53Z\",\n \"customField1\": \"Foo\",\n \"customField2\": 42,\n \"derivedDueDate\": null,\n \"derivedEstimatedTime\": \"PT10H\",\n \"derivedStartDate\": null,\n \"description\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Develop super cool OpenProject API.</p>\",\n  \"raw\": \"Develop super cool OpenProject API.\"\n },\n \"dueDate\": null,\n \"estimatedTime\": \"PT2H\",\n \"id\": 1528,\n \"percentageDone\": 0,\n \"scheduleManually\": false,\n \"startDate\": null,\n \"subject\": \"Develop API\",\n \"updatedAt\": \"2014-08-29T12:44:41Z\"\n}"
												},
												{
													"name": "Occurs when the client did not send a valid JSON object in the request body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?notify=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages"
															],
															"query": [
																{
																	"key": "notify",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?notify=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages"
															],
															"query": [
																{
																	"key": "notify",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to add work packages to this project.\"\n}"
												},
												{
													"name": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permissions:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's w",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?notify=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages"
															],
															"query": [
																{
																	"key": "notify",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified project does not exist.\"\n}"
												},
												{
													"name": "Returned if:\n\n* the client tries to write a read-only property\n\n* a constraint for a property was violated\n\n* a property was provided in an unreadable format",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages?notify=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages"
															],
															"query": [
																{
																	"key": "notify",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Project id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"Subject\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"The subject might not be blank.\"\n}"
												}
											]
										},
										{
											"name": "Work Package Create Form For Project",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"work_packages",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the project in which the work package will be created"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/projects/:id/work_packages/form",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"projects",
																":id",
																"work_packages",
																"form"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) ID of the project in which the work package will be created"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Delete Project",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Project id"
												}
											]
										},
										"description": "Deletes the project permanently. As this is a lengthy process, the actual deletion is carried out asynchronously.\nSo the project might exist well after the request has returned successfully. To prevent unwanted changes to\nthe project scheduled for deletion, it is archived at once."
									},
									"response": [
										{
											"name": "Returned if the project was successfully deleted. There is currently no end point to query for the actual deletion status.\nSuch an end point _might_ be added in the future.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** admin",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's wh",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										},
										{
											"name": "Returned if the project cannot be deleted. This can happen when there are still references to the project in other projects\nthat need to be severed at first.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"base\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Work packages in non descendant projects reference versions of the project or its descendants.\"\n}"
										}
									]
								},
								{
									"name": "View project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Project id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"categories\": {\n   \"href\": \"/api/v3/projects/1/categories\"\n  },\n  \"createWorkPackage\": {\n   \"href\": \"/api/v3/projects/1/work_packages/form\",\n   \"method\": \"post\"\n  },\n  \"createWorkPackageImmediate\": {\n   \"href\": \"/api/v3/projects/1/work_packages\",\n   \"method\": \"post\"\n  },\n  \"customField456\": {\n   \"href\": \"/api/v3/users/315\",\n   \"method\": \"A user\"\n  },\n  \"memberships\": {\n   \"href\": \"/api/v3/memberships?filters=[{\\\"project\\\":{\\\"operator\\\":\\\"=\\\",\\\"values\\\":[\\\"1\\\"]}}]\"\n  },\n  \"projects\": {\n   \"href\": \"/api/v3/projects/123\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"Lorem\"\n  },\n  \"status\": {\n   \"href\": \"/api/v3/project_statuses/on_track\",\n   \"title\": \"On track\"\n  },\n  \"types\": {\n   \"href\": \"/api/v3/projects/1/types\"\n  },\n  \"versions\": {\n   \"href\": \"/api/v3/projects/1/versions\"\n  },\n  \"workPackages\": {\n   \"href\": \"/api/v3/projects/1/work_packages\"\n  }\n },\n \"_type\": \"Project\",\n \"active\": true,\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"customField123\": 123,\n \"description\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Lorem <strong>ipsum</strong> dolor sit amet</p>\",\n  \"raw\": \"Lorem **ipsum** dolor sit amet\"\n },\n \"id\": 1,\n \"identifier\": \"project_identifier\",\n \"name\": \"Project example\",\n \"public\": false,\n \"statusExplanation\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Everything <strong>fine</strong></p>\",\n  \"raw\": \"Everything **fine**\"\n },\n \"updatedAt\": \"2014-05-21T08:51:20Z\"\n}"
										},
										{
											"name": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's wh",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "Update Project",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Project id"
												}
											]
										},
										"description": "Updates the given project by applying the attributes provided in the body."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Project\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"Lorem\"\n  },\n  \"createWorkPackage\": {\n   \"href\": \"/api/v3/projects/1/work_packages/form\",\n   \"method\": \"post\"\n  },\n  \"createWorkPackageImmediate\": {\n   \"href\": \"/api/v3/projects/1/work_packages\",\n   \"method\": \"post\"\n  },\n  \"categories\": {\n   \"href\": \"/api/v3/projects/1/categories\"\n  },\n  \"types\": {\n   \"href\": \"/api/v3/projects/1/types\"\n  },\n  \"versions\": {\n   \"href\": \"/api/v3/projects/1/versions\"\n  },\n  \"workPackages\": {\n   \"href\": \"/api/v3/projects/1/work_packages\"\n  },\n  \"memberships\": {\n   \"href\": \"/api/v3/memberships?filters=[{\\\"project\\\":{\\\"operator\\\":\\\"=\\\",\\\"values\\\":[\\\"1\\\"]}}]\"\n  },\n  \"customField456\": {\n   \"href\": \"/api/v3/users/315\",\n   \"method\": \"A user\"\n  },\n  \"projects\": {\n   \"href\": \"/api/v3/projects/123\"\n  },\n  \"status\": {\n   \"href\": \"/api/v3/project_statuses/on_track\",\n   \"title\": \"On track\"\n  }\n },\n \"id\": 1,\n \"identifier\": \"project_identifier\",\n \"name\": \"Project example\",\n \"active\": true,\n \"public\": false,\n \"statusExplanation\": {\n  \"format\": \"markdown\",\n  \"raw\": \"Everything **fine**\",\n  \"html\": \"<p>Everything <strong>fine</strong></p>\"\n },\n \"description\": {\n  \"format\": \"markdown\",\n  \"raw\": \"Lorem **ipsum** dolor sit amet\",\n  \"html\": \"<p>Lorem <strong>ipsum</strong> dolor sit amet</p>\"\n },\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"updatedAt\": \"2014-05-21T08:51:20Z\",\n \"customField123\": 123\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit project for the project to be altered",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na version. That's wh",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										},
										{
											"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"name\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Name can't be blank.\"\n}"
										}
									]
								},
								{
									"name": "view Budgets of a Project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id/budgets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id",
												"budgets"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Project id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/budgets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"budgets"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/budgets/1\",\n      \"title\": \"Q3 2015\"\n     }\n    },\n    \"_type\": \"Budget\",\n    \"id\": 1,\n    \"subject\": \"Q3 2015\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/budgets/2\",\n      \"title\": \"Q4 2015\"\n     }\n    },\n    \"_type\": \"Budget\",\n    \"id\": 2,\n    \"subject\": \"Q4 2015\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/1/budgets\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions to see the budgets of the given\nproject.\n\n**Required permission:** view work packages **or** view budgets\n\n*Note that you will only receive this error, if you are at least allowed to see the corr",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/budgets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"budgets"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see the budgets of this project.\"\n}"
										},
										{
											"name": "Returned if either:\n\n* the project does not exist\n\n* the client does not have sufficient permissions to see the project\n\n* the costs module is not enabled on the given project\n\n**Required permission:** view project\n\n*Note: A client without sufficient perm",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/budgets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"budgets"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified project does not exist.\"\n}"
										}
									]
								},
								{
									"name": "Project update form",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id",
												"form"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Project id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit projects in the project",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										}
									]
								},
								{
									"name": "Available assignees",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id/available_assignees",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id",
												"available_assignees"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Project id"
												}
											]
										},
										"description": "Gets a list of users that can be assigned to work packages in the given project."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/available_assignees",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"available_assignees"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/1\",\n      \"method\": \"DELETE\",\n      \"title\": \"Delete j.sheppard\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/1/lock\",\n      \"method\": \"POST\",\n      \"title\": \"Set lock on j.sheppard\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/1\",\n      \"title\": \"John Sheppard - j.sheppard\"\n     }\n    },\n    \"_type\": \"User\",\n    \"avatar\": \"https://example.org/users/1/avatar\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"email\": \"shep@mail.com\",\n    \"firstName\": \"John\",\n    \"id\": 1,\n    \"lastName\": \"Sheppard\",\n    \"login\": \"j.sheppard\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   },\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/2\",\n      \"method\": \"DELETE\",\n      \"title\": \"Delete j.sheppard2\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/2/lock\",\n      \"method\": \"POST\",\n      \"title\": \"Set lock on j.sheppard2\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Jim Sheppard - j.sheppard2\"\n     }\n    },\n    \"_type\": \"User\",\n    \"avatar\": \"https://example.org/users/1/avatar\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"email\": \"shep@mail.net\",\n    \"firstName\": \"Jim\",\n    \"id\": 2,\n    \"lastName\": \"Sheppard\",\n    \"login\": \"j.sheppard2\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/42/available_assignees\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/available_assignees",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"available_assignees"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see the assignable users for this project.\"\n}"
										},
										{
											"name": "Returned if the project does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view project",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/available_assignees",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"available_assignees"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified project does not exist.\"\n}"
										}
									]
								},
								{
									"name": "Available responsibles",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id/available_responsibles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id",
												"available_responsibles"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Project id"
												}
											]
										},
										"description": "Gets a list of users that can be assigned as the responsible of a work package in the given project."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/available_responsibles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"available_responsibles"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/1\",\n      \"method\": \"DELETE\",\n      \"title\": \"Delete j.sheppard\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/1/lock\",\n      \"method\": \"POST\",\n      \"title\": \"Set lock on j.sheppard\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/1\",\n      \"title\": \"John Sheppard - j.sheppard\"\n     }\n    },\n    \"_type\": \"User\",\n    \"avatar\": \"https://example.org/users/1/avatar\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"email\": \"shep@mail.com\",\n    \"firstName\": \"John\",\n    \"id\": 1,\n    \"lastName\": \"Sheppard\",\n    \"login\": \"j.sheppard\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   },\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/2\",\n      \"method\": \"DELETE\",\n      \"title\": \"Delete j.sheppard2\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/2/lock\",\n      \"method\": \"POST\",\n      \"title\": \"Set lock on j.sheppard2\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Jim Sheppard - j.sheppard2\"\n     }\n    },\n    \"_type\": \"User\",\n    \"avatar\": \"https://example.org/users/1/avatar\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"email\": \"shep@mail.net\",\n    \"firstName\": \"Jim\",\n    \"id\": 2,\n    \"lastName\": \"Sheppard\",\n    \"login\": \"j.sheppard2\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/42/available_responsibles\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/available_responsibles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"available_responsibles"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see the users available as responsible for this project.\"\n}"
										},
										{
											"name": "Returned if the project does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view project",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/available_responsibles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"available_responsibles"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified project does not exist.\"\n}"
										}
									]
								},
								{
									"name": "List categories of a project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id",
												"categories"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the project whose categories will be listed"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/categories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"categories"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the project whose categories will be listed"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"defaultAssignee\": {\n      \"href\": \"/api/v3/users/42\",\n      \"title\": \"John Sheppard\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/11\",\n      \"title\": \"Example project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/categories/10\",\n      \"title\": \"Category with assignee\"\n     }\n    },\n    \"_type\": \"Category\",\n    \"id\": 10,\n    \"name\": \"Foo\"\n   },\n   {\n    \"_links\": {\n     \"project\": {\n      \"href\": \"/api/v3/projects/11\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/categories/11\"\n     }\n    },\n    \"_type\": \"Category\",\n    \"id\": 11,\n    \"name\": \"Bar\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/11/categories\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										},
										{
											"name": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's wh",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/categories",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"categories"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the project whose categories will be listed"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified project does not exist.\"\n}"
										}
									]
								},
								{
									"name": "List types available in a project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id",
												"types"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the project whose types will be listed"
												}
											]
										},
										"description": "This endpoint lists the types that are *available* in a given project."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"types"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the project whose types will be listed"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/types/1\"\n     }\n    },\n    \"_type\": \"Type\",\n    \"color\": \"#ff0000\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"id\": 1,\n    \"isDefault\": true,\n    \"isMilestone\": false,\n    \"name\": \"Bug\",\n    \"position\": 1,\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/types/2\"\n     }\n    },\n    \"_type\": \"Type\",\n    \"color\": \"#888\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"id\": 2,\n    \"isDefault\": false,\n    \"isMilestone\": false,\n    \"name\": \"Feature\",\n    \"position\": 2,\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/11/types\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										},
										{
											"name": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage types (on given project)\n\n*Note: A client without sufficient permissions shall not be able to t",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"types"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the project whose types will be listed"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified project does not exist.\"\n}"
										}
									]
								},
								{
									"name": "List versions available in a project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/:id/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												":id",
												"versions"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the project whose versions will be listed"
												}
											]
										},
										"description": "This endpoint lists the versions that are *available* in a given project.\nNote that due to sharing this might be more than the versions *defined* by that project."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"versions"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the project whose versions will be listed"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"availableInProjects\": {\n      \"href\": \"/api/v3/versions/11/projects\"\n     },\n     \"definingProject\": {\n      \"href\": \"/api/v3/projects/11\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/versions/11\"\n     }\n    },\n    \"_type\": \"Version\",\n    \"description\": {\n     \"format\": \"plain\",\n     \"html\": \"This version has a description\",\n     \"raw\": \"This version has a description\"\n    },\n    \"endDate\": null,\n    \"id\": 11,\n    \"name\": \"v3.0 Alpha\",\n    \"startDate\": \"2014-11-20\",\n    \"status\": \"Open\"\n   },\n   {\n    \"_links\": {\n     \"availableInProjects\": {\n      \"href\": \"/api/v3/versions/12/projects\"\n     },\n     \"definingProject\": {\n      \"href\": \"/api/v3/projects/11\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/versions/12\"\n     }\n    },\n    \"_type\": \"Version\",\n    \"description\": {\n     \"format\": \"plain\",\n     \"html\": \"\",\n     \"raw\": \"\"\n    },\n    \"endDate\": null,\n    \"id\": 12,\n    \"name\": \"v2.0\",\n    \"startDate\": null,\n    \"status\": \"Closed\"\n   },\n   {\n    \"_links\": {\n     \"availableInProjects\": {\n      \"href\": \"/api/v3/versions/10/projects\"\n     },\n     \"definingProject\": {\n      \"href\": \"/api/v3/projects/11\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/versions/10\"\n     }\n    },\n    \"_type\": \"Version\",\n    \"description\": {\n     \"format\": \"plain\",\n     \"html\": \"\",\n     \"raw\": \"\"\n    },\n    \"endDate\": null,\n    \"id\": 10,\n    \"name\": \"v1.0\",\n    \"startDate\": null,\n    \"status\": \"Open\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/11/versions\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 3,\n \"total\": 3\n}"
										},
										{
											"name": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (on given project)\n\n*Note: A client without sufficient permissions shall not be able t",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/projects/:id/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"projects",
														":id",
														"versions"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the project whose versions will be listed"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified project does not exist.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List projects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/projects?filters=[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]&sortBy=[[\"id\", \"asc\"]]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"projects"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.\nCurrently supported filters are:\n\n+ active: based on the active property of the project\n\n+ ancestor: filters projects by their ancestor. A project is not considered to be it's own ancestor.\n\n+ created_at: based on the time the project was created\n\n+ latest_activity_at: based on the time the last activity was registered on a project.\n\n+ name_and_identifier: based on both the name and the identifier.\n\n+ parent_id: filters projects by their parent.\n\n+ principal: based on members of the project.\n\n+ type_id: based on the types active in a project.\n\n+ user_action: based on the actions the current user has in the project.\n\n+ id: based on projects' id.\n\n+ visible: based on the visibility for the user (id) provided as the filter value. This filter is useful for admins to identify the projects visible to a user.\nThere might also be additional filters based on the custom fields that have been configured."
										},
										{
											"key": "sortBy",
											"value": "[[\"id\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nCurrently supported orders are:\n\n+ id\n\n+ name\n\n+ created_at\n\n+ public\n\n+ latest_activity_at\n\n+ required_disk_space\nThere might also be additional orders based on the custom fields that have been configured."
										}
									]
								},
								"description": "Returns a collection of projects. The collection can be filtered via query parameters similar to how work packages are filtered. In addition to the provided filter, the result set is always limited to only contain projects the client is allowed to see."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects?filters=[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]&sortBy=[[\"id\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]"
												},
												{
													"key": "sortBy",
													"value": "[[\"id\", \"asc\"]]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/6/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/6/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/6/work_packages\",\n      \"method\": \"post\"\n     },\n     \"projects\": {\n      \"href\": \"/api/v3/projects/123\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/6\",\n      \"title\": \"A project\"\n     },\n     \"status\": {\n      \"href\": \"/api/v3/project_statuses/on_track\",\n      \"title\": \"On track\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/6/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"active\": true,\n    \"createdAt\": \"2015-07-06T13:28:14+00:00\",\n    \"description\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Lorem <strong>ipsum</strong> dolor sit amet</p>\",\n     \"raw\": \"Lorem **ipsum** dolor sit amet\"\n    },\n    \"id\": 6,\n    \"identifier\": \"a_project\",\n    \"name\": \"A project\",\n    \"public\": false,\n    \"statusExplanation\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Everything <strong>fine</strong></p>\",\n     \"raw\": \"Everything **fine**\"\n    },\n    \"type\": \"Customer Project\",\n    \"updatedAt\": \"2015-10-01T09:55:02+00:00\"\n   },\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/14/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/14/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/14/work_packages\",\n      \"method\": \"post\"\n     },\n     \"projects\": {\n      \"href\": null\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/14\",\n      \"title\": \"Another project\"\n     },\n     \"status\": {\n      \"href\": \"/api/v3/project_statuses/off_track\",\n      \"title\": \"Off track\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/14/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"active\": false,\n    \"createdAt\": \"2016-02-29T12:50:20+00:00\",\n    \"description\": {\n     \"format\": \"markdown\",\n     \"html\": \"\",\n     \"raw\": \"\"\n    },\n    \"id\": 14,\n    \"identifier\": \"another_project\",\n    \"name\": \"Another project\",\n    \"public\": true,\n    \"statusExplanation\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Uh <strong>oh</strong></p>\",\n     \"raw\": \"Uh **oh**\"\n    },\n    \"type\": null,\n    \"updatedAt\": \"2016-02-29T12:50:20+00:00\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								}
							]
						},
						{
							"name": "Create project",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"projects"
									]
								},
								"description": "Creates a new project, applying the attributes provided in the body.\n\nYou can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Project\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"Lorem\"\n  },\n  \"createWorkPackage\": {\n   \"href\": \"/api/v3/projects/1/work_packages/form\",\n   \"method\": \"post\"\n  },\n  \"createWorkPackageImmediate\": {\n   \"href\": \"/api/v3/projects/1/work_packages\",\n   \"method\": \"post\"\n  },\n  \"categories\": {\n   \"href\": \"/api/v3/projects/1/categories\"\n  },\n  \"types\": {\n   \"href\": \"/api/v3/projects/1/types\"\n  },\n  \"versions\": {\n   \"href\": \"/api/v3/projects/1/versions\"\n  },\n  \"workPackages\": {\n   \"href\": \"/api/v3/projects/1/work_packages\"\n  },\n  \"memberships\": {\n   \"href\": \"/api/v3/memberships?filters=[{\\\"project\\\":{\\\"operator\\\":\\\"=\\\",\\\"values\\\":[\\\"1\\\"]}}]\"\n  },\n  \"customField456\": {\n   \"href\": \"/api/v3/users/315\",\n   \"method\": \"A user\"\n  },\n  \"projects\": {\n   \"href\": \"/api/v3/projects/123\"\n  },\n  \"status\": {\n   \"href\": \"/api/v3/project_statuses/on_track\",\n   \"title\": \"On track\"\n  }\n },\n \"id\": 1,\n \"identifier\": \"project_identifier\",\n \"name\": \"Project example\",\n \"active\": true,\n \"public\": false,\n \"statusExplanation\": {\n  \"format\": \"markdown\",\n  \"raw\": \"Everything **fine**\",\n  \"html\": \"<p>Everything <strong>fine</strong></p>\"\n },\n \"description\": {\n  \"format\": \"markdown\",\n  \"raw\": \"Lorem **ipsum** dolor sit amet\",\n  \"html\": \"<p>Lorem <strong>ipsum</strong> dolor sit amet</p>\"\n },\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"updatedAt\": \"2014-05-21T08:51:20Z\",\n \"customField123\": 123\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add project which is a global permission",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"name\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Name can't be blank.\"\n}"
								}
							]
						},
						{
							"name": "List available parent project candidates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/projects/available_parent_projects?filters=[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]&of=123&sortBy=[[\"id\", \"asc\"]]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"projects",
										"available_parent_projects"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]",
											"description": "JSON specifying filter conditions."
										},
										{
											"key": "of",
											"value": "123",
											"description": "The id or identifier of the project the parent candidate is determined for"
										},
										{
											"key": "sortBy",
											"value": "[[\"id\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint and allows all the filters and sortBy supported by the project list end point."
										}
									]
								},
								"description": "Lists projects which can become parent to another project. Only sound candidates are returned.\nFor instance a project cannot become parent of itself or it's children.\n\nTo specify the project for which a parent is queried for, the `of` parameter can be provided. If no `of`\nparameter is provided, a new project is assumed. Then, the check for the hierarchy is omitted as a new project cannot be\npart of a hierarchy yet.\n\nCandidates can be filtered. Most commonly one will want to filter by name or identifier.\nYou can do this through the `filters` parameter which works just like the work package index.\n\nFor instance to find all parent candidates with \"rollout\" in their name:\n\n```\n?filters=[{\"name_and_identifier\":{\"operator\":\"~\",\"values\":[\"rollout\"]}}]\n```"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/available_parent_projects?filters=[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]&of=123&sortBy=[[\"id\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												"available_parent_projects"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]"
												},
												{
													"key": "of",
													"value": "123"
												},
												{
													"key": "sortBy",
													"value": "[[\"id\", \"asc\"]]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/6/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/6/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/6/work_packages\",\n      \"method\": \"post\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/6\",\n      \"title\": \"A project\"\n     },\n     \"status\": {\n      \"href\": \"/api/v3/project_statuses/on_track\",\n      \"title\": \"On track\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/6/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"active\": true,\n    \"createdAt\": \"2015-07-06T13:28:14+00:00\",\n    \"description\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Lorem <strong>ipsum</strong> dolor sit amet</p>\",\n     \"raw\": \"Lorem **ipsum** dolor sit amet\"\n    },\n    \"id\": 6,\n    \"identifier\": \"a_project\",\n    \"name\": \"A project\",\n    \"public\": false,\n    \"statusExplanation\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Everything <strong>fine</strong></p>\",\n     \"raw\": \"Everything **fine**\"\n    },\n    \"type\": \"Customer Project\",\n    \"updatedAt\": \"2015-10-01T09:55:02+00:00\"\n   },\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/14/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/14/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/14/work_packages\",\n      \"method\": \"post\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/14\",\n      \"title\": \"Another project\"\n     },\n     \"status\": {\n      \"href\": \"/api/v3/project_statuses/on_track\",\n      \"title\": \"On track\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/14/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"active\": true,\n    \"createdAt\": \"2016-02-29T12:50:20+00:00\",\n    \"description\": {\n     \"format\": \"markdown\",\n     \"html\": \"\",\n     \"raw\": \"\"\n    },\n    \"id\": 14,\n    \"identifier\": \"another_project\",\n    \"name\": \"Another project\",\n    \"public\": true,\n    \"statusExplanation\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Everything super <strong>fine</strong></p>\",\n     \"raw\": \"Everything super **fine**\"\n    },\n    \"type\": null,\n    \"updatedAt\": \"2016-02-29T12:50:20+00:00\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/available_parent_projects?of=123\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit project in a project or the global add project permission",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/available_parent_projects?filters=[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]&of=123&sortBy=[[\"id\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												"available_parent_projects"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]"
												},
												{
													"key": "of",
													"value": "123"
												},
												{
													"key": "sortBy",
													"value": "[[\"id\", \"asc\"]]"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "Project create form",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/projects/form",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"projects",
										"form"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												"form"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"payload\": {\n   \"_links\": {\n    \"customField26\": {\n     \"href\": null,\n     \"title\": null\n    },\n    \"customField31\": {\n     \"href\": null,\n     \"title\": null\n    },\n    \"parent\": {\n     \"href\": null\n    },\n    \"status\": {\n     \"href\": null\n    }\n   },\n   \"active\": true,\n   \"customField30\": null,\n   \"customField34\": null,\n   \"customField35\": \"Text custom field value\",\n   \"customField41\": {\n    \"format\": \"markdown\",\n    \"html\": \"\",\n    \"raw\": \"\"\n   },\n   \"customField42\": null,\n   \"description\": {\n    \"format\": \"markdown\",\n    \"html\": \"\",\n    \"raw\": null\n   },\n   \"identifier\": \"new_project_identifier\",\n   \"name\": \"New project name\",\n   \"public\": false,\n   \"statusExplanation\": {\n    \"format\": \"markdown\",\n    \"html\": \"<p></p>\",\n    \"raw\": null\n   }\n  },\n  \"schema\": {\n   \"_dependencies\": [],\n   \"_links\": {},\n   \"_type\": \"Schema\",\n   \"active\": {\n    \"hasDefault\": true,\n    \"name\": \"Active\",\n    \"required\": true,\n    \"type\": \"Boolean\",\n    \"writable\": true\n   },\n   \"createdAt\": {\n    \"hasDefault\": false,\n    \"name\": \"Created on\",\n    \"required\": true,\n    \"type\": \"DateTime\",\n    \"writable\": false\n   },\n   \"customField26\": {\n    \"_links\": {\n     \"allowedValues\": {\n      \"href\": \"/api/v3/principals?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%220%22%2C%223%22%5D%7D%7D%2C%7B%22type%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22User%22%5D%7D%7D%2C%7B%22member%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22%22%5D%7D%7D%5D&pageSize=0\"\n     }\n    },\n    \"hasDefault\": false,\n    \"location\": \"_links\",\n    \"name\": \"Project user\",\n    \"required\": false,\n    \"type\": \"User\",\n    \"visibility\": \"default\",\n    \"writable\": true\n   },\n   \"customField30\": {\n    \"hasDefault\": false,\n    \"name\": \"some project cf\",\n    \"required\": false,\n    \"type\": \"Integer\",\n    \"visibility\": \"default\",\n    \"writable\": true\n   },\n   \"customField31\": {\n    \"_embedded\": {\n     \"allowedValues\": [\n      {\n       \"_links\": {\n        \"self\": {\n         \"href\": \"/api/v3/custom_options/513\",\n         \"title\": \"abc\"\n        }\n       },\n       \"_type\": \"CustomOption\",\n       \"id\": 513,\n       \"value\": \"abc\"\n      },\n      {\n       \"_links\": {\n        \"self\": {\n         \"href\": \"/api/v3/custom_options/514\",\n         \"title\": \"def\"\n        }\n       },\n       \"_type\": \"CustomOption\",\n       \"id\": 514,\n       \"value\": \"def\"\n      },\n      {\n       \"_links\": {\n        \"self\": {\n         \"href\": \"/api/v3/custom_options/515\",\n         \"title\": \"ghi\"\n        }\n       },\n       \"_type\": \"CustomOption\",\n       \"id\": 515,\n       \"value\": \"ghi\"\n      }\n     ]\n    },\n    \"_links\": {\n     \"allowedValues\": [\n      {\n       \"href\": \"/api/v3/custom_options/513\",\n       \"title\": \"abc\"\n      },\n      {\n       \"href\": \"/api/v3/custom_options/514\",\n       \"title\": \"def\"\n      },\n      {\n       \"href\": \"/api/v3/custom_options/515\",\n       \"title\": \"ghi\"\n      }\n     ]\n    },\n    \"hasDefault\": false,\n    \"location\": \"_links\",\n    \"name\": \"list project cf\",\n    \"required\": false,\n    \"type\": \"CustomOption\",\n    \"visibility\": \"default\",\n    \"writable\": true\n   },\n   \"customField34\": {\n    \"hasDefault\": false,\n    \"name\": \"Bool Project CF\",\n    \"required\": false,\n    \"type\": \"Boolean\",\n    \"visibility\": \"default\",\n    \"writable\": true\n   },\n   \"customField35\": {\n    \"hasDefault\": false,\n    \"name\": \"text project cf\",\n    \"required\": true,\n    \"type\": \"String\",\n    \"visibility\": \"default\",\n    \"writable\": true\n   },\n   \"customField41\": {\n    \"hasDefault\": false,\n    \"name\": \"Long text project cf\",\n    \"required\": false,\n    \"type\": \"Formattable\",\n    \"visibility\": \"default\",\n    \"writable\": true\n   },\n   \"customField42\": {\n    \"hasDefault\": false,\n    \"name\": \"Date project cf\",\n    \"required\": false,\n    \"type\": \"Date\",\n    \"visibility\": \"default\",\n    \"writable\": true\n   },\n   \"description\": {\n    \"hasDefault\": false,\n    \"name\": \"Description\",\n    \"required\": false,\n    \"type\": \"Formattable\",\n    \"writable\": true\n   },\n   \"id\": {\n    \"hasDefault\": false,\n    \"name\": \"ID\",\n    \"required\": true,\n    \"type\": \"Integer\",\n    \"writable\": false\n   },\n   \"identifier\": {\n    \"hasDefault\": false,\n    \"maxLength\": 100,\n    \"minLength\": 1,\n    \"name\": \"Identifier\",\n    \"required\": true,\n    \"type\": \"String\",\n    \"writable\": true\n   },\n   \"name\": {\n    \"hasDefault\": false,\n    \"maxLength\": 255,\n    \"minLength\": 1,\n    \"name\": \"Name\",\n    \"required\": true,\n    \"type\": \"String\",\n    \"writable\": true\n   },\n   \"parent\": {\n    \"_links\": {\n     \"allowedValues\": {\n      \"href\": \"/api/v3/projects/available_parent_projects\"\n     }\n    },\n    \"hasDefault\": false,\n    \"location\": \"_links\",\n    \"name\": \"Subproject of\",\n    \"required\": false,\n    \"type\": \"Project\",\n    \"visibility\": \"default\",\n    \"writable\": true\n   },\n   \"public\": {\n    \"hasDefault\": false,\n    \"name\": \"Public\",\n    \"required\": true,\n    \"type\": \"Boolean\",\n    \"writable\": true\n   },\n   \"status\": {\n    \"_links\": {\n     \"allowedValues\": [\n      {\n       \"href\": \"/api/v3/project_statuses/on_track\",\n       \"title\": \"On track\"\n      },\n      {\n       \"href\": \"/api/v3/project_statuses/at_risk\",\n       \"title\": \"At risk\"\n      },\n      {\n       \"href\": \"/api/v3/project_statuses/off_track\",\n       \"title\": \"Off track\"\n      }\n     ]\n    },\n    \"hasDefault\": true,\n    \"name\": \"Status\",\n    \"required\": false,\n    \"type\": \"ProjectStatus\",\n    \"writable\": true\n   },\n   \"statusExplanation\": {\n    \"hasDefault\": false,\n    \"name\": \"Status explanation\",\n    \"required\": false,\n    \"type\": \"Formattable\",\n    \"writable\": true\n   },\n   \"updatedAt\": {\n    \"hasDefault\": false,\n    \"name\": \"Updated on\",\n    \"required\": true,\n    \"type\": \"DateTime\",\n    \"writable\": false\n   }\n  },\n  \"validationErrors\": {\n   \"identifier\": {\n    \"_embedded\": {\n     \"details\": {\n      \"attribute\": \"identifier\"\n     }\n    },\n    \"_type\": \"Error\",\n    \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n    \"message\": \"Identifier has already been taken.\"\n   }\n  }\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/form\",\n   \"method\": \"post\"\n  },\n  \"validate\": {\n   \"href\": \"/api/v3/projects/form\",\n   \"method\": \"post\"\n  }\n },\n \"_type\": \"Form\"\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												"form"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add project which is a global permission",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												"form"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "View project schema",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/projects/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"projects",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/projects/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"projects",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_dependencies\": [],\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"active\": {\n  \"hasDefault\": true,\n  \"name\": \"Active\",\n  \"required\": true,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"createdAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Created on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"customField30\": {\n  \"hasDefault\": false,\n  \"name\": \"Integer project custom field\",\n  \"required\": false,\n  \"type\": \"Integer\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"customField31\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"List project custom field\",\n  \"required\": false,\n  \"type\": \"CustomOption\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"customField32\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"Version project custom field\",\n  \"required\": false,\n  \"type\": \"Version\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"customField34\": {\n  \"hasDefault\": false,\n  \"name\": \"Boolean project custom field\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"customField35\": {\n  \"hasDefault\": false,\n  \"name\": \"Text project custom field\",\n  \"required\": true,\n  \"type\": \"String\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"description\": {\n  \"hasDefault\": false,\n  \"name\": \"Description\",\n  \"required\": false,\n  \"type\": \"Formattable\",\n  \"writable\": true\n },\n \"id\": {\n  \"hasDefault\": false,\n  \"name\": \"ID\",\n  \"required\": true,\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"identifier\": {\n  \"hasDefault\": false,\n  \"maxLength\": 100,\n  \"minLength\": 1,\n  \"name\": \"Identifier\",\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"name\": {\n  \"hasDefault\": false,\n  \"maxLength\": 255,\n  \"minLength\": 1,\n  \"name\": \"Name\",\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"parent\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"Subproject of\",\n  \"required\": false,\n  \"type\": \"Project\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"public\": {\n  \"hasDefault\": false,\n  \"name\": \"Public\",\n  \"required\": true,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"status\": {\n  \"_links\": {\n   \"allowedValues\": [\n    {\n     \"href\": \"/api/v3/project_statuses/on_track\",\n     \"title\": \"On track\"\n    },\n    {\n     \"href\": \"/api/v3/project_statuses/at_risk\",\n     \"title\": \"At risk\"\n    },\n    {\n     \"href\": \"/api/v3/project_statuses/off_track\",\n     \"title\": \"Off track\"\n    }\n   ]\n  },\n  \"hasDefault\": true,\n  \"name\": \"Status\",\n  \"required\": false,\n  \"type\": \"ProjectStatus\",\n  \"writable\": true\n },\n \"statusExplanation\": {\n  \"hasDefault\": false,\n  \"name\": \"Status explanation\",\n  \"required\": false,\n  \"type\": \"Formattable\",\n  \"writable\": true\n },\n \"updatedAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Updated on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "queries",
					"item": [
						{
							"name": "filter instance schemas",
							"item": [
								{
									"name": "List Query Filter Instance Schemas",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/filter_instance_schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"filter_instance_schemas"
											]
										},
										"description": "Returns the list of QueryFilterInstanceSchemas defined for a global query. That is a query not assigned to a project."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/filter_instance_schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														"filter_instance_schemas"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_dependencies\": [\n     {\n      \"_type\": \"SchemaDependency\",\n      \"dependencies\": {\n       \"/api/v3/queries/operators/!\": {\n        \"values\": {\n         \"_links\": {},\n         \"hasDefault\": false,\n         \"name\": \"Values\",\n         \"required\": true,\n         \"type\": \"[]User\",\n         \"writable\": true\n        }\n       },\n       \"/api/v3/queries/operators/!*\": {},\n       \"/api/v3/queries/operators/*\": {},\n       \"/api/v3/queries/operators/=\": {\n        \"values\": {\n         \"_links\": {},\n         \"hasDefault\": false,\n         \"name\": \"Values\",\n         \"required\": true,\n         \"type\": \"[]User\",\n         \"writable\": true\n        }\n       }\n      },\n      \"on\": \"operator\"\n     }\n    ],\n    \"_links\": {\n     \"filter\": {\n      \"href\": \"/api/v3/queries/filters/assignee\",\n      \"title\": \"Assignee\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/queries/filter_instance_schemas/assignee\"\n     }\n    },\n    \"_type\": \"QueryFilterInstanceSchema\",\n    \"filter\": {\n     \"_links\": {},\n     \"hasDefault\": false,\n     \"name\": \"Filter\",\n     \"required\": true,\n     \"type\": \"QueryFilter\",\n     \"writable\": true\n    },\n    \"name\": {\n     \"hasDefault\": true,\n     \"name\": \"Name\",\n     \"required\": true,\n     \"type\": \"String\",\n     \"writable\": false\n    }\n   },\n   {\n    \"_dependencies\": [\n     {\n      \"_type\": \"SchemaDependency\",\n      \"dependencies\": {\n       \"/api/v3/queries/operators/!\": {\n        \"values\": {\n         \"_links\": {},\n         \"hasDefault\": false,\n         \"name\": \"Values\",\n         \"required\": true,\n         \"type\": \"[]User\",\n         \"writable\": true\n        }\n       },\n       \"/api/v3/queries/operators/=\": {\n        \"values\": {\n         \"_links\": {},\n         \"hasDefault\": false,\n         \"name\": \"Values\",\n         \"required\": true,\n         \"type\": \"[]User\",\n         \"writable\": true\n        }\n       }\n      },\n      \"on\": \"operator\"\n     }\n    ],\n    \"_links\": {\n     \"filter\": {\n      \"href\": \"/api/v3/queries/filters/author\",\n      \"title\": \"Author\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/queries/filter_instance_schemas/author\"\n     }\n    },\n    \"_type\": \"QueryFilterInstanceSchema\",\n    \"filter\": {\n     \"_links\": {},\n     \"hasDefault\": false,\n     \"name\": \"Filter\",\n     \"required\": true,\n     \"type\": \"QueryFilter\",\n     \"writable\": true\n    },\n    \"name\": {\n     \"hasDefault\": true,\n     \"name\": \"Name\",\n     \"required\": true,\n     \"type\": \"String\",\n     \"writable\": false\n    }\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/queries/filter_instance_schemas\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/filter_instance_schemas",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														"filter_instance_schemas"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:Unauthenticated\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										}
									]
								},
								{
									"name": "View Query Filter Instance Schema",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/filter_instance_schemas/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"filter_instance_schemas",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "author",
													"description": "(Required) QueryFilterInstanceSchema identifier. The identifier is the filter identifier."
												}
											]
										},
										"description": "Retrieve an individual QueryFilterInstanceSchema as identified by the id parameter."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/filter_instance_schemas/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														"filter_instance_schemas",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "author",
															"description": "(Required) QueryFilterInstanceSchema identifier. The identifier is the filter identifier."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_dependencies\": [\n  {\n   \"_type\": \"SchemaDependency\",\n   \"dependencies\": {\n    \"/api/v3/queries/operators/!\": {\n     \"values\": {\n      \"_links\": {},\n      \"hasDefault\": false,\n      \"name\": \"Values\",\n      \"required\": true,\n      \"type\": \"[]User\",\n      \"writable\": true\n     }\n    },\n    \"/api/v3/queries/operators/=\": {\n     \"values\": {\n      \"_links\": {},\n      \"hasDefault\": false,\n      \"name\": \"Values\",\n      \"required\": true,\n      \"type\": \"[]User\",\n      \"writable\": true\n     }\n    }\n   },\n   \"on\": \"operator\"\n  }\n ],\n \"_links\": {\n  \"filter\": {\n   \"href\": \"/api/v3/queries/filters/author\",\n   \"title\": \"Author\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/queries/filter_instance_schemas/author\"\n  }\n },\n \"_type\": \"QueryFilterInstanceSchema\",\n \"filter\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"name\": \"Filter\",\n  \"required\": true,\n  \"type\": \"QueryFilter\",\n  \"writable\": true\n },\n \"name\": {\n  \"hasDefault\": true,\n  \"name\": \"Name\",\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": false\n }\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/filter_instance_schemas/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														"filter_instance_schemas",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "author",
															"description": "(Required) QueryFilterInstanceSchema identifier. The identifier is the filter identifier."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:Unauthenticated\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the QueryFilterInstanceSchema does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/filter_instance_schemas/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														"filter_instance_schemas",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "author",
															"description": "(Required) QueryFilterInstanceSchema identifier. The identifier is the filter identifier."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified query does not exist.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete query",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Query id"
												}
											]
										},
										"description": "Delete the query identified by the id parameter"
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** for own queries none; for public queries: manage public queries\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding query",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required condition:** query belongs to user or query is public\n\n**Required permission:** view work package in queries project",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "View query",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/:id?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&columns=[]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&timelineLabels={}&highlightingMode=inline&highlightedAttributes=[]&showHierarchies=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												":id"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]",
													"description": "JSON specifying filter conditions.\nThe filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters.\nAll filters also accepted by the work packages endpoint are accepted. If no filter is to be applied, the client should send an empty array (`[]`)."
												},
												{
													"key": "offset",
													"value": "1",
													"description": "Page number inside the queries' result collection of work packages."
												},
												{
													"key": "pageSize",
													"value": "55287423",
													"description": "Number of elements to display per page for the queries' result collection of work packages."
												},
												{
													"key": "columns",
													"value": "[]",
													"description": "Selected columns for the table view."
												},
												{
													"key": "sortBy",
													"value": "[[\"status\", \"asc\"]]",
													"description": "JSON specifying sort criteria. The sort criteria is applied to the query's result collection of work packages overriding the query's persisted sort criteria."
												},
												{
													"key": "groupBy",
													"value": "status",
													"description": "The column to group by. The grouping criteria is applied to the to the query's result collection of work packages overriding the query's persisted group criteria."
												},
												{
													"key": "showSums",
													"value": "false",
													"description": "Indicates whether properties should be summed up if they support it. The showSums parameter is applied to the to the query's result collection of work packages overriding the query's persisted sums property."
												},
												{
													"key": "timelineVisible",
													"value": "false",
													"description": "Indicates whether the timeline should be shown."
												},
												{
													"key": "timelineLabels",
													"value": "{}",
													"description": "Overridden labels in the timeline view"
												},
												{
													"key": "highlightingMode",
													"value": "inline",
													"description": "Highlighting mode for the table view."
												},
												{
													"key": "highlightedAttributes",
													"value": "[]",
													"description": "Highlighted attributes mode for the table view when `highlightingMode` is `inline`. When set to `[]` all highlightable attributes will be returned as `highlightedAttributes`."
												},
												{
													"key": "showHierarchies",
													"value": "true",
													"description": "Indicates whether the hierarchy mode should be enabled."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Query id"
												}
											]
										},
										"description": "Retrieve an individual query as identified by the id parameter. Then end point accepts a number of parameters that can be used to override the resources' persisted parameters."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&columns=[]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&timelineLabels={}&highlightingMode=inline&highlightedAttributes=[]&showHierarchies=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"query": [
														{
															"key": "filters",
															"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]"
														},
														{
															"key": "offset",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "55287423"
														},
														{
															"key": "columns",
															"value": "[]"
														},
														{
															"key": "sortBy",
															"value": "[[\"status\", \"asc\"]]"
														},
														{
															"key": "groupBy",
															"value": "status"
														},
														{
															"key": "showSums",
															"value": "false"
														},
														{
															"key": "timelineVisible",
															"value": "false"
														},
														{
															"key": "timelineLabels",
															"value": "{}"
														},
														{
															"key": "highlightingMode",
															"value": "inline"
														},
														{
															"key": "highlightedAttributes",
															"value": "[]"
														},
														{
															"key": "showHierarchies",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"highlightedAttributes\": [],\n  \"results\": {\n   \"_embedded\": {\n    \"elements\": [\n     \"<--- shortened for brevity --->\"\n    ]\n   },\n   \"_links\": {\n    \"changeSize\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"createWorkPackage\": {\n     \"href\": \"/api/v3/work_packages/form\",\n     \"method\": \"post\"\n    },\n    \"createWorkPackageImmediate\": {\n     \"href\": \"/api/v3/work_packages\",\n     \"method\": \"post\"\n    },\n    \"jumpTo\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"self\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n    }\n   },\n   \"_type\": \"WorkPackageCollection\",\n   \"count\": 30,\n   \"offset\": 1,\n   \"pageSize\": 2,\n   \"total\": 234\n  }\n },\n \"_links\": {\n  \"columns\": [\n   {\n    \"href\": \"/api/v3/queries/columns/id\",\n    \"title\": \"ID\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/subject\",\n    \"title\": \"Subject\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/type\",\n    \"title\": \"Type\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/status\",\n    \"title\": \"Status\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/priority\",\n    \"title\": \"Priority\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/assignee\",\n    \"title\": \"Assignee\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/updated_at\",\n    \"title\": \"Updated on\"\n   }\n  ],\n  \"groupBy\": {\n   \"href\": null,\n   \"title\": null\n  },\n  \"highlightedAttributes\": [],\n  \"project\": {\n   \"href\": \"/api/v3/projects/3\",\n   \"title\": \"copy\"\n  },\n  \"results\": {\n   \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/queries/9\",\n   \"title\": \"fdsfdsfdsf\"\n  },\n  \"sortBy\": [\n   {\n    \"href\": \"/api/v3/queries/sort_bys/parent-desc\",\n    \"title\": \"Parent (Descending)\"\n   }\n  ],\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin\"\n  }\n },\n \"_type\": \"Query\",\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"filters\": [\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/status\",\n     \"title\": \"Status\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/o\",\n     \"title\": \"open\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/status\"\n    },\n    \"values\": []\n   },\n   \"_type\": \"StatusQueryFilter\",\n   \"name\": \"Status\"\n  },\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/dueDate\",\n     \"title\": \"Finish date\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/<t+\",\n     \"title\": \"in less than\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/dueDate\"\n    }\n   },\n   \"_type\": \"DueDateQueryFilter\",\n   \"name\": \"Finish date\",\n   \"values\": [\n    \"1\"\n   ]\n  }\n ],\n \"id\": 9,\n \"name\": \"fdsfdsfdsf\",\n \"public\": false,\n \"starred\": false,\n \"sums\": false,\n \"updatedAt\": \"2015-05-20T18:16:53Z\"\n}"
										},
										{
											"name": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required condition:** query belongs to user or query is public\n\n**Required permission:** view work package in queries project",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&columns=[]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&timelineLabels={}&highlightingMode=inline&highlightedAttributes=[]&showHierarchies=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"query": [
														{
															"key": "filters",
															"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]"
														},
														{
															"key": "offset",
															"value": "1"
														},
														{
															"key": "pageSize",
															"value": "55287423"
														},
														{
															"key": "columns",
															"value": "[]"
														},
														{
															"key": "sortBy",
															"value": "[[\"status\", \"asc\"]]"
														},
														{
															"key": "groupBy",
															"value": "status"
														},
														{
															"key": "showSums",
															"value": "false"
														},
														{
															"key": "timelineVisible",
															"value": "false"
														},
														{
															"key": "timelineLabels",
															"value": "{}"
														},
														{
															"key": "highlightingMode",
															"value": "inline"
														},
														{
															"key": "highlightedAttributes",
															"value": "[]"
														},
														{
															"key": "showHierarchies",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified query does not exist.\"\n}"
										}
									]
								},
								{
									"name": "Edit Query",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"New query name\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Query id"
												}
											]
										},
										"description": "When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body.\nNote that it is only allowed to provide properties or links supporting the **write** operation."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"New query name\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"highlightedAttributes\": [],\n  \"results\": {\n   \"_embedded\": {\n    \"elements\": [\n     \"<--- shortened for brevity --->\"\n    ]\n   },\n   \"_links\": {\n    \"changeSize\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"createWorkPackage\": {\n     \"href\": \"/api/v3/work_packages/form\",\n     \"method\": \"post\"\n    },\n    \"createWorkPackageImmediate\": {\n     \"href\": \"/api/v3/work_packages\",\n     \"method\": \"post\"\n    },\n    \"jumpTo\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"self\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n    }\n   },\n   \"_type\": \"WorkPackageCollection\",\n   \"count\": 30,\n   \"offset\": 1,\n   \"pageSize\": 2,\n   \"total\": 234\n  }\n },\n \"_links\": {\n  \"columns\": [\n   {\n    \"href\": \"/api/v3/queries/columns/id\",\n    \"title\": \"ID\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/subject\",\n    \"title\": \"Subject\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/type\",\n    \"title\": \"Type\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/status\",\n    \"title\": \"Status\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/priority\",\n    \"title\": \"Priority\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/assignee\",\n    \"title\": \"Assignee\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/updated_at\",\n    \"title\": \"Updated on\"\n   }\n  ],\n  \"groupBy\": {\n   \"href\": null,\n   \"title\": null\n  },\n  \"highlightedAttributes\": [],\n  \"project\": {\n   \"href\": \"/api/v3/projects/3\",\n   \"title\": \"copy\"\n  },\n  \"results\": {\n   \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/queries/9\",\n   \"title\": \"fdsfdsfdsf\"\n  },\n  \"sortBy\": [\n   {\n    \"href\": \"/api/v3/queries/sort_bys/parent-desc\",\n    \"title\": \"Parent (Descending)\"\n   }\n  ],\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin\"\n  }\n },\n \"_type\": \"Query\",\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"filters\": [\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/status\",\n     \"title\": \"Status\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/o\",\n     \"title\": \"open\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/status\"\n    },\n    \"values\": []\n   },\n   \"_type\": \"StatusQueryFilter\",\n   \"name\": \"Status\"\n  },\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/dueDate\",\n     \"title\": \"Finish date\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/<t+\",\n     \"title\": \"in less than\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/dueDate\"\n    }\n   },\n   \"_type\": \"DueDateQueryFilter\",\n   \"name\": \"Finish date\",\n   \"values\": [\n    \"1\"\n   ]\n  }\n ],\n \"id\": 9,\n \"name\": \"fdsfdsfdsf\",\n \"public\": false,\n \"starred\": false,\n \"sums\": false,\n \"updatedAt\": \"2015-05-20T18:16:53Z\"\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"New query name\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"New query name\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to edit the content of the work package.\"\n}"
										},
										{
											"name": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work packages in the query's project (unless global)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"New query name\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified query does not exist.\"\n}"
										},
										{
											"name": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"New query name\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"name\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"The name might not be blank.\"\n}"
										}
									]
								},
								{
									"name": "Star query",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/:id/star",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												":id",
												"star"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Query id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id/star",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id",
														"star"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"results\": {\n   \"_embedded\": {\n    \"elements\": [\n     \"<--- shortened for brevity --->\"\n    ]\n   },\n   \"_links\": {\n    \"changeSize\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"createWorkPackage\": {\n     \"href\": \"/api/v3/work_packages/form\",\n     \"method\": \"post\"\n    },\n    \"createWorkPackageImmediate\": {\n     \"href\": \"/api/v3/work_packages\",\n     \"method\": \"post\"\n    },\n    \"jumpTo\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"self\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n    }\n   },\n   \"_type\": \"WorkPackageCollection\",\n   \"count\": 30,\n   \"offset\": 1,\n   \"pageSize\": 2,\n   \"total\": 234\n  }\n },\n \"_links\": {\n  \"columns\": [\n   {\n    \"href\": \"/api/v3/queries/columns/id\",\n    \"title\": \"ID\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/subject\",\n    \"title\": \"Subject\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/type\",\n    \"title\": \"Type\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/status\",\n    \"title\": \"Status\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/priority\",\n    \"title\": \"Priority\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/assignee\",\n    \"title\": \"Assignee\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/updated_at\",\n    \"title\": \"Updated on\"\n   }\n  ],\n  \"groupBy\": {\n   \"href\": null,\n   \"title\": null\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/3\",\n   \"title\": \"copy\"\n  },\n  \"results\": {\n   \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/queries/9\",\n   \"title\": \"fdsfdsfdsf\"\n  },\n  \"sortBy\": [\n   {\n    \"href\": \"/api/v3/queries/sort_bys/parent-desc\",\n    \"title\": \"Parent (Descending)\"\n   }\n  ],\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin\"\n  }\n },\n \"_type\": \"Query\",\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"filters\": [\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/status\",\n     \"title\": \"Status\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/o\",\n     \"title\": \"open\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/status\"\n    },\n    \"values\": []\n   },\n   \"_type\": \"StatusQueryFilter\",\n   \"name\": \"Status\"\n  },\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/dueDate\",\n     \"title\": \"Finish date\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/<t+\",\n     \"title\": \"in less than\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/dueDate\"\n    }\n   },\n   \"_type\": \"DueDateQueryFilter\",\n   \"name\": \"Finish date\",\n   \"values\": [\n    \"1\"\n   ]\n  }\n ],\n \"id\": 9,\n \"name\": \"fdsfdsfdsf\",\n \"public\": false,\n \"starred\": true,\n \"sums\": false,\n \"updatedAt\": \"2015-05-20T18:16:53Z\"\n}"
										},
										{
											"name": "Occurs when the client did not send an empty request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id/star",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id",
														"star"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not empty.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** for own queries none; for public queries: manage public queries\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding query",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id/star",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id",
														"star"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to star this query.\"\n}"
										},
										{
											"name": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required condition:** query belongs to user or query is public\n\n**Required permission:** view work package in queries project",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id/star",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id",
														"star"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified query does not exist.\"\n}"
										}
									]
								},
								{
									"name": "Unstar query",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/:id/unstar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												":id",
												"unstar"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Query id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id/unstar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id",
														"unstar"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"results\": {\n   \"_embedded\": {\n    \"elements\": [\n     \"<--- shortened for brevity --->\"\n    ]\n   },\n   \"_links\": {\n    \"changeSize\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"createWorkPackage\": {\n     \"href\": \"/api/v3/work_packages/form\",\n     \"method\": \"post\"\n    },\n    \"createWorkPackageImmediate\": {\n     \"href\": \"/api/v3/work_packages\",\n     \"method\": \"post\"\n    },\n    \"jumpTo\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"self\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n    }\n   },\n   \"_type\": \"WorkPackageCollection\",\n   \"count\": 30,\n   \"offset\": 1,\n   \"pageSize\": 2,\n   \"total\": 234\n  }\n },\n \"_links\": {\n  \"columns\": [\n   {\n    \"href\": \"/api/v3/queries/columns/id\",\n    \"title\": \"ID\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/subject\",\n    \"title\": \"Subject\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/type\",\n    \"title\": \"Type\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/status\",\n    \"title\": \"Status\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/priority\",\n    \"title\": \"Priority\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/assignee\",\n    \"title\": \"Assignee\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/updated_at\",\n    \"title\": \"Updated on\"\n   }\n  ],\n  \"groupBy\": {\n   \"href\": null,\n   \"title\": null\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/3\",\n   \"title\": \"copy\"\n  },\n  \"results\": {\n   \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/queries/9\",\n   \"title\": \"fdsfdsfdsf\"\n  },\n  \"sortBy\": [\n   {\n    \"href\": \"/api/v3/queries/sort_bys/parent-desc\",\n    \"title\": \"Parent (Descending)\"\n   }\n  ],\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin\"\n  }\n },\n \"_type\": \"Query\",\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"filters\": [\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/status\",\n     \"title\": \"Status\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/o\",\n     \"title\": \"open\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/status\"\n    },\n    \"values\": []\n   },\n   \"_type\": \"StatusQueryFilter\",\n   \"name\": \"Status\"\n  },\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/dueDate\",\n     \"title\": \"Finish date\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/<t+\",\n     \"title\": \"in less than\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/dueDate\"\n    }\n   },\n   \"_type\": \"DueDateQueryFilter\",\n   \"name\": \"Finish date\",\n   \"values\": [\n    \"1\"\n   ]\n  }\n ],\n \"id\": 9,\n \"name\": \"fdsfdsfdsf\",\n \"public\": false,\n \"starred\": false,\n \"sums\": false,\n \"updatedAt\": \"2015-05-20T18:16:53Z\"\n}"
										},
										{
											"name": "Occurs when the client did not send an empty request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id/unstar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id",
														"unstar"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not empty.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** for own queries none; for public queries: manage public queries\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding query",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id/unstar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id",
														"unstar"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to unstar this query.\"\n}"
										},
										{
											"name": "Returned if the query does not exist or the client does not have sufficient permissions to see it.\n\n**Required condition:** query belongs to user or query is public\n\n**Required permission:** view work package in queries project",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/queries/:id/unstar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"queries",
														":id",
														"unstar"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Query id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified query does not exist.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List queries",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries?filters=[{ \"project_id\": { \"operator\": \"!*\", \"values\": null }\" }]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"project_id\": { \"operator\": \"!*\", \"values\": null }\" }]",
											"description": "JSON specifying filter conditions.\nCurrently supported filters are:\n\n+ project: filters queries by the project they are assigned to. If the project filter is passed with the `!*` (not any) operator, global queries are returned.\n\n+ id: filters queries based on their id\n\n+ updated_at: filters queries based on the last time they where updated"
										}
									]
								},
								"description": "Returns a collection of queries. The collection can be filtered via query parameters similar to how work packages are filtered. Please note however, that the filters are applied to the queries and not to the work packages the queries in turn might return."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries?filters=[{ \"project_id\": { \"operator\": \"!*\", \"values\": null }\" }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"project_id\": { \"operator\": \"!*\", \"values\": null }\" }]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_embedded\": {\n     \"results\": {\n      \"_embedded\": {\n       \"elements\": [\n        \"<--- shortened for brevity --->\"\n       ]\n      },\n      \"_links\": {\n       \"changeSize\": {\n        \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n        \"templated\": true\n       },\n       \"createWorkPackage\": {\n        \"href\": \"/api/v3/work_packages/form\",\n        \"method\": \"post\"\n       },\n       \"createWorkPackageImmediate\": {\n        \"href\": \"/api/v3/work_packages\",\n        \"method\": \"post\"\n       },\n       \"jumpTo\": {\n        \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n        \"templated\": true\n       },\n       \"self\": {\n        \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n       }\n      },\n      \"_type\": \"WorkPackageCollection\",\n      \"count\": 30,\n      \"offset\": 1,\n      \"pageSize\": 2,\n      \"total\": 234\n     }\n    },\n    \"_links\": {\n     \"columns\": [\n      {\n       \"href\": \"/api/v3/queries/columns/id\",\n       \"title\": \"ID\"\n      },\n      {\n       \"href\": \"/api/v3/queries/columns/subject\",\n       \"title\": \"Subject\"\n      },\n      {\n       \"href\": \"/api/v3/queries/columns/type\",\n       \"title\": \"Type\"\n      },\n      {\n       \"href\": \"/api/v3/queries/columns/status\",\n       \"title\": \"Status\"\n      },\n      {\n       \"href\": \"/api/v3/queries/columns/priority\",\n       \"title\": \"Priority\"\n      },\n      {\n       \"href\": \"/api/v3/queries/columns/assignee\",\n       \"title\": \"Assignee\"\n      },\n      {\n       \"href\": \"/api/v3/queries/columns/updated_at\",\n       \"title\": \"Updated on\"\n      }\n     ],\n     \"groupBy\": {\n      \"href\": null,\n      \"title\": null\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/3\",\n      \"title\": \"copy\"\n     },\n     \"results\": {\n      \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/queries/9\",\n      \"title\": \"fdsfdsfdsf\"\n     },\n     \"sortBy\": [\n      {\n       \"href\": \"/api/v3/queries/sort_bys/parent-desc\",\n       \"title\": \"Parent (Descending)\"\n      }\n     ],\n     \"user\": {\n      \"href\": \"/api/v3/users/1\",\n      \"title\": \"OpenProject Admin\"\n     }\n    },\n    \"_type\": \"Query\",\n    \"createdAt\": \"2015-03-20T12:56:56Z\",\n    \"filters\": [\n     {\n      \"_links\": {\n       \"filter\": {\n        \"href\": \"/api/v3/queries/filters/status\",\n        \"title\": \"Status\"\n       },\n       \"operator\": {\n        \"href\": \"/api/v3/queries/operators/o\",\n        \"title\": \"open\"\n       },\n       \"schema\": {\n        \"href\": \"/api/v3/queries/filter_instance_schemas/status\"\n       },\n       \"values\": []\n      },\n      \"_type\": \"StatusQueryFilter\",\n      \"name\": \"Status\"\n     },\n     {\n      \"_links\": {\n       \"filter\": {\n        \"href\": \"/api/v3/queries/filters/dueDate\",\n        \"title\": \"Finish date\"\n       },\n       \"operator\": {\n        \"href\": \"/api/v3/queries/operators/<t+\",\n        \"title\": \"in less than\"\n       },\n       \"schema\": {\n        \"href\": \"/api/v3/queries/filter_instance_schemas/dueDate\"\n       }\n      },\n      \"_type\": \"DueDateQueryFilter\",\n      \"name\": \"Finish date\",\n      \"values\": [\n       \"1\"\n      ]\n     }\n    ],\n    \"id\": 9,\n    \"name\": \"fdsfdsfdsf\",\n    \"public\": false,\n    \"starred\": true,\n    \"sums\": false,\n    \"updatedAt\": \"2015-05-20T18:16:53Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/queries\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 1,\n \"total\": 1\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see queries.\n\n**Required permission:** view work packages or manage public queries in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries?filters=[{ \"project_id\": { \"operator\": \"!*\", \"values\": null }\" }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"project_id\": { \"operator\": \"!*\", \"values\": null }\" }]"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see the queries.\"\n}"
								}
							]
						},
						{
							"name": "Create query",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries"
									]
								},
								"description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\nThe required fields of a Query can be found in its schema, which is embedded in the respective form.\nNote that it is only allowed to provide properties or links supporting the write operation."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"highlightedAttributes\": [],\n  \"results\": {\n   \"_embedded\": {\n    \"elements\": [\n     \"<--- shortened for brevity --->\"\n    ]\n   },\n   \"_links\": {\n    \"changeSize\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"createWorkPackage\": {\n     \"href\": \"/api/v3/work_packages/form\",\n     \"method\": \"post\"\n    },\n    \"createWorkPackageImmediate\": {\n     \"href\": \"/api/v3/work_packages\",\n     \"method\": \"post\"\n    },\n    \"jumpTo\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"self\": {\n     \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n    }\n   },\n   \"_type\": \"WorkPackageCollection\",\n   \"count\": 30,\n   \"offset\": 1,\n   \"pageSize\": 2,\n   \"total\": 234\n  }\n },\n \"_links\": {\n  \"columns\": [\n   {\n    \"href\": \"/api/v3/queries/columns/id\",\n    \"title\": \"ID\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/subject\",\n    \"title\": \"Subject\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/type\",\n    \"title\": \"Type\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/status\",\n    \"title\": \"Status\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/priority\",\n    \"title\": \"Priority\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/assignee\",\n    \"title\": \"Assignee\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/updated_at\",\n    \"title\": \"Updated on\"\n   }\n  ],\n  \"groupBy\": {\n   \"href\": null,\n   \"title\": null\n  },\n  \"highlightedAttributes\": [],\n  \"project\": {\n   \"href\": \"/api/v3/projects/3\",\n   \"title\": \"copy\"\n  },\n  \"results\": {\n   \"href\": \"/api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/queries/9\",\n   \"title\": \"fdsfdsfdsf\"\n  },\n  \"sortBy\": [\n   {\n    \"href\": \"/api/v3/queries/sort_bys/parent-desc\",\n    \"title\": \"Parent (Descending)\"\n   }\n  ],\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin\"\n  }\n },\n \"_type\": \"Query\",\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"filters\": [\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/status\",\n     \"title\": \"Status\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/o\",\n     \"title\": \"open\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/status\"\n    },\n    \"values\": []\n   },\n   \"_type\": \"StatusQueryFilter\",\n   \"name\": \"Status\"\n  },\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/dueDate\",\n     \"title\": \"Finish date\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/<t+\",\n     \"title\": \"in less than\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/dueDate\"\n    }\n   },\n   \"_type\": \"DueDateQueryFilter\",\n   \"name\": \"Finish date\",\n   \"values\": [\n    \"1\"\n   ]\n  }\n ],\n \"id\": 9,\n \"name\": \"fdsfdsfdsf\",\n \"public\": false,\n \"starred\": false,\n \"sums\": false,\n \"updatedAt\": \"2015-05-20T18:16:53Z\"\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`),\n  e.g. a user",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"project\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Project not found\"\n}"
								}
							]
						},
						{
							"name": "Available projects for query",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries/available_projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries",
										"available_projects"
									]
								},
								"description": "Gets a list of projects that are available as projects a query can be assigned to."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/available_projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"available_projects"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/6/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/6/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/6/work_packages\",\n      \"method\": \"post\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/6\",\n      \"title\": \"A project\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/6/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"createdAt\": \"2015-07-06T13:28:14+00:00\",\n    \"description\": \"Eveniet molestias omnis quis aut qui eum adipisci.\",\n    \"id\": 6,\n    \"identifier\": \"a_project\",\n    \"name\": \"A project\",\n    \"type\": \"Customer Project\",\n    \"updatedAt\": \"2015-10-01T09:55:02+00:00\"\n   },\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/14/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/14/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/14/work_packages\",\n      \"method\": \"post\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/14\",\n      \"title\": \"Another project\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/14/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"createdAt\": \"2016-02-29T12:50:20+00:00\",\n    \"description\": \"\",\n    \"id\": 14,\n    \"identifier\": \"another_project\",\n    \"name\": \"Another project\",\n    \"type\": null,\n    \"updatedAt\": \"2016-02-29T12:50:20+00:00\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/queries/available_projects\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/available_projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"available_projects"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "View Query Column",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries/columns/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries",
										"columns",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "priority",
											"description": "(Required) QueryColumn id"
										}
									]
								},
								"description": "Retrieve an individual QueryColumn as identified by the `id` parameter."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/columns/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"columns",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "priority",
													"description": "(Required) QueryColumn id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/queries/columns/priority\",\n   \"title\": \"Priority\"\n  }\n },\n \"_type\": \"QueryColumn::Property\",\n \"id\": \"priority\",\n \"name\": \"Priority\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/columns/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"columns",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "priority",
													"description": "(Required) QueryColumn id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:Unauthenticated\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if the QueryColumn does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/columns/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"columns",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "priority",
													"description": "(Required) QueryColumn id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified query does not exist.\"\n}"
								}
							]
						},
						{
							"name": "View default query",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries/default?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&timelineZoomLevel=days&showHierarchies=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries",
										"default"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]",
											"description": "JSON specifying filter conditions.\nThe filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters.\nAll filters also accepted by the work packages endpoint are accepted. If no filter is to be applied, the client should send an empty array (`[]`)."
										},
										{
											"key": "offset",
											"value": "1",
											"description": "Page number inside the queries' result collection of work packages."
										},
										{
											"key": "pageSize",
											"value": "55287423",
											"description": "Number of elements to display per page for the queries' result collection of work packages."
										},
										{
											"key": "sortBy",
											"value": "[[\"status\", \"asc\"]]",
											"description": "JSON specifying sort criteria. The sort criteria is applied to the query's result collection of work packages overriding the query's persisted sort criteria."
										},
										{
											"key": "groupBy",
											"value": "status",
											"description": "The column to group by. The grouping criteria is applied to the to the query's result collection of work packages overriding the query's persisted group criteria."
										},
										{
											"key": "showSums",
											"value": "false",
											"description": "Indicates whether properties should be summed up if they support it. The showSums parameter is applied to the to the query's result collection of work packages overriding the query's persisted sums property."
										},
										{
											"key": "timelineVisible",
											"value": "false",
											"description": "Indicates whether the timeline should be shown."
										},
										{
											"key": "timelineZoomLevel",
											"value": "days",
											"description": "Indicates in what zoom level the timeline should be shown. Valid values are  `days`, `weeks`, `months`, `quarters`, and `years`."
										},
										{
											"key": "showHierarchies",
											"value": "true",
											"description": "Indicates whether the hierarchy mode should be enabled."
										}
									]
								},
								"description": "Same as [viewing an existing, persisted Query](https://www.openproject.org/docs/api/endpoints/queries/#list-queries) in its response, this resource returns an unpersisted query and by that allows to get the default query configuration. The client may also provide additional parameters which will modify the default query."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/default?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&timelineZoomLevel=days&showHierarchies=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"default"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]"
												},
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"status\", \"asc\"]]"
												},
												{
													"key": "groupBy",
													"value": "status"
												},
												{
													"key": "showSums",
													"value": "false"
												},
												{
													"key": "timelineVisible",
													"value": "false"
												},
												{
													"key": "timelineZoomLevel",
													"value": "days"
												},
												{
													"key": "showHierarchies",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"results\": {\n   \"_embedded\": {\n    \"elements\": [\n     \"<--- shortened for brevity --->\"\n    ]\n   },\n   \"_links\": {\n    \"changeSize\": {\n     \"href\": \"/api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"createWorkPackage\": {\n     \"href\": \"/api/v3/work_packages/form\",\n     \"method\": \"post\"\n    },\n    \"createWorkPackageImmediate\": {\n     \"href\": \"/api/v3/work_packages\",\n     \"method\": \"post\"\n    },\n    \"jumpTo\": {\n     \"href\": \"/api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\",\n     \"templated\": true\n    },\n    \"self\": {\n     \"href\": \"/api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n    }\n   },\n   \"_type\": \"WorkPackageCollection\",\n   \"count\": 30,\n   \"highlightedAttributes\": [],\n   \"offset\": 1,\n   \"pageSize\": 2,\n   \"total\": 234\n  }\n },\n \"_links\": {\n  \"columns\": [\n   {\n    \"href\": \"/api/v3/queries/columns/id\",\n    \"title\": \"ID\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/subject\",\n    \"title\": \"Subject\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/type\",\n    \"title\": \"Type\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/status\",\n    \"title\": \"Status\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/priority\",\n    \"title\": \"Priority\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/assignee\",\n    \"title\": \"Assignee\"\n   },\n   {\n    \"href\": \"/api/v3/queries/columns/updated_at\",\n    \"title\": \"Updated on\"\n   }\n  ],\n  \"groupBy\": {\n   \"href\": null,\n   \"title\": null\n  },\n  \"highlightedAttributes\": [],\n  \"project\": {\n   \"href\": null\n  },\n  \"results\": {\n   \"href\": \"/api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/queries/default\",\n   \"title\": \"Default\"\n  },\n  \"sortBy\": [\n   {\n    \"href\": \"/api/v3/queries/sort_bys/parent-desc\",\n    \"title\": \"Parent (Descending)\"\n   }\n  ],\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin\"\n  }\n },\n \"_type\": \"Query\",\n \"filters\": [\n  {\n   \"_links\": {\n    \"filter\": {\n     \"href\": \"/api/v3/queries/filters/status\",\n     \"title\": \"Status\"\n    },\n    \"operator\": {\n     \"href\": \"/api/v3/queries/operators/o\",\n     \"title\": \"open\"\n    },\n    \"schema\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas/status\"\n    },\n    \"values\": []\n   },\n   \"_type\": \"StatusQueryFilter\",\n   \"name\": \"Status\"\n  }\n ],\n \"highlightingMode\": \"inline\",\n \"name\": \"default\",\n \"public\": false,\n \"showHierarchies\": true,\n \"starred\": false,\n \"sums\": false,\n \"timelineLabels\": {},\n \"timelineVisible\": false,\n \"timelineZoomLevel\": \"days\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see the default query.\n\n**Required permission:** view work packages in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/default?filters=[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]&offset=1&pageSize=55287423&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false&timelineVisible=false&timelineZoomLevel=days&showHierarchies=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"default"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"] }\" }]"
												},
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"status\", \"asc\"]]"
												},
												{
													"key": "groupBy",
													"value": "status"
												},
												{
													"key": "showSums",
													"value": "false"
												},
												{
													"key": "timelineVisible",
													"value": "false"
												},
												{
													"key": "timelineZoomLevel",
													"value": "days"
												},
												{
													"key": "showHierarchies",
													"value": "true"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "View Query Filter",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries/filters/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries",
										"filters",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "status",
											"description": "(Required) QueryFilter identifier"
										}
									]
								},
								"description": "Retrieve an individual QueryFilter as identified by the id parameter."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/filters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"filters",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "status",
													"description": "(Required) QueryFilter identifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/queries/filters/status\",\n   \"title\": \"Status\"\n  }\n },\n \"_type\": \"QueryFilter\",\n \"id\": \"status\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/filters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"filters",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "status",
													"description": "(Required) QueryFilter identifier"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:Unauthenticated\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if the QueryFilter does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/filters/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"filters",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "status",
													"description": "(Required) QueryFilter identifier"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified query does not exist.\"\n}"
								}
							]
						},
						{
							"name": "Query Create Form",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries/form",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries",
										"form"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"form"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "View Query Operator",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries/operators/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries",
										"operators",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "!",
											"description": "(Required) QueryOperator id"
										}
									]
								},
								"description": "Retrieve an individual QueryOperator as identified by the `id` parameter."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/operators/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"operators",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "!",
													"description": "(Required) QueryOperator id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/queries/operators/!\",\n   \"title\": \"is not\"\n  }\n },\n \"_type\": \"QueryOperator\",\n \"id\": \"!\",\n \"name\": \"is not\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/operators/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"operators",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "!",
													"description": "(Required) QueryOperator id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:Unauthenticated\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if the QueryOperator does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/operators/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"operators",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "!",
													"description": "(Required) QueryOperator id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified query does not exist.\"\n}"
								}
							]
						},
						{
							"name": "View schema for global queries",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries/schema",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries",
										"schema"
									]
								},
								"description": "Retrieve the schema for global queries, those, that are not assigned to a project."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"schema"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_dependencies\": [],\n \"_embedded\": {\n  \"filtersSchemas\": {\n   \"_embedded\": {\n    \"elements\": [\n     {\n      \"_dependencies\": [\n       {\n        \"_type\": \"SchemaDependency\",\n        \"dependencies\": {\n         \"/api/v3/queries/operators/!\": {\n          \"values\": {\n           \"_links\": {},\n           \"hasDefault\": false,\n           \"name\": \"Values\",\n           \"required\": true,\n           \"type\": \"[]User\",\n           \"writable\": true\n          }\n         },\n         \"/api/v3/queries/operators/!*\": {},\n         \"/api/v3/queries/operators/*\": {},\n         \"/api/v3/queries/operators/=\": {\n          \"values\": {\n           \"_links\": {},\n           \"hasDefault\": false,\n           \"name\": \"Values\",\n           \"required\": true,\n           \"type\": \"[]User\",\n           \"writable\": true\n          }\n         }\n        },\n        \"on\": \"operator\"\n       }\n      ],\n      \"_links\": {\n       \"filter\": {\n        \"href\": \"/api/v3/queries/filters/assignee\",\n        \"title\": \"Assignee\"\n       },\n       \"self\": {\n        \"href\": \"/api/v3/queries/filter_instance_schemas/assignee\"\n       }\n      },\n      \"_type\": \"QueryFilterInstanceSchema\",\n      \"filter\": {\n       \"_links\": {},\n       \"hasDefault\": false,\n       \"name\": \"Filter\",\n       \"required\": true,\n       \"type\": \"QueryFilter\",\n       \"writable\": true\n      },\n      \"name\": {\n       \"hasDefault\": true,\n       \"name\": \"Name\",\n       \"required\": true,\n       \"type\": \"String\",\n       \"writable\": false\n      }\n     },\n     {\n      \"_dependencies\": [\n       {\n        \"_type\": \"SchemaDependency\",\n        \"dependencies\": {\n         \"/api/v3/queries/operators/!\": {\n          \"values\": {\n           \"_links\": {},\n           \"hasDefault\": false,\n           \"name\": \"Values\",\n           \"required\": true,\n           \"type\": \"[]User\",\n           \"writable\": true\n          }\n         },\n         \"/api/v3/queries/operators/=\": {\n          \"values\": {\n           \"_links\": {},\n           \"hasDefault\": false,\n           \"name\": \"Values\",\n           \"required\": true,\n           \"type\": \"[]User\",\n           \"writable\": true\n          }\n         }\n        },\n        \"on\": \"operator\"\n       }\n      ],\n      \"_links\": {\n       \"filter\": {\n        \"href\": \"/api/v3/queries/filters/author\",\n        \"title\": \"Author\"\n       },\n       \"self\": {\n        \"href\": \"/api/v3/queries/filter_instance_schemas/author\"\n       }\n      },\n      \"_type\": \"QueryFilterInstanceSchema\",\n      \"filter\": {\n       \"_links\": {},\n       \"hasDefault\": false,\n       \"name\": \"Filter\",\n       \"required\": true,\n       \"type\": \"QueryFilter\",\n       \"writable\": true\n      },\n      \"name\": {\n       \"hasDefault\": true,\n       \"name\": \"Name\",\n       \"required\": true,\n       \"type\": \"String\",\n       \"writable\": false\n      }\n     }\n    ]\n   },\n   \"_links\": {\n    \"self\": {\n     \"href\": \"/api/v3/queries/filter_instance_schemas\"\n    }\n   },\n   \"_type\": \"Collection\",\n   \"count\": 20,\n   \"total\": 20\n  }\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/queries/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"columns\": {\n  \"_links\": {},\n  \"hasDefault\": true,\n  \"location\": \"_links\",\n  \"name\": \"Columns\",\n  \"required\": false,\n  \"type\": \"[]QueryColumn\",\n  \"writable\": true\n },\n \"createdAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Created on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"filters\": {\n  \"_links\": {\n   \"allowedValuesSchemas\": {\n    \"href\": \"/api/v3/queries/filter_instance_schemas\"\n   }\n  },\n  \"hasDefault\": true,\n  \"location\": \"_links\",\n  \"name\": \"Filters\",\n  \"required\": false,\n  \"type\": \"[]QueryFilterInstance\",\n  \"writable\": true\n },\n \"groupBy\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"name\": \"Group results by\",\n  \"required\": false,\n  \"type\": \"[]QueryGroupBy\",\n  \"writable\": true\n },\n \"highlightedAttributes\": {\n  \"hasDefault\": true,\n  \"location\": \"_links\",\n  \"name\": \"Highlighted attributes\",\n  \"required\": false,\n  \"type\": \"[]QueryColumn\",\n  \"writable\": true\n },\n \"highlightingMode\": {\n  \"hasDefault\": true,\n  \"name\": \"Highlighting mode\",\n  \"required\": false,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"id\": {\n  \"hasDefault\": false,\n  \"name\": \"ID\",\n  \"required\": true,\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"name\": {\n  \"hasDefault\": false,\n  \"maxLength\": 255,\n  \"minLength\": 1,\n  \"name\": \"Name\",\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"project\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"Project\",\n  \"required\": false,\n  \"type\": \"Project\",\n  \"writable\": true\n },\n \"public\": {\n  \"hasDefault\": true,\n  \"name\": \"Public\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"results\": {\n  \"hasDefault\": false,\n  \"name\": \"Results\",\n  \"required\": false,\n  \"type\": \"WorkPackageCollection\",\n  \"writable\": false\n },\n \"showHierarchies\": {\n  \"hasDefault\": true,\n  \"name\": \"Show hierarchies\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"sortBy\": {\n  \"_links\": {},\n  \"hasDefault\": true,\n  \"name\": \"Sort by\",\n  \"required\": false,\n  \"type\": \"[]QuerySortBy\",\n  \"writable\": true\n },\n \"starred\": {\n  \"hasDefault\": true,\n  \"name\": \"Starred\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"sums\": {\n  \"hasDefault\": true,\n  \"name\": \"Sums\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"timelineLabels\": {\n  \"hasDefault\": true,\n  \"name\": \"Timeline labels\",\n  \"required\": false,\n  \"type\": \"QueryTimelineLabels\",\n  \"writable\": true\n },\n \"timelineVisible\": {\n  \"hasDefault\": true,\n  \"name\": \"Timeline visible\",\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"timelineZoomLevel\": {\n  \"hasDefault\": true,\n  \"name\": \"Timeline zoom level\",\n  \"required\": false,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"updatedAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Updated on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"user\": {\n  \"hasDefault\": true,\n  \"name\": \"User\",\n  \"required\": true,\n  \"type\": \"User\",\n  \"writable\": false\n }\n}"
								},
								{
									"name": "**Required permission:** view work package in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"schema"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "View Query Sort By",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/queries/sort_bys/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"queries",
										"sort_bys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "status-asc",
											"description": "(Required) QuerySortBy identifier. The identifier is a combination of the column identifier and the direction."
										}
									]
								},
								"description": "Retrieve an individual QuerySortBy as identified by the id parameter."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/sort_bys/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"sort_bys",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "status-asc",
													"description": "(Required) QuerySortBy identifier. The identifier is a combination of the column identifier and the direction."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"column\": {\n   \"href\": \"/api/v3/queries/columns/status\",\n   \"title\": \"Status\"\n  },\n  \"direction\": {\n   \"href\": \"urn:openproject-org:api:v3:queries:directions:asc\",\n   \"title\": \"Ascending\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/queries/sort_bys/status-asc\",\n   \"title\": \"Status (Ascending)\"\n  }\n },\n \"_type\": \"QuerySortBy\",\n \"id\": \"status-asc\",\n \"name\": \"Status (Ascending)\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/sort_bys/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"sort_bys",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "status-asc",
													"description": "(Required) QuerySortBy identifier. The identifier is a combination of the column identifier and the direction."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:Unauthenticated\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if the QuerySortBy does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/queries/sort_bys/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"queries",
												"sort_bys",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "status-asc",
													"description": "(Required) QuerySortBy identifier. The identifier is a combination of the column identifier and the direction."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified query does not exist.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "relations",
					"item": [
						{
							"name": "schema",
							"item": [
								{
									"name": "View relation schema",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/relations/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"relations",
												"schema"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/schema",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														"schema"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/relations/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"delay\": {\n  \"name\": \"Delay\",\n  \"type\": \"Integer\",\n  \"writable\": true\n },\n \"description\": {\n  \"name\": \"Description\",\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"from\": {\n  \"name\": \"From work package\",\n  \"type\": \"WorkPackage\",\n  \"writable\": false\n },\n \"id\": {\n  \"name\": \"ID\",\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"reverseType\": {\n  \"name\": \"Reverse Type\",\n  \"type\": \"String\",\n  \"writable\": false\n },\n \"to\": {\n  \"name\": \"To work package\",\n  \"type\": \"WorkPackage\",\n  \"writable\": false\n },\n \"type\": {\n  \"name\": \"Type\",\n  \"type\": \"String\",\n  \"writable\": true\n }\n}"
										}
									]
								},
								{
									"name": "View relation schema for type",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/relations/schema/:type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"relations",
												"schema",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "follows",
													"description": "(Required) Type of the schema"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/schema/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														"schema",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "follows",
															"description": "(Required) Type of the schema"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/relations/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"delay\": {\n  \"name\": \"Delay\",\n  \"type\": \"Integer\",\n  \"writable\": true\n },\n \"description\": {\n  \"name\": \"Description\",\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"from\": {\n  \"name\": \"From work package\",\n  \"type\": \"WorkPackage\",\n  \"writable\": false\n },\n \"id\": {\n  \"name\": \"ID\",\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"reverseType\": {\n  \"name\": \"Reverse Type\",\n  \"type\": \"String\",\n  \"writable\": false\n },\n \"to\": {\n  \"name\": \"To work package\",\n  \"type\": \"WorkPackage\",\n  \"writable\": false\n },\n \"type\": {\n  \"name\": \"Type\",\n  \"type\": \"String\",\n  \"writable\": true\n }\n}"
										},
										{
											"name": "Returned if the relation type does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** manage work package relations",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/schema/:type",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														"schema",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "follows",
															"description": "(Required) Type of the schema"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified relation type does not exist.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete Relation",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/relations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"relations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Relation ID"
												}
											]
										},
										"description": "Deletes the relation."
									},
									"response": [
										{
											"name": "Returned if the relation was deleted successfully.\nThe response body is empty.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Relation ID"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage work package relations",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Relation ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to delete this relation.\"\n}"
										},
										{
											"name": "Returned if the relation does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** manage work package relations",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Relation ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified relation does not exist.\"\n}"
										}
									]
								},
								{
									"name": "View Relation",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/relations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"relations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Relation id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Relation id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"delete\": {\n   \"href\": \"/api/v3/relations/1\",\n   \"method\": \"DELETE\"\n  },\n  \"from\": {\n   \"href\": \"/api/v3/work_packages/42\",\n   \"title\": \"Steel Delivery\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/relations/1\"\n  },\n  \"to\": {\n   \"href\": \"/api/v3/work_packages/84\",\n   \"title\": \"Bending the steel\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/relations/1/form\",\n   \"method\": \"POST\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/relations/1\",\n   \"method\": \"PATCH\"\n  }\n },\n \"_type\": \"Relation\",\n \"delay\": 0,\n \"description\": \"We can't bend the steel before it's been delivered!\",\n \"id\": 1,\n \"name\": \"precedes\",\n \"reverseType\": \"follows\",\n \"type\": \"precedes\"\n}"
										},
										{
											"name": "Returned if the relation does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work packages for the involved work packages",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Relation id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified relation does not exist.\"\n}"
										}
									]
								},
								{
									"name": "Edit Relation",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/relations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"relations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Relation ID"
												}
											]
										},
										"description": "When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body.\nIt is only allowed to provide properties or links supporting the **write** operation.\n\nNote that changing the `type` of a relation invariably also changes the respective `reverseType` as well as the \"name\" of it.\nThe returned Relation object will reflect that change. For instance if you change a Relation's\n`type` to \"follows\" then the `reverseType` will be changed to `precedes`."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Relation ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"delete\": {\n   \"href\": \"/api/v3/relations/1\",\n   \"method\": \"DELETE\"\n  },\n  \"from\": {\n   \"href\": \"/api/v3/work_packages/42\",\n   \"title\": \"Steel Delivery\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/relations/1\"\n  },\n  \"to\": {\n   \"href\": \"/api/v3/work_packages/84\",\n   \"title\": \"Bending the steel\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/relations/1/form\",\n   \"method\": \"POST\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/relations/1\",\n   \"method\": \"PATCH\"\n  }\n },\n \"_type\": \"Relation\",\n \"delay\": 0,\n \"description\": \"We can't bend the steel before it's been delivered!\",\n \"id\": 1,\n \"name\": \"precedes\",\n \"reverseType\": \"follows\",\n \"type\": \"precedes\"\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Relation ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the relation does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** manage work package relations",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Relation ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified relation does not exist.\"\n}"
										},
										{
											"name": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`) or a\n  work pa",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Relation ID"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"delay\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Delay must be a number greater than or equal to 0\"\n}"
										}
									]
								},
								{
									"name": "Relation edit form",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/relations/:id/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"relations",
												":id",
												"form"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the relation being modified"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the relation being modified"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"payload\": {\n   \"_links\": {\n    \"from\": {\n     \"href\": \"/api/v3/work_packages/4534\"\n    },\n    \"to\": {\n     \"href\": \"/api/v3/work_packages/3857\"\n    }\n   },\n   \"_type\": \"WorkPackage\",\n   \"delay\": 3,\n   \"description\": \"let it rest for 3 days\",\n   \"type\": \"follows\"\n  },\n  \"schema\": {\n   \"_links\": {\n    \"self\": {\n     \"href\": \"/api/v3/relations/schema\"\n    }\n   },\n   \"_type\": \"Schema\",\n   \"delay\": {\n    \"name\": \"Delay\",\n    \"type\": \"Integer\",\n    \"writable\": true\n   },\n   \"description\": {\n    \"name\": \"Description\",\n    \"type\": \"String\",\n    \"writable\": true\n   },\n   \"from\": {\n    \"name\": \"From work package\",\n    \"type\": \"WorkPackage\",\n    \"writeable\": false\n   },\n   \"id\": {\n    \"name\": \"ID\",\n    \"type\": \"Integer\",\n    \"writable\": false\n   },\n   \"reverseType\": {\n    \"name\": \"Reverse Type\",\n    \"type\": \"String\",\n    \"writable\": false\n   },\n   \"to\": {\n    \"name\": \"To work package\",\n    \"type\": \"WorkPackage\",\n    \"writable\": false\n   },\n   \"type\": {\n    \"allowedValues\": [\n     \"relates\",\n     \"duplicates\",\n     \"duplicated\",\n     \"blocks\",\n     \"blocked\",\n     \"precedes\",\n     \"follows\",\n     \"includes\",\n     \"partof\",\n     \"requires\",\n     \"required\"\n    ],\n    \"name\": \"Type\",\n    \"type\": \"String\",\n    \"writable\": true\n   }\n  },\n  \"validationErrors\": {\n   \"from\": {\n    \"_type\": \"Error\",\n    \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:BadExampleError\",\n    \"message\": \"For the purpose of this example we need a validation error. The remainder of the response pretends there were no errors.\"\n   }\n  }\n },\n \"_links\": {\n  \"commit\": {\n   \"href\": \"/api/v3/relations\",\n   \"method\": \"PATCH\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/relations/form\"\n  },\n  \"validate\": {\n   \"href\": \"/api/v3/relations/form\",\n   \"method\": \"POST\"\n  }\n },\n \"_type\": \"Form\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage work package relations\n\n*Note that you will only receive this error, if you are at least allowed to see the involved work packages.*",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the relation being modified"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to edit the specified relation.\"\n}"
										},
										{
											"name": "Returned if the relation does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view (involved) work package(s), manage work package relations",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/relations/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"relations",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the relation being modified"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified relation does not exist.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Relations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/relations?filters=[{ \"from\": { \"operator\": \"=\", \"values\": 42 }\" }]&sortBy=[[\"type\", \"asc\"]]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"relations"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"from\": { \"operator\": \"=\", \"values\": 42 }\" }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Valid fields to filter by are:\n\n+ id - ID of relation\n\n+ from - ID of work package from which the filtered relations emanates.\n\n+ to - ID of work package to which this related points.\n\n+ involved - ID of either the `from` or the `to` work package.\n\n+ type - The type of relation to filter by, e.g. \"follows\"."
										},
										{
											"key": "sortBy",
											"value": "[[\"type\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint."
										}
									]
								},
								"description": "Lists all relations according to the given (optional, logically conjunctive) filters and ordered by ID.\nThe response only includes relations between work packages which the user is allowed to see."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/relations?filters=[{ \"from\": { \"operator\": \"=\", \"values\": 42 }\" }]&sortBy=[[\"type\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"relations"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"from\": { \"operator\": \"=\", \"values\": 42 }\" }]"
												},
												{
													"key": "sortBy",
													"value": "[[\"type\", \"asc\"]]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/relations/1\",\n      \"method\": \"DELETE\"\n     },\n     \"from\": {\n      \"href\": \"/api/v3/work_packages/42\",\n      \"title\": \"Steel Delivery\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/relations/1\"\n     },\n     \"to\": {\n      \"href\": \"/api/v3/work_packages/84\",\n      \"title\": \"Bending the steel\"\n     },\n     \"update\": {\n      \"href\": \"/api/v3/relations/1/form\",\n      \"method\": \"POST\"\n     },\n     \"updateImmediately\": {\n      \"href\": \"/api/v3/relations/1\",\n      \"method\": \"PATCH\"\n     }\n    },\n    \"_type\": \"Relation\",\n    \"delay\": 0,\n    \"description\": \"We can't bend the steel before it's been delivered!\",\n    \"id\": 1,\n    \"name\": \"precedes\",\n    \"reverseType\": \"follows\",\n    \"type\": \"precedes\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/relations\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 1,\n \"total\": 3\n}"
								}
							]
						}
					]
				},
				{
					"name": "render",
					"item": [
						{
							"name": "Preview Markdown document",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/render/markdown?context=/api/v3/work_packages/42",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"render",
										"markdown"
									],
									"query": [
										{
											"key": "context",
											"value": "/api/v3/work_packages/42",
											"description": "API-Link to the context in which the rendering occurs, for example a specific work package.\n\nIf left out only context-agnostic rendering takes place.\nPlease note that OpenProject features markdown-extensions on top of the extensions GitHub Flavored Markdown (gfm) already\nprovides that can only work given a context (e.g. display attached images).\n\n**Supported contexts:**\n\n* `/api/v3/work_packages/{id}` - an existing work package"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/render/markdown?context=/api/v3/work_packages/42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"render",
												"markdown"
											],
											"query": [
												{
													"key": "context",
													"value": "/api/v3/work_packages/42"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/html"
										}
									],
									"cookie": [],
									"body": "<p>Hello world! <a href=\"http://example.com\">This</a> <strong>is</strong> markdown!</p>"
								},
								{
									"name": "Returned if the context passed by the client is not valid (e.g. unknown).\n\nNote that this response will also occur when the requesting user\nis not allowed to see the context resource (e.g. limited work package visibility).",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/render/markdown?context=/api/v3/work_packages/42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"render",
												"markdown"
											],
											"query": [
												{
													"key": "context",
													"value": "/api/v3/work_packages/42"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRenderContext\",\n \"message\": \"Could not render markdown string in the given context.\"\n}"
								},
								{
									"name": "Returned if the Content-Type indicated in the request is not `text/plain`.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/render/markdown?context=/api/v3/work_packages/42",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"render",
												"markdown"
											],
											"query": [
												{
													"key": "context",
													"value": "/api/v3/work_packages/42"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:TypeNotSupported\",\n \"message\": \"Expected Content-Type to be 'text/plain' but got 'application/json'.\"\n}"
								}
							]
						},
						{
							"name": "Preview plain document",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/render/plain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"render",
										"plain"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/render/plain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"render",
												"plain"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/html"
										}
									],
									"cookie": [],
									"body": "<p>Hello world! This *is* plain text!</p>\n"
								},
								{
									"name": "Returned if the Content-Type indicated in the request is not `text/plain`.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/render/plain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"render",
												"plain"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:TypeNotSupported\",\n \"message\": \"Expected Content-Type to be 'text/plain' but got 'application/json'.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "roles",
					"item": [
						{
							"name": "List roles",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/roles?filters=[{ \"unit\": { \"operator\": \"=\", \"values\": [\"system\"] }\" }]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"roles"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"unit\": { \"operator\": \"=\", \"values\": [\"system\"] }\" }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.\nCurrently supported filters are:\n\n+ grantable: filters roles based on whether they are selectable for a membership\n\n+ unit: filters roles based on the unit ('project' or 'system') for which they are selectable for a membership"
										}
									]
								},
								"description": "List all defined roles. This includes built in roles like 'Anonymous' and 'Non member'."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/roles?filters=[{ \"unit\": { \"operator\": \"=\", \"values\": [\"system\"] }\" }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"roles"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"unit\": { \"operator\": \"=\", \"values\": [\"system\"] }\" }]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/roles/3\",\n      \"title\": \"Manager\"\n     }\n    },\n    \"_type\": \"Role\",\n    \"id\": 3,\n    \"name\": \"Manager\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/roles/2\",\n      \"title\": \"Anonymous\"\n     }\n    },\n    \"_type\": \"Role\",\n    \"id\": 2,\n    \"name\": \"Anonymous\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/roles/5\",\n      \"title\": \"Reader\"\n     }\n    },\n    \"_type\": \"Role\",\n    \"id\": 5,\n    \"name\": \"Reader\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/roles/4\",\n      \"title\": \"Member\"\n     }\n    },\n    \"_type\": \"Role\",\n    \"id\": 4,\n    \"name\": \"Member\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/roles/1\",\n      \"title\": \"Non member\"\n     }\n    },\n    \"_type\": \"Role\",\n    \"id\": 1,\n    \"name\": \"Non member\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/roles\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 5,\n \"total\": 5\n}"
								}
							]
						},
						{
							"name": "View role",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/roles/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"roles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Role id"
										}
									]
								},
								"description": "Fetch an individual role."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/roles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Role id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/roles/3\",\n   \"title\": \"Manager\"\n  }\n },\n \"_type\": \"Role\",\n \"id\": 3,\n \"name\": \"Manager\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see roles.\n\n**Required permission:** view members **or** manage members",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/roles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Role id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to view this resource.\"\n}"
								},
								{
									"name": "Returned if the role does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/roles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Role id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "statuses",
					"item": [
						{
							"name": "List all Statuses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"statuses"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/statuses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"statuses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/statuses/1\"\n     }\n    },\n    \"_type\": \"Status\",\n    \"defaultDoneRatio\": 0,\n    \"id\": 1,\n    \"isClosed\": false,\n    \"isDefault\": true,\n    \"name\": \"New\",\n    \"position\": 1\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/statuses/3\"\n     }\n    },\n    \"_type\": \"Status\",\n    \"defaultDoneRatio\": 75,\n    \"id\": 3,\n    \"isClosed\": false,\n    \"isDefault\": false,\n    \"isReadonly\": false,\n    \"name\": \"Resolved\",\n    \"position\": 3\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/statuses/4\"\n     }\n    },\n    \"_type\": \"Status\",\n    \"defaultDoneRatio\": 25,\n    \"id\": 4,\n    \"isClosed\": false,\n    \"isDefault\": false,\n    \"name\": \"Feedback\",\n    \"position\": 4\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/statuses/5\"\n     }\n    },\n    \"_type\": \"Status\",\n    \"defaultDoneRatio\": 100,\n    \"id\": 5,\n    \"isClosed\": true,\n    \"isDefault\": false,\n    \"name\": \"Closed\",\n    \"position\": 5\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/statuses/6\"\n     }\n    },\n    \"_type\": \"Status\",\n    \"defaultDoneRatio\": 100,\n    \"id\": 6,\n    \"isClosed\": true,\n    \"isDefault\": false,\n    \"name\": \"Rejected\",\n    \"position\": 6\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/statuses/2\"\n     }\n    },\n    \"_type\": \"Status\",\n    \"defaultDoneRatio\": 50,\n    \"id\": 2,\n    \"isClosed\": false,\n    \"isDefault\": false,\n    \"name\": \"In Progress\",\n    \"position\": 3\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/statuses\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 6,\n \"total\": 6\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package (on any project)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/statuses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"statuses"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see the statuses.\"\n}"
								}
							]
						},
						{
							"name": "View Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/statuses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"statuses",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Status id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/statuses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"statuses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Status id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/statuses/1\"\n  }\n },\n \"_type\": \"Status\",\n \"defaultDoneRatio\": 0,\n \"id\": 1,\n \"isClosed\": false,\n \"isDefault\": true,\n \"name\": \"New\",\n \"position\": 1\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package (on any project)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/statuses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"statuses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Status id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see this status.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "time entries",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete time entry",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Time entry id"
												}
											]
										},
										"description": "Permanently deletes the specified time entry."
									},
									"response": [
										{
											"name": "Returned if the time entry was deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entry id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entry id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the time entry does not exist or if the user does not have sufficient permissions to see the time entry.\n\n**Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belo",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entry id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "View time entry",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) time entry id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) time entry id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"activity...\": {},\n  \"project...\": {},\n  \"user...\": {},\n  \"workPackage...\": {}\n },\n \"_links\": {\n  \"activity\": {\n   \"href\": \"/api/v3/time_entries/activities/18\",\n   \"title\": \"Some time entry activity\"\n  },\n  \"customField4\": {\n   \"href\": \"/api/v3/users/5\",\n   \"title\": \"Some other user\"\n  },\n  \"delete\": {\n   \"href\": \"/api/v3/time_entries/1\",\n   \"method\": \"delete\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"Some project\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/time_entries/1\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/time_entries/1\",\n   \"method\": \"patch\"\n  },\n  \"user\": {\n   \"href\": \"/api/v3/users/2\",\n   \"title\": \"Some user\"\n  },\n  \"workPackage\": {\n   \"href\": \"/api/v3/work_packages/1\",\n   \"title\": \"Some work package\"\n  }\n },\n \"_type\": \"TimeEntry\",\n \"comment\": {\n  \"format\": \"plain\",\n  \"html\": \"<p>Some text explaining why the time entry was created</p>\",\n  \"raw\": \"Some text explaining why the time entry was created\"\n },\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"customField12\": 5,\n \"hours\": \"PT5H\",\n \"id\": 1,\n \"spentOn\": \"2015-03-20\",\n \"updatedAt\": \"2015-03-20T12:56:56Z\"\n}"
										},
										{
											"name": "Returned if the time entry does not exist or if the user does not have permission to view them.\n\n**Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belonging to the user",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) time entry id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "Update Time entry",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Time entry id"
												}
											]
										},
										"description": "Updates the given time entry by applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a time entries' attributes and are accepted by the endpoint."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entry id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"TimeEntry\",\n \"id\": 1,\n \"comment\": {\n  \"format\": \"plain\",\n  \"raw\": \"Some text explaining why the time entry was created\",\n  \"html\": \"<p>Some text explaining why the time entry was created</p>\"\n },\n \"spentOn\": \"2015-03-20\",\n \"hours\": \"PT5H\",\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"updatedAt\": \"2015-03-20T12:56:56Z\",\n \"customField12\": 5,\n \"_embedded\": {\n  \"project...\": {},\n  \"workPackage...\": {},\n  \"user...\": {},\n  \"activity...\": {}\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/time_entries/1\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/time_entries/1\",\n   \"method\": \"patch\"\n  },\n  \"delete\": {\n   \"href\": \"/api/v3/time_entries/1\",\n   \"method\": \"delete\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"Some project\"\n  },\n  \"workPackage\": {\n   \"href\": \"/api/v3/work_packages/1\",\n   \"title\": \"Some work package\"\n  },\n  \"user\": {\n   \"href\": \"/api/v3/users/2\",\n   \"title\": \"Some user\"\n  },\n  \"activity\": {\n   \"href\": \"/api/v3/time_entries/activities/18\",\n   \"title\": \"Some time entry activity\"\n  },\n  \"customField4\": {\n   \"href\": \"/api/v3/users/5\",\n   \"title\": \"Some other user\"\n  }\n }\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entry id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Edit (own) time entries, depending on what time entry is being modified.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entry id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entry id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"workPackage\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Work package is invalid.\"\n}"
										}
									]
								},
								{
									"name": "Time entry update form",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "-55963669",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/:id/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												":id",
												"form"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Time entries activity id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "-55963669",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entries activity id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "-55963669",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entries activity id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions to edit the time entry.\n\n**Required permission:** *edit time entries* for every time entry of a project, or *edit own time entries* for time entries belonging to the user.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "-55963669",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entries activity id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the time entry does not exist or if the client does not have sufficient permissions to view it.\n\n**Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belonging to ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "-55963669",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/time_entries/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"time_entries",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Time entries activity id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List time entries",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/time_entries?offset=1&pageSize=55287423&sortBy=[[\"spent_on\", \"asc\"]]&filters=[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"] } }]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"time_entries"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "Page number inside the requested collection."
										},
										{
											"key": "pageSize",
											"value": "55287423",
											"description": "Number of elements to display per page."
										},
										{
											"key": "sortBy",
											"value": "[[\"spent_on\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:\n\n+ id: Sort by primary key\n\n+ hours: Sort by logged hours\n\n+ spent_on: Sort by spent on date\n\n+ created_at: Sort by time entry creation datetime\n\n+ updated_at: Sort by the time the time entry was updated last"
										},
										{
											"key": "filters",
											"value": "[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"] } }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:\n\n+ work_package: Filter time entries by work package\n\n+ project: Filter time entries by project\n\n+ user: Filter time entries by users\n\n+ spent_on: Filter time entries by spent on date\n\n+ created_at: Filter time entries by creation datetime\n\n+ updated_at: Filter time entries by the last time they where updated\n\n+ activity: Filter time entries by time entry activity"
										}
									]
								},
								"description": "Lists time entries. The time entries returned depend on the filters provided and also on the permission of the requesting user."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries?offset=1&pageSize=55287423&sortBy=[[\"spent_on\", \"asc\"]]&filters=[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"spent_on\", \"asc\"]]"
												},
												{
													"key": "filters",
													"value": "[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"] } }]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"activity\": {\n      \"href\": \"/api/v3/time_entries/activities/18\",\n      \"title\": \"Some time entry activity\"\n     },\n     \"delete\": {\n      \"href\": \"/api/v3/time_entries/1\",\n      \"method\": \"delete\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/1\",\n      \"title\": \"Some project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/time_entries/1\"\n     },\n     \"updateImmediately\": {\n      \"href\": \"/api/v3/time_entries/1\",\n      \"method\": \"patch\"\n     },\n     \"user\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Some user\"\n     },\n     \"workPackage\": {\n      \"href\": \"/api/v3/work_packages/1\",\n      \"title\": \"Some work package\"\n     }\n    },\n    \"_type\": \"TimeEntry\",\n    \"comment\": {\n     \"format\": \"plain\",\n     \"html\": \"<p>Some comment</p>\",\n     \"raw\": \"Some comment\"\n    },\n    \"createdAt\": \"2015-03-20T12:56:56Z\",\n    \"hours\": \"PT5H\",\n    \"id\": 5,\n    \"spentOn\": \"2015-03-20\",\n    \"updatedAt\": \"2015-03-20T12:56:56Z\"\n   },\n   {\n    \"_links\": {\n     \"activity\": {\n      \"href\": \"/api/v3/time_entries/activities/14\",\n      \"title\": \"some other time entry activity\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/42\",\n      \"title\": \"Some other project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/time_entries/2\"\n     },\n     \"user\": {\n      \"href\": \"/api/v3/users/6\",\n      \"title\": \"Some other project\"\n     },\n     \"workPackage\": {\n      \"href\": \"/api/v3/work_packages/541\",\n      \"title\": \"Some other work package\"\n     }\n    },\n    \"_type\": \"TimeEntry\",\n    \"comment\": {\n     \"format\": \"plain\",\n     \"html\": \"<p>Another comment</p>\",\n     \"raw\": \"Another comment\"\n    },\n    \"createdAt\": \"2015-03-20T12:56:56Z\",\n    \"hours\": \"PT7H\",\n    \"id\": 10,\n    \"spentOn\": \"2015-03-21\",\n    \"updatedAt\": \"2015-03-20T12:56:56Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"changeSize\": {\n   \"href\": \"/api/v3/time_entries?offset=1&pageSize=%7Bsize%7D\",\n   \"templated\": true\n  },\n  \"createTimeEntry\": {\n   \"href\": \"/api/v3/time_entries/form\",\n   \"method\": \"post\"\n  },\n  \"createTimeEntryImmediately\": {\n   \"href\": \"/api/v3/time_entries\",\n   \"method\": \"post\"\n  },\n  \"jumpTo\": {\n   \"href\": \"/api/v3/time_entries?offset=%7Boffset%7D&pageSize=2\",\n   \"templated\": true\n  },\n  \"nextByOffset\": {\n   \"href\": \"/api/v3/time_entries?offset=2&pageSize=2\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/time_entries?offset=1&pageSize=2\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"offset\": 1,\n \"pageSize\": 2,\n \"total\": 39\n}"
								},
								{
									"name": "Returned if the client sends invalid request parameters e.g. filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries?offset=1&pageSize=55287423&sortBy=[[\"spent_on\", \"asc\"]]&filters=[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"spent_on\", \"asc\"]]"
												},
												{
													"key": "filters",
													"value": "[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"] } }]"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidQuery\",\n \"message\": [\n  \"Filters Invalid filter does not exist.\"\n ]\n}"
								},
								{
									"name": "Returned if the client is not logged in and login is required.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries?offset=1&pageSize=55287423&sortBy=[[\"spent_on\", \"asc\"]]&filters=[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "sortBy",
													"value": "[[\"spent_on\", \"asc\"]]"
												},
												{
													"key": "filters",
													"value": "[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"] } }]"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to view this resource.\"\n}"
								}
							]
						},
						{
							"name": "Create Time entry",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/time_entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"time_entries"
									]
								},
								"description": "Creates a new time entry applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a time entries' attributes and are accepted by the endpoint."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"TimeEntry\",\n \"id\": 1,\n \"comment\": {\n  \"format\": \"plain\",\n  \"raw\": \"Some text explaining why the time entry was created\",\n  \"html\": \"<p>Some text explaining why the time entry was created</p>\"\n },\n \"spentOn\": \"2015-03-20\",\n \"hours\": \"PT5H\",\n \"createdAt\": \"2015-03-20T12:56:56Z\",\n \"updatedAt\": \"2015-03-20T12:56:56Z\",\n \"customField12\": 5,\n \"_embedded\": {\n  \"project...\": {},\n  \"workPackage...\": {},\n  \"user...\": {},\n  \"activity...\": {}\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/time_entries/1\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/time_entries/1\",\n   \"method\": \"patch\"\n  },\n  \"delete\": {\n   \"href\": \"/api/v3/time_entries/1\",\n   \"method\": \"delete\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"Some project\"\n  },\n  \"workPackage\": {\n   \"href\": \"/api/v3/work_packages/1\",\n   \"title\": \"Some work package\"\n  },\n  \"user\": {\n   \"href\": \"/api/v3/users/2\",\n   \"title\": \"Some user\"\n  },\n  \"activity\": {\n   \"href\": \"/api/v3/time_entries/activities/18\",\n   \"title\": \"Some time entry activity\"\n  },\n  \"customField4\": {\n   \"href\": \"/api/v3/users/5\",\n   \"title\": \"Some other user\"\n  }\n }\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Log time",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"workPackage\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Work package is invalid.\"\n}"
								}
							]
						},
						{
							"name": "View time entries activity",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/time_entries/activity/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"time_entries",
										"activity",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Time entries activity id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/activity/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												"activity",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Time entries activity id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"projects...\": []\n },\n \"_links\": {\n  \"projects\": [\n   {\n    \"href\": \"/api/v3/projects/seeded_project\",\n    \"title\": \"Seeded Project\"\n   },\n   {\n    \"href\": \"/api/v3/projects/working-project\",\n    \"title\": \"Working Project\"\n   }\n  ],\n  \"self\": {\n   \"href\": \"/api/v3/time_entries/activities/18\",\n   \"title\": \"a autem\"\n  }\n },\n \"_type\": \"TimeEntriesActivity\",\n \"default\": false,\n \"id\": 18,\n \"name\": \"a autem\",\n \"position\": 10\n}"
								},
								{
									"name": "Returned if the activity does not exist or if the user does not have permission to view them.\n\n**Required permission** `view time entries`, `log time`, `edit time entries`, `edit own time entries` or `manage project activities` in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/activity/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												"activity",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Time entries activity id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						},
						{
							"name": "Available projects for time entries",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/time_entries/available_projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"time_entries",
										"available_projects"
									]
								},
								"description": "Gets a list of projects in which a time entry can be created in or be assigned to on update. The list contains all projects in which the user issuing the request has the necessary permissions."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/available_projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												"available_projects"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_type\": \"Project...\"\n   },\n   {\n    \"_type\": \"Project...\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/time_entries/available_projects\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** *log time*, *edit time entries* or *edit own time entries* in any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/available_projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												"available_projects"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "Time entry create form",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/time_entries/form",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"time_entries",
										"form"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												"form"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												"form"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** *log time* in any project",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												"form"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "View time entry schema",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/time_entries/schema",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"time_entries",
										"schema"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												"schema"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_dependencies\": [],\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/time_entries/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"activity\": {\n  \"_links\": {},\n  \"hasDefault\": true,\n  \"location\": \"_links\",\n  \"name\": \"Activity\",\n  \"required\": true,\n  \"type\": \"TimeEntriesActivity\",\n  \"writable\": true\n },\n \"createdAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Created on\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"customField29\": {\n  \"hasDefault\": false,\n  \"name\": \"sfsdfsdfsdfsdfdsf\",\n  \"options\": {\n   \"rtl\": null\n  },\n  \"required\": false,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"hours\": {\n  \"hasDefault\": false,\n  \"name\": \"Hours\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"Duration\",\n  \"writable\": true\n },\n \"id\": {\n  \"hasDefault\": false,\n  \"name\": \"ID\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"project\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"Project\",\n  \"required\": false,\n  \"type\": \"Project\",\n  \"writable\": true\n },\n \"spentOn\": {\n  \"hasDefault\": false,\n  \"name\": \"Date\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"Date\",\n  \"writable\": true\n },\n \"updatedAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Updated on\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"user\": {\n  \"hasDefault\": false,\n  \"name\": \"User\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"User\",\n  \"writable\": false\n },\n \"workPackage\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"Work package\",\n  \"required\": false,\n  \"type\": \"WorkPackage\",\n  \"writable\": true\n }\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see the schema.\n\n**Required permission:** *log time* or *view time entries* or *edit time entries* or *edit own time entries* on any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/time_entries/schema",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"time_entries",
												"schema"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "types",
					"item": [
						{
							"name": "List all Types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"types"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/types/1\"\n     }\n    },\n    \"_type\": \"Type\",\n    \"color\": \"#ff0000\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"id\": 1,\n    \"isDefault\": true,\n    \"isMilestone\": false,\n    \"name\": \"Bug\",\n    \"position\": 1,\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/types/2\"\n     }\n    },\n    \"_type\": \"Type\",\n    \"color\": \"#888\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"id\": 2,\n    \"isDefault\": false,\n    \"isMilestone\": false,\n    \"name\": \"Feature\",\n    \"position\": 2,\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/types\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package or manage types (on any project)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"types"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see the types.\"\n}"
								}
							]
						},
						{
							"name": "View Type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"types",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Type id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/types/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"types",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Type id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/types/1\"\n  }\n },\n \"_type\": \"Type\",\n \"color\": \"#ff0000\",\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"id\": 1,\n \"isDefault\": true,\n \"isMilestone\": false,\n \"name\": \"Bug\",\n \"position\": 1,\n \"updatedAt\": \"2014-05-21T08:51:20Z\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package or manage types (on any project)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/types/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"types",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Type id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see this type.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "lock",
									"item": [
										{
											"name": "Unlock user",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id/lock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id",
														"lock"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/users/:id/lock",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"users",
																":id",
																"lock"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_links\": {\n  \"delete\": {\n   \"href\": \"/api/v3/users/1\",\n   \"method\": \"DELETE\"\n  },\n  \"lock\": {\n   \"href\": \"/api/v3/users/1/lock\",\n   \"method\": \"POST\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"j.sheppard\"\n  },\n  \"show\": {\n   \"href\": \"/users/1\",\n   \"type\": \"text/html\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/users/1\",\n   \"method\": \"PATCH\"\n  }\n },\n \"_type\": \"User\",\n \"admin\": true,\n \"avatar\": \"https://example.org/users/1/avatar\",\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"email\": \"shep@mail.com\",\n \"firstName\": \"John\",\n \"id\": 1,\n \"language\": \"en\",\n \"lastName\": \"Sheppard\",\n \"login\": \"j.sheppard\",\n \"status\": \"active\",\n \"updatedAt\": \"2014-05-21T08:51:20Z\"\n}"
												},
												{
													"name": "Returned if the client tries to unlock a user account whose current status does not allow this transition.\n\n**Required permission:** Administrators only",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/users/:id/lock",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"users",
																":id",
																"lock"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidUserStatusTransition\",\n \"message\": \"The current user account status does not allow this operation.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions for unlocking a user.\n\n**Required permission:** Administrators only",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/users/:id/lock",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"users",
																":id",
																"lock"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to unlock the account of this user.\"\n}"
												},
												{
													"name": "Returned if the user does not exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/users/:id/lock",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"users",
																":id",
																"lock"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified user does not exist.\"\n}"
												}
											]
										},
										{
											"name": "Lock user",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id/lock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id",
														"lock"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/users/:id/lock",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"users",
																":id",
																"lock"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_links\": {\n  \"delete\": {\n   \"href\": \"/api/v3/users/1\",\n   \"method\": \"DELETE\"\n  },\n  \"lock\": {\n   \"href\": \"/api/v3/users/1/lock\",\n   \"method\": \"POST\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"j.sheppard\"\n  },\n  \"show\": {\n   \"href\": \"/users/1\",\n   \"type\": \"text/html\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/users/1\",\n   \"method\": \"PATCH\"\n  }\n },\n \"_type\": \"User\",\n \"admin\": true,\n \"avatar\": \"https://example.org/users/1/avatar\",\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"email\": \"shep@mail.com\",\n \"firstName\": \"John\",\n \"id\": 1,\n \"language\": \"en\",\n \"lastName\": \"Sheppard\",\n \"login\": \"j.sheppard\",\n \"status\": \"active\",\n \"updatedAt\": \"2014-05-21T08:51:20Z\"\n}"
												},
												{
													"name": "Returned if the client tries to lock a user account whose current status does not allow this transition.\n\n**Required permission:** Administrators only",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/users/:id/lock",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"users",
																":id",
																"lock"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidUserStatusTransition\",\n \"message\": \"The current user account status does not allow this operation.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions for locking a user.\n\n**Required permission:** Administrators only",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/users/:id/lock",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"users",
																":id",
																"lock"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to lock the account of this user.\"\n}"
												},
												{
													"name": "Returned if the user does not exist.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/users/:id/lock",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"users",
																":id",
																"lock"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified user does not exist.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete user",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) User id"
												}
											]
										},
										"description": "Permanently deletes the specified user account."
									},
									"response": [
										{
											"name": "Returned if the account was deleted successfully.\n\nNote that the response body is empty as of now. In future versions of the API a body\n*might* be returned, indicating the progress of deletion.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions or if deletion of users was disabled in the instance wide settings.\n\n**Required permission:** Administrators only (exception: users might be able to delete their own accounts)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to delete the account of this user.\"\n}"
										},
										{
											"name": "Returned if the user does not exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified user does not exist.\"\n}"
										}
									]
								},
								{
									"name": "View user",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1",
													"description": "(Required) User id. Use `me` to reference current user, if any."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) User id. Use `me` to reference current user, if any."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"delete\": {\n   \"href\": \"/api/v3/users/1\",\n   \"method\": \"DELETE\"\n  },\n  \"lock\": {\n   \"href\": \"/api/v3/users/1/lock\",\n   \"method\": \"POST\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"j.sheppard\"\n  },\n  \"show\": {\n   \"href\": \"/users/1\",\n   \"type\": \"text/html\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/users/1\",\n   \"method\": \"PATCH\"\n  }\n },\n \"_type\": \"User\",\n \"admin\": true,\n \"avatar\": \"https://example.org/users/1/avatar\",\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"email\": \"shep@mail.com\",\n \"firstName\": \"John\",\n \"id\": 1,\n \"language\": \"en\",\n \"lastName\": \"Sheppard\",\n \"login\": \"j.sheppard\",\n \"status\": \"active\",\n \"updatedAt\": \"2014-05-21T08:51:20Z\"\n}"
										},
										{
											"name": "Returned if the user does not exist or if the API user does not have permission to view them.\n\n**Required permission** The user needs to be locked in if the installation is configured to prevent anonymous access",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "1",
															"description": "(Required) User id. Use `me` to reference current user, if any."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified user does not exist or you do not have permission to view them.\"\n}"
										}
									]
								},
								{
									"name": "Update user",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"admin\": true,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"en\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) User id"
												}
											]
										},
										"description": "Updates the user's writable attributes.\nWhen calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"admin\": true,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"en\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": 93013022,\n \"login\": \"esse nostrud irure\",\n \"firstName\": \"dolore incid\",\n \"lastName\": \"proident\",\n \"name\": \"mollit voluptate magna culpa labore\",\n \"email\": \"proident ad elit\",\n \"admin\": false,\n \"avatar\": \"http://qFeEeETHxrdAtBzwwIOZrIhtmkrmcWV.utJ0DjqFhyjjpVmXyF3QT5aS86,1y.gvS\",\n \"status\": \"enim eu in sint\",\n \"language\": \"commodo ut Duis\",\n \"identity_url\": \"sunt commodo qui eu\",\n \"createdAt\": \"1952-09-08T06:57:34.473Z\",\n \"updatedAt\": \"1973-01-28T09:17:19.204Z\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"exercitation et eiusmod\",\n   \"title\": \"dolor nisi elit officia\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"sint\",\n   \"identifier\": \"cupidatat Duis sed\"\n  },\n  \"lock\": {\n   \"href\": \"dolore enim reprehenderit\",\n   \"title\": \"proident eu occaecat magna ea\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"anim officia quis\",\n   \"identifier\": \"cupidatat anim\"\n  },\n  \"show\": {\n   \"href\": \"quis\",\n   \"title\": \"in\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"ea\",\n   \"identifier\": \"dolore\"\n  },\n  \"unlock\": {\n   \"href\": \"in elit in\",\n   \"title\": \"ut occaecat\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"enim velit\",\n   \"identifier\": \"id irure dolore Excepteur\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"est ipsum ea\",\n   \"title\": \"Lorem Duis enim minim in\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"quis nulla reprehenderit\",\n   \"identifier\": \"veniam\"\n  },\n  \"delete\": {\n   \"href\": \"reprehenderit\",\n   \"title\": \"ea aliquip sunt dolor consectetur\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"dolore velit in\",\n   \"identifier\": \"deserunt l\"\n  },\n  \"auth_source\": {\n   \"href\": \"fugiat voluptate minim ex\",\n   \"title\": \"laborum ex\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"dolore\",\n   \"identifier\": \"eu adipisicing voluptate consequat labore\"\n  },\n  \"members\": {\n   \"href\": \"do\",\n   \"title\": \"fugiat consequat\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"elit adipisicing exercitation\",\n   \"identifier\": \"aliquip qui amet magna\"\n  }\n }\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"admin\": true,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"en\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrators, manage_user global permission",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"admin\": true,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"en\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to update the account of this user.\"\n}"
										},
										{
											"name": "Returned if the user does not exist or if the API user does not have the necessary permissions to update it.\n\n**Required permission:** Administrators only (exception: users may update their own accounts)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"admin\": true,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"en\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified user does not exist or you do not have permission to view them.\"\n}"
										},
										{
											"name": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"admin\": true,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"en\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"email\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"The email address is already taken.\"\n}"
										}
									]
								},
								{
									"name": "User update form",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/users/:id/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users",
												":id",
												"form"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) User id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage_user global permission",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the request user can not be found.\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of\na membership. That's why a 404 is returned here, even if a 403 might be more appropriate.*",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/users/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"users",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/users?offset=1&pageSize=55287423&filters=[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"] } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"] } }]&sortBy=[[\"status\", \"asc\"]]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"users"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "Page number inside the requested collection."
										},
										{
											"key": "pageSize",
											"value": "55287423",
											"description": "Number of elements to display per page."
										},
										{
											"key": "filters",
											"value": "[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"] } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"] } }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:\n\n+ status: Status the user has\n\n+ group: Name of the group in which to-be-listed users are members.\n\n+ name: Filter users in whose first or last names, or email addresses the given string occurs.\n\n+ login: User's login"
										},
										{
											"key": "sortBy",
											"value": "[[\"status\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint."
										}
									]
								},
								"description": "Lists users. Only administrators or users with manage_user global permission have permission to do this."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/users?offset=1&pageSize=55287423&filters=[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"] } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"] } }]&sortBy=[[\"status\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "filters",
													"value": "[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"] } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"] } }]"
												},
												{
													"key": "sortBy",
													"value": "[[\"status\", \"asc\"]]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/1\",\n      \"method\": \"DELETE\",\n      \"title\": \"Delete j.sheppard\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/1/lock\",\n      \"method\": \"POST\",\n      \"title\": \"Set lock on j.sheppard\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/1\",\n      \"title\": \"John Sheppard - j.sheppard\"\n     },\n     \"showUser\": {\n      \"href\": \"/users/1\",\n      \"type\": \"text/html\"\n     },\n     \"update\": {\n      \"href\": \"/api/v3/users/1\",\n      \"method\": \"PATCH\",\n      \"title\": \"Update j.sheppard\"\n     }\n    },\n    \"_type\": \"User\",\n    \"admin\": true,\n    \"avatar\": \"https://example.org/users/1/avatar\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"email\": \"shep@mail.com\",\n    \"firstName\": \"John\",\n    \"id\": 1,\n    \"language\": \"en\",\n    \"lastName\": \"Sheppard\",\n    \"login\": \"j.sheppard\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/users\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 1,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client sends an unknown sort column.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/users?offset=1&pageSize=55287423&filters=[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"] } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"] } }]&sortBy=[[\"status\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "filters",
													"value": "[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"] } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"] } }]"
												},
												{
													"key": "sortBy",
													"value": "[[\"status\", \"asc\"]]"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidQuery\",\n \"message\": \"Unknown sort column.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/users?offset=1&pageSize=55287423&filters=[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"] } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"] } }]&sortBy=[[\"status\", \"asc\"]]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "filters",
													"value": "[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"] } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"] } }]"
												},
												{
													"key": "sortBy",
													"value": "[[\"status\", \"asc\"]]"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to list users.\"\n}"
								}
							]
						},
						{
							"name": "Create User",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "d56a0afa2a464e06fdf0d9e4a66aac69441875cdfa07b9d31ee6d8b29da8bf75",
											"type": "string"
										},
										{
											"key": "username",
											"value": "apikey",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"admin\": false,\n    \"email\": \"lei.cheng@carbonnt.com\",\n    \"firstName\": \"Lei\",\n    \"language\": \"cn\",\n    \"lastName\": \"Cheng\",\n    \"login\": \"lei.cheng\",\n    \"password\": \"passordpassword\",\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v3/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"users"
									]
								},
								"description": "Creates a new user. Only administrators and users with manage_user global permission are allowed to do so.\nWhen calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\n\nValid values for `status`:\n\n1) \"active\" - In this case a password has to be provided in addition to the other attributes.\n\n2) \"invited\" - In this case nothing but the email address is required. The rest is optional. An invitation will be sent to the user."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"admin\": false,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"de\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\",\n    \"password\": \"hunter5\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": 93013022,\n \"login\": \"esse nostrud irure\",\n \"firstName\": \"dolore incid\",\n \"lastName\": \"proident\",\n \"name\": \"mollit voluptate magna culpa labore\",\n \"email\": \"proident ad elit\",\n \"admin\": false,\n \"avatar\": \"http://qFeEeETHxrdAtBzwwIOZrIhtmkrmcWV.utJ0DjqFhyjjpVmXyF3QT5aS86,1y.gvS\",\n \"status\": \"enim eu in sint\",\n \"language\": \"commodo ut Duis\",\n \"identity_url\": \"sunt commodo qui eu\",\n \"createdAt\": \"1952-09-08T06:57:34.473Z\",\n \"updatedAt\": \"1973-01-28T09:17:19.204Z\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"exercitation et eiusmod\",\n   \"title\": \"dolor nisi elit officia\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"sint\",\n   \"identifier\": \"cupidatat Duis sed\"\n  },\n  \"lock\": {\n   \"href\": \"dolore enim reprehenderit\",\n   \"title\": \"proident eu occaecat magna ea\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"anim officia quis\",\n   \"identifier\": \"cupidatat anim\"\n  },\n  \"show\": {\n   \"href\": \"quis\",\n   \"title\": \"in\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"ea\",\n   \"identifier\": \"dolore\"\n  },\n  \"unlock\": {\n   \"href\": \"in elit in\",\n   \"title\": \"ut occaecat\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"enim velit\",\n   \"identifier\": \"id irure dolore Excepteur\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"est ipsum ea\",\n   \"title\": \"Lorem Duis enim minim in\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"quis nulla reprehenderit\",\n   \"identifier\": \"veniam\"\n  },\n  \"delete\": {\n   \"href\": \"reprehenderit\",\n   \"title\": \"ea aliquip sunt dolor consectetur\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"dolore velit in\",\n   \"identifier\": \"deserunt l\"\n  },\n  \"auth_source\": {\n   \"href\": \"fugiat voluptate minim ex\",\n   \"title\": \"laborum ex\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"dolore\",\n   \"identifier\": \"eu adipisicing voluptate consequat labore\"\n  },\n  \"members\": {\n   \"href\": \"do\",\n   \"title\": \"fugiat consequat\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"elit adipisicing exercitation\",\n   \"identifier\": \"aliquip qui amet magna\"\n  }\n }\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"admin\": false,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"de\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\",\n    \"password\": \"hunter5\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Administrator",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"admin\": false,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"de\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\",\n    \"password\": \"hunter5\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to create new users.\"\n}"
								},
								{
									"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"admin\": false,\n    \"email\": \"h.wurst@openproject.com\",\n    \"firstName\": \"Hans\",\n    \"language\": \"de\",\n    \"lastName\": \"Wurst\",\n    \"login\": \"h.wurst\",\n    \"password\": \"hunter5\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"email\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"The email address is already taken.\"\n}"
								}
							]
						},
						{
							"name": "View user schema",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/users/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"users",
										"schemas"
									]
								},
								"description": "The schema response use two exemplary custom fields that extend the schema response. Depending on your instance and custom field configuration, the response will look somewhat different."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/users/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"users",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_dependencies\": [],\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/users/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"admin\": {\n  \"hasDefault\": false,\n  \"name\": \"Administrator\",\n  \"options\": {},\n  \"required\": false,\n  \"type\": \"Boolean\",\n  \"writable\": true\n },\n \"avatar\": {\n  \"hasDefault\": false,\n  \"name\": \"Avatar\",\n  \"options\": {},\n  \"required\": false,\n  \"type\": \"String\",\n  \"writable\": false\n },\n \"createdAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Created on\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"customField1\": {\n  \"hasDefault\": false,\n  \"name\": \"User String CF\",\n  \"required\": false,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"customField2\": {\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"User List cf\",\n  \"required\": false,\n  \"type\": \"CustomOption\",\n  \"writable\": true\n },\n \"firstName\": {\n  \"hasDefault\": false,\n  \"maxLength\": 255,\n  \"minLength\": 1,\n  \"name\": \"First name\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": false\n },\n \"id\": {\n  \"hasDefault\": false,\n  \"name\": \"ID\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"identityUrl\": {\n  \"hasDefault\": false,\n  \"name\": \"Identity url\",\n  \"options\": {},\n  \"required\": false,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"language\": {\n  \"hasDefault\": false,\n  \"name\": \"Language\",\n  \"options\": {},\n  \"required\": false,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"lastName\": {\n  \"hasDefault\": false,\n  \"maxLength\": 255,\n  \"minLength\": 1,\n  \"name\": \"Last name\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": false\n },\n \"login\": {\n  \"hasDefault\": false,\n  \"maxLength\": 255,\n  \"minLength\": 1,\n  \"name\": \"Username\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"mail\": {\n  \"hasDefault\": false,\n  \"maxLength\": 255,\n  \"minLength\": 1,\n  \"name\": \"Email\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"password\": {\n  \"hasDefault\": false,\n  \"name\": \"Password\",\n  \"options\": {},\n  \"required\": false,\n  \"type\": \"Password\",\n  \"writable\": false\n },\n \"status\": {\n  \"hasDefault\": false,\n  \"name\": \"Status\",\n  \"options\": {},\n  \"required\": false,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"updatedAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Updated on\",\n  \"options\": {},\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n }\n}"
								}
							]
						}
					]
				},
				{
					"name": "versions",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete Version",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Version id"
												}
											]
										},
										"description": "Deletes the version. Work packages associated to the version will no longer be assigned to it."
									},
									"response": [
										{
											"name": "Returned if the version was successfully deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the version does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (any project where the version is available)\n\n*Note: A client without sufficient permi",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "View version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Version id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"availableInProjects\": {\n   \"href\": \"/api/v3/versions/11/projects\"\n  },\n  \"customField4\": {\n   \"href\": \"/api/v3/custom_options/5\",\n   \"title\": \"Custom field option\"\n  },\n  \"definingProject\": {\n   \"href\": \"/api/v3/projects/11\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/versions/11\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/versions/11/form\",\n   \"method\": \"POST\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"/api/v3/versions/11\",\n   \"method\": \"PATCH\"\n  }\n },\n \"_type\": \"Version\",\n \"customField14\": \"1234567890\",\n \"description\": {\n  \"format\": \"plain\",\n  \"html\": \"This version has a description\",\n  \"raw\": \"This version has a description\"\n },\n \"endDate\": null,\n \"id\": 11,\n \"name\": \"v3.0 Alpha\",\n \"sharing\": \"system\",\n \"startDate\": \"2014-11-20\",\n \"status\": \"open\"\n}"
										},
										{
											"name": "Returned if the version does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (any project where the version is available)\n\n*Note: A client without sufficient permi",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "Update Versions",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Version id"
												}
											]
										},
										"description": "Updates the given version by applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a version's attributes and are accepted by the endpoint."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"in minim in do\",\n \"status\": \"sed\",\n \"sharing\": \"Duis tempor ut dolore dolore\",\n \"createdAt\": \"1980-05-05T18:55:19.475Z\",\n \"updatedAt\": \"1997-08-06T13:12:21.680Z\",\n \"id\": 26961041,\n \"description\": {\n  \"format\": \"markdown\",\n  \"raw\": \"I am formatted!\",\n  \"html\": \"I am formatted!\"\n },\n \"startDate\": \"1968-10-15\",\n \"endDate\": \"1980-10-19\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"consequ\",\n   \"title\": \"quis et\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"qui laboris ullamco\",\n   \"identifier\": \"in ullamco amet\"\n  },\n  \"availableInProjects\": {\n   \"href\": \"voluptate culpa consequat\",\n   \"title\": \"ut\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"aliqua id occaecat\",\n   \"identifier\": \"tempor ullamco\"\n  },\n  \"update\": {\n   \"href\": \"reprehenderit aliquip\",\n   \"title\": \"repre\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"culpa sunt cupida\",\n   \"identifier\": \"mollit elit est aliquip\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"nisi minim est non\",\n   \"title\": \"in Duis sit\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"culpa ipsum consequat dolore si\",\n   \"identifier\": \"velit\"\n  },\n  \"definingProject\": {\n   \"href\": \"exerci\",\n   \"title\": \"exercitation dolore non n\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"enim\",\n   \"identifier\": \"est cillum officia nulla esse\"\n  }\n }\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Manage versions in the version's project.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the version does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (any project where the version is available)\n\n*Note: A client without sufficient permi",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										},
										{
											"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Version update form",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/:id/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												":id",
												"form"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Project id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions in the version's project",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										}
									]
								},
								{
									"name": "List projects with version",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/:id/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												":id",
												"projects"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Version id"
												}
											]
										},
										"description": "This endpoint lists the projects where the given version is available.\n\nThe projects returned depend on the sharing settings of the given version,\nbut are also limited to the projects that the current user is allowed to see."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id/projects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id",
														"projects"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/1/categories\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/1\",\n      \"title\": \"Lorem\"\n     },\n     \"status\": {\n      \"href\": \"/api/v3/project_statuses/on_track\",\n      \"title\": \"On track\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/1/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"active\": true,\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"description\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Lorem <strong>ipsum</strong> dolor sit amet</p>\",\n     \"raw\": \"Lorem **ipsum** dolor sit amet\"\n    },\n    \"id\": 1,\n    \"identifier\": \"project_identifier\",\n    \"name\": \"Project example\",\n    \"statusExplanation\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Everything <strong>fine</strong></p>\",\n     \"raw\": \"Everything **fine**\"\n    },\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/versions/2/projects\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 1,\n \"total\": 1\n}"
										},
										{
											"name": "Returned if the version does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages **or** manage versions (any project where the given version is available)\n\n*Note: A client without sufficient",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/versions/:id/projects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"versions",
														":id",
														"projects"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Version id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List versions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/versions?filters=[{ \"sharing\": { \"operator\": \"*\", \"values\": [\"system\"] }\" }]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"versions"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"sharing\": { \"operator\": \"*\", \"values\": [\"system\"] }\" }]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.\nCurrently supported filters are:\n\n+ sharing: filters versions by how they are shared within the server (*none*, *descendants*, *hierarchy*, *tree*, *system*)."
										}
									]
								},
								"description": "Returns a collection of versions. The client can choose to filter the versions similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain versions, for which the requesting client has sufficient permissions (*view_work_packages*)."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions?filters=[{ \"sharing\": { \"operator\": \"*\", \"values\": [\"system\"] }\" }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions"
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"sharing\": { \"operator\": \"*\", \"values\": [\"system\"] }\" }]"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"availableInProjects\": {\n      \"href\": \"/api/v3/versions/11/projects\"\n     },\n     \"definingProject\": {\n      \"href\": \"/api/v3/projects/12\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/versions/11\"\n     }\n    },\n    \"_type\": \"Version\",\n    \"description\": {\n     \"format\": \"plain\",\n     \"html\": \"This version has a description\",\n     \"raw\": \"This version has a description\"\n    },\n    \"endDate\": null,\n    \"id\": 11,\n    \"name\": \"v3.0 Alpha\",\n    \"startDate\": \"2014-11-20\",\n    \"status\": \"Open\"\n   },\n   {\n    \"_links\": {\n     \"availableInProjects\": {\n      \"href\": \"/api/v3/versions/12/projects\"\n     },\n     \"definingProject\": {\n      \"href\": \"/api/v3/projects/11\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/versions/12\"\n     }\n    },\n    \"_type\": \"Version\",\n    \"description\": {\n     \"format\": \"plain\",\n     \"html\": \"\",\n     \"raw\": \"\"\n    },\n    \"endDate\": null,\n    \"id\": 12,\n    \"name\": \"v2.0\",\n    \"startDate\": null,\n    \"status\": \"Closed\"\n   },\n   {\n    \"_links\": {\n     \"availableInProjects\": {\n      \"href\": \"/api/v3/versions/13/projects\"\n     },\n     \"definingProject\": {\n      \"href\": \"/api/v3/projects/13\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/versions/10\"\n     }\n    },\n    \"_type\": \"Version\",\n    \"description\": {\n     \"format\": \"plain\",\n     \"html\": \"\",\n     \"raw\": \"\"\n    },\n    \"endDate\": null,\n    \"id\": 10,\n    \"name\": \"v1.0\",\n    \"startDate\": null,\n    \"status\": \"Open\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/versions\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 3,\n \"total\": 3\n}"
								}
							]
						},
						{
							"name": "Create versions",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"versions"
									]
								},
								"description": "Creates a new version applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a version's attributes and are accepted by the endpoint.\n\nYou can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation."
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"in minim in do\",\n \"status\": \"sed\",\n \"sharing\": \"Duis tempor ut dolore dolore\",\n \"createdAt\": \"1980-05-05T18:55:19.475Z\",\n \"updatedAt\": \"1997-08-06T13:12:21.680Z\",\n \"id\": 26961041,\n \"description\": {\n  \"format\": \"markdown\",\n  \"raw\": \"I am formatted!\",\n  \"html\": \"I am formatted!\"\n },\n \"startDate\": \"1968-10-15\",\n \"endDate\": \"1980-10-19\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"consequ\",\n   \"title\": \"quis et\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"qui laboris ullamco\",\n   \"identifier\": \"in ullamco amet\"\n  },\n  \"availableInProjects\": {\n   \"href\": \"voluptate culpa consequat\",\n   \"title\": \"ut\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"aliqua id occaecat\",\n   \"identifier\": \"tempor ullamco\"\n  },\n  \"update\": {\n   \"href\": \"reprehenderit aliquip\",\n   \"title\": \"repre\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"culpa sunt cupida\",\n   \"identifier\": \"mollit elit est aliquip\"\n  },\n  \"updateImmediately\": {\n   \"href\": \"nisi minim est non\",\n   \"title\": \"in Duis sit\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"culpa ipsum consequat dolore si\",\n   \"identifier\": \"velit\"\n  },\n  \"definingProject\": {\n   \"href\": \"exerci\",\n   \"title\": \"exercitation dolore non n\",\n   \"templated\": false,\n   \"method\": \"GET\",\n   \"payload\": \"enim\",\n   \"identifier\": \"est cillum officia nulla esse\"\n  }\n }\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** Manage versions",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								},
								{
									"name": "Returned if:\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Available projects for versions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/versions/available_projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"versions",
										"available_projects"
									]
								},
								"description": "Gets a list of projects in which a version can be created in. The list contains all projects in which the user issuing the request has the manage versions permissions."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/available_projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												"available_projects"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/6/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/6/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/6/work_packages\",\n      \"method\": \"post\"\n     },\n     \"editWorkPackage\": {\n      \"href\": \"/api/v3//work_packages/{id}/form\",\n      \"method\": \"post\",\n      \"templated\": true\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/6\",\n      \"title\": \"A project\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/6/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"createdAt\": \"2015-07-06T13:28:14+00:00\",\n    \"description\": \"Eveniet molestias omnis quis aut qui eum adipisci. Atque aut aut in exercitationem adipisci amet. Nisi asperiores quia ratione veritatis enim exercitationem magnam. Aut fuga architecto adipisci nihil. Et repellat pariatur. Aliquam et sed perferendis nostrum quaerat. Fugit doloremque voluptatem.\",\n    \"id\": 6,\n    \"identifier\": \"a_project\",\n    \"name\": \"A project\",\n    \"type\": \"Customer Project\",\n    \"updatedAt\": \"2015-10-01T09:55:02+00:00\"\n   },\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/14/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/14/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/14/work_packages\",\n      \"method\": \"post\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/14\",\n      \"title\": \"Another project\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/14/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"createdAt\": \"2016-02-29T12:50:20+00:00\",\n    \"description\": \"\",\n    \"id\": 14,\n    \"identifier\": \"another_project\",\n    \"name\": \"Another project\",\n    \"type\": null,\n    \"updatedAt\": \"2016-02-29T12:50:20+00:00\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/versions/available_projects\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/available_projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												"available_projects"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "Version create form",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/versions/form",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"versions",
										"form"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												"form"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												"form"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage versions in any project",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												"form"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						},
						{
							"name": "View version schema",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/versions/schemas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"versions",
										"schemas"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												"schemas"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_dependencies\": [],\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/versions/schema\"\n  }\n },\n \"_type\": \"Schema\",\n \"createdAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Created on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n },\n \"customField14\": {\n  \"hasDefault\": false,\n  \"name\": \"text CF\",\n  \"required\": false,\n  \"type\": \"String\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"customField40\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"location\": \"_links\",\n  \"name\": \"List CF\",\n  \"required\": false,\n  \"type\": \"CustomOption\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"definingProject\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"name\": \"Project\",\n  \"required\": true,\n  \"type\": \"Project\",\n  \"writable\": true\n },\n \"description\": {\n  \"hasDefault\": false,\n  \"name\": \"Description\",\n  \"required\": false,\n  \"type\": \"Formattable\",\n  \"writable\": true\n },\n \"endDate\": {\n  \"hasDefault\": false,\n  \"name\": \"Finish date\",\n  \"required\": false,\n  \"type\": \"Date\",\n  \"writable\": false\n },\n \"id\": {\n  \"hasDefault\": false,\n  \"name\": \"ID\",\n  \"required\": true,\n  \"type\": \"Integer\",\n  \"writable\": false\n },\n \"name\": {\n  \"hasDefault\": false,\n  \"maxLength\": 60,\n  \"minLength\": 1,\n  \"name\": \"Name\",\n  \"required\": true,\n  \"type\": \"String\",\n  \"writable\": true\n },\n \"sharing\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"name\": \"Sharing\",\n  \"required\": true,\n  \"type\": \"String\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"startDate\": {\n  \"hasDefault\": false,\n  \"name\": \"Start date\",\n  \"required\": false,\n  \"type\": \"Date\",\n  \"writable\": true\n },\n \"status\": {\n  \"_links\": {},\n  \"hasDefault\": false,\n  \"name\": \"Status\",\n  \"required\": true,\n  \"type\": \"String\",\n  \"visibility\": \"default\",\n  \"writable\": true\n },\n \"updatedAt\": {\n  \"hasDefault\": false,\n  \"name\": \"Updated on\",\n  \"required\": true,\n  \"type\": \"DateTime\",\n  \"writable\": false\n }\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions to see the schema.\n\n**Required permission:** view work packages or manage versions on any project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/versions/schemas",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"versions",
												"schemas"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "wiki pages/{id}",
					"item": [
						{
							"name": "attachments",
							"item": [
								{
									"name": "List attachments by wiki page",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/wiki_pages/:id/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"wiki_pages",
												":id",
												"attachments"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the wiki page whose attachments will be listed"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/wiki_pages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"wiki_pages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the wiki page whose attachments will be listed"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"author\": {\n      \"href\": \"/api/v3/users/1\",\n      \"title\": \"OpenProject Admin\"\n     },\n     \"container\": {\n      \"href\": \"/api/v3/wiki_pages/72\",\n      \"title\": \"wiki\"\n     },\n     \"delete\": {\n      \"href\": \"/api/v3/attachments/376\",\n      \"method\": \"delete\"\n     },\n     \"downloadLocation\": {\n      \"href\": \"/api/v3/attachments/376/content\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/attachments/376\",\n      \"title\": \"200.gif\"\n     }\n    },\n    \"_type\": \"Attachment\",\n    \"contentType\": \"image/gif\",\n    \"createdAt\": \"2018-06-01T07:24:19Z\",\n    \"description\": {\n     \"format\": \"plain\",\n     \"html\": \"\",\n     \"raw\": \"\"\n    },\n    \"digest\": {\n     \"algorithm\": \"md5\",\n     \"hash\": \"7ac9c97ef73d47127f590788b84c0c1c\"\n    },\n    \"fileName\": \"some.gif\",\n    \"fileSize\": 3521772,\n    \"id\": 376\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/wiki_pages/72/attachments\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 1,\n \"total\": 1\n}"
										},
										{
											"name": "Returned if the wiki page does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view wiki pages\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a work package.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/wiki_pages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"wiki_pages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the wiki page whose attachments will be listed"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										}
									]
								},
								{
									"name": "Add attachment to wiki page",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/wiki_pages/:id/attachments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"wiki_pages",
												":id",
												"attachments"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the wiki page to receive the attachment"
												}
											]
										},
										"description": "Adds an attachment with the wiki page as it's container."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/wiki_pages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"wiki_pages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the wiki page to receive the attachment"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"author\": {\n   \"_links\": {\n    \"lock\": {\n     \"href\": \"/api/v3/users/1/lock\",\n     \"method\": \"post\",\n     \"title\": \"Set lock on admin\"\n    },\n    \"self\": {\n     \"href\": \"/api/v3/users/1\",\n     \"title\": \"OpenProject Admin\"\n    },\n    \"showUser\": {\n     \"href\": \"/users/1\",\n     \"type\": \"text/html\"\n    },\n    \"updateImmediately\": {\n     \"href\": \"/api/v3/users/1\",\n     \"method\": \"patch\",\n     \"title\": \"Update admin\"\n    }\n   },\n   \"_type\": \"User\",\n   \"admin\": true,\n   \"avatar\": \"\",\n   \"createdAt\": \"2015-03-20T12:56:52Z\",\n   \"email\": null,\n   \"firstName\": \"OpenProject\",\n   \"id\": 1,\n   \"identityUrl\": null,\n   \"lastName\": \"Admin\",\n   \"login\": \"admin\",\n   \"name\": \"OpenProject Admin\",\n   \"status\": \"active\",\n   \"updatedAt\": \"2018-05-29T13:57:44Z\"\n  },\n  \"container\": {\n   \"_links\": {\n    \"addAttachment\": {\n     \"href\": \"/api/v3/wiki_pages/72/attachments\",\n     \"method\": \"post\"\n    },\n    \"attachments\": {\n     \"href\": \"/api/v3/wiki_pages/72/attachments\"\n    },\n    \"project\": {\n     \"href\": \"/api/v3/projects/12\",\n     \"title\": \"Demo project\"\n    },\n    \"self\": {\n     \"href\": \"/api/v3/wiki_pages/72\"\n    }\n   },\n   \"_type\": \"WikiPage\",\n   \"id\": 72,\n   \"title\": \"wiki\"\n  }\n },\n \"_links\": {\n  \"author\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin\"\n  },\n  \"container\": {\n   \"href\": \"/api/v3/wiki_pages/72\",\n   \"title\": \"wiki\"\n  },\n  \"delete\": {\n   \"href\": \"/api/v3/attachments/376\",\n   \"method\": \"delete\"\n  },\n  \"downloadLocation\": {\n   \"href\": \"/api/v3/attachments/376/content\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/attachments/376\",\n   \"title\": \"200.gif\"\n  }\n },\n \"_type\": \"Attachment\",\n \"contentType\": \"image/gif\",\n \"createdAt\": \"2018-06-01T07:24:19Z\",\n \"description\": {\n  \"format\": \"plain\",\n  \"html\": \"\",\n  \"raw\": \"\"\n },\n \"digest\": {\n  \"algorithm\": \"md5\",\n  \"hash\": \"7ac9c97ef73d47127f590788b84c0c1c\"\n },\n \"fileName\": \"some.gif\",\n \"fileSize\": 3521772,\n \"id\": 376\n}"
										},
										{
											"name": "Returned if the client sends a not understandable request. Reasons include:\n\n* Omitting one of the required parts (metadata and file)\n\n* sending unparsable JSON in the metadata part",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/wiki_pages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"wiki_pages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the wiki page to receive the attachment"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request could not be parsed as JSON.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit wiki pages\n\n*Note that you will only receive this error, if you are at least allowed to see the wiki page*",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/wiki_pages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"wiki_pages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the wiki page to receive the attachment"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to delete this attachment.\"\n}"
										},
										{
											"name": "Returned if the wiki page does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view wiki pages\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a wiki page\nTha",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/wiki_pages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"wiki_pages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the wiki page to receive the attachment"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
										},
										{
											"name": "Returned if the client tries to send an invalid attachment.\nReasons are:\n\n* Omitting the file name (`fileName` property of metadata part)\n\n* Sending a file that is too large",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/wiki_pages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"wiki_pages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the wiki page to receive the attachment"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"File is too large (maximum size is 5242880 Bytes).\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "View Wiki Page",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/wiki_pages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"wiki_pages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Wiki page identifier"
										}
									]
								},
								"description": "Retrieve an individual wiki page as identified by the id parameter"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/wiki_pages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"wiki_pages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Wiki page identifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"project\": {\n   \"_type\": \"Project...\",\n   \"id\": 12\n  }\n },\n \"_links\": {\n  \"addAttachment\": {\n   \"href\": \"/api/v3/wiki_pages/72/attachments\",\n   \"method\": \"post\"\n  },\n  \"attachments\": {\n   \"href\": \"/api/v3/wiki_pages/72/attachments\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/12\",\n   \"title\": \"some project\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/wiki_pages/72\"\n  }\n },\n \"_type\": \"WikiPage\",\n \"id\": 72,\n \"title\": \"A wiki page with a name\"\n}"
								},
								{
									"name": "Returned if the wiki page does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view wiki page in the page's project",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/wiki_pages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"wiki_pages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Wiki page identifier"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "work packages",
					"item": [
						{
							"name": "schemas",
							"item": [
								{
									"name": "List Work Package Schemas",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/schemas/?filters=[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"] } }]",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												"schemas",
												""
											],
											"query": [
												{
													"key": "filters",
													"value": "[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"] } }]",
													"description": "(Required) JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:\n\n+ id: The schema's id"
												}
											]
										},
										"description": "List work package schemas."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/schemas/?filters=[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"] } }]",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														"schemas",
														""
													],
													"query": [
														{
															"key": "filters",
															"value": "[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"] } }]"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/work_packages/schemas/13-1\"\n     }\n    },\n    \"_type\": \"Schema...\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/work_packages/schemas/7-6\"\n     }\n    },\n    \"_type\": \"Schema...\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/schemas\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 5\n}"
										},
										{
											"name": "Returned if the client sends invalid request.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/schemas/?filters=[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"] } }]",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														"schemas",
														""
													],
													"query": [
														{
															"key": "filters",
															"value": "[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"] } }]"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidQuery\",\n \"message\": \"Unknown filter.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** View work packages in any project.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/schemas/?filters=[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"] } }]",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														"schemas",
														""
													],
													"query": [
														{
															"key": "filters",
															"value": "[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"] } }]"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to list schemas.\"\n}"
										}
									]
								},
								{
									"name": "View Work Package Schema",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/schemas/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												"schemas",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "12-13",
													"description": "(Required) Identifier of the schema"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/schemas/:identifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														"schemas",
														":identifier"
													],
													"variable": [
														{
															"key": "identifier",
															"value": "12-13",
															"description": "(Required) Identifier of the schema"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the schema does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work packages (on the project where this schema is used)\n\n*Note: A client without sufficient permissions shall not be able t",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/schemas/:identifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														"schemas",
														":identifier"
													],
													"variable": [
														{
															"key": "identifier",
															"value": "12-13",
															"description": "(Required) Identifier of the schema"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified schema does not exist.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "activities",
									"item": [
										{
											"name": "List work package activities",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/activities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"activities"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/activities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"activities"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/activity/1\"\n     },\n     \"user\": {\n      \"href\": \"/api/v3/users/1\"\n     },\n     \"workPackage\": {\n      \"href\": \"/api/v3/work_packages/1\"\n     }\n    },\n    \"_type\": \"Activity\",\n    \"comment\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Lorem ipsum dolor sit amet.</p>\",\n     \"raw\": \"Lorem ipsum dolor sit amet.\"\n    },\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"details\": [],\n    \"id\": 1,\n    \"version\": 1\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/activity/2\"\n     },\n     \"user\": {\n      \"href\": \"/api/v3/users/1\"\n     },\n     \"workPackage\": {\n      \"href\": \"/api/v3/work_packages/1\"\n     }\n    },\n    \"_type\": \"Activity\",\n    \"comment\": {\n     \"format\": \"markdown\",\n     \"html\": \"<p>Lorem ipsum dolor sit amet.</p>\",\n     \"raw\": \"Lorem ipsum dolor sit amet.\"\n    },\n    \"createdAt\": \"2014-05-21T08:51:22Z\",\n    \"details\": [],\n    \"id\": 2,\n    \"version\": 2\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/1/revisions\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
												},
												{
													"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/activities",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"activities"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
												}
											]
										},
										{
											"name": "Comment work package",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"comment\": {\n        \"raw\": \"I think this is awesome!\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/activities?notify=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"activities"
													],
													"query": [
														{
															"key": "notify",
															"value": "true",
															"description": "Indicates whether change notifications (e.g. via E-Mail) should be sent.\nNote that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),\nnot just the current user."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												},
												"description": "Creates an activity for the selected work package and, on success, returns the\nupdated activity."
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"comment\": {\n        \"raw\": \"I think this is awesome!\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/activities?notify=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"activities"
															],
															"query": [
																{
																	"key": "notify",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Occurs when the client did not send a valid JSON object in the request body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"comment\": {\n        \"raw\": \"I think this is awesome!\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/activities?notify=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"activities"
															],
															"query": [
																{
																	"key": "notify",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** create journals\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"comment\": {\n        \"raw\": \"I think this is awesome!\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/activities?notify=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"activities"
															],
															"query": [
																{
																	"key": "notify",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to create a comment here.\"\n}"
												},
												{
													"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"comment\": {\n        \"raw\": \"I think this is awesome!\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/activities?notify=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"activities"
															],
															"query": [
																{
																	"key": "notify",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "attachments",
									"item": [
										{
											"name": "List attachments by work package",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the work package whose attachments will be listed"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) ID of the work package whose attachments will be listed"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Returned if the work package does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work package\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a work pac",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) ID of the work package whose attachments will be listed"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
												}
											]
										},
										{
											"name": "Add attachment to work package",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the work package to receive the attachment"
														}
													]
												},
												"description": "To add an attachment to a work package, a client needs to issue a request of type `multipart/form-data`\nwith exactly two parts.\n\nThe first part *must* be called `metadata`. Its content type is expected to be `application/json`,\nthe body *must* be a single JSON object, containing at least the `fileName` and optionally the attachments `description`.\n\nThe second part *must* be called `file`, its content type *should* match the mime type of the file.\nThe body *must* be the raw content of the file.\nNote that a `filename` must be indicated in the `Content-Disposition` of this part, however it will be ignored.\nInstead the `fileName` inside the JSON of the metadata part will be used."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) ID of the work package to receive the attachment"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_links\": {\n  \"author\": {\n   \"href\": \"/api/v3/users/1\"\n  },\n  \"container\": {\n   \"href\": \"/api/v3/work_packages/1\"\n  },\n  \"downloadLocation\": {\n   \"href\": \"/some/remote/aws/url/image.png\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/attachments/1\"\n  },\n  \"staticDownloadLocation\": {\n   \"href\": \"/api/v3/attachments/1/download\"\n  }\n },\n \"_type\": \"Attachment\",\n \"contentType\": \"image/png\",\n \"createdAt\": \"2014-05-21T08:51:20Z\",\n \"description\": {\n  \"format\": \"plain\",\n  \"html\": \"<p>A picture of a cute cat</p>\",\n  \"raw\": \"A picture of a cute cat\"\n },\n \"digest\": {\n  \"algorithm\": \"md5\",\n  \"hash\": \"64c26a8403cd796ea4cf913cda2ee4a9\"\n },\n \"fileName\": \"cat.png\",\n \"filesize\": 24,\n \"id\": 1\n}"
												},
												{
													"name": "Returned if the client sends a not understandable request. Reasons include:\n\n* Omitting one of the required parts (metadata and file)\n\n* sending unparsable JSON in the metadata part",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) ID of the work package to receive the attachment"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request could not be parsed as JSON.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package or add work package\n\n*Note that you will only receive this error, if you are at least allowed to see the work package.*",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) ID of the work package to receive the attachment"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to delete this attachment.\"\n}"
												},
												{
													"name": "Returned if the work package does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view work package\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a work pac",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) ID of the work package to receive the attachment"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
												},
												{
													"name": "Returned if the client tries to send an invalid attachment.\nReasons are:\n\n* Omitting the file name (`fileName` property of metadata part)\n\n* Sending a file that is too large",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) ID of the work package to receive the attachment"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"File is too large (maximum size is 5242880 Bytes).\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "relations",
									"item": [
										{
											"name": "List relations",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"relations"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												},
												"description": "Lists all relations this work package is involved in."
											},
											"response": [
												{
													"name": "Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"relations"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Found",
													"code": 302,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Location",
															"value": "nisi",
															"description": ""
														},
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": "You are being redirected to /api/v3/relations?involved={work_package_id}"
												}
											]
										},
										{
											"name": "Create Relation",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"relations"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												},
												"description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\nThe required fields of a Relation can be found in its schema, which is embedded in the respective form.\nNote that it is only allowed to provide properties or links supporting the write operation."
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"relations"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Occurs when the client did not send a valid JSON object in the request body.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"relations"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** manage work package relations",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"relations"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to create a relation.\"\n}"
												},
												{
													"name": "Returned if there already exists a relation between the given work packages of **any** type\nor if the relation is not allowed.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"relations"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:UpdateConflict\",\n \"message\": \"Couldn't update the resource because of conflicting modifications.\"\n}"
												},
												{
													"name": "Returned if:\n\n* the client tries to write a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"relations"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"delay\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"Delay must be a number greater than or equal to 0\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "watchers",
									"item": [
										{
											"name": "List watchers",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"watchers"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/1\",\n      \"method\": \"DELETE\",\n      \"title\": \"Delete j.sheppard\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/1/lock\",\n      \"method\": \"POST\",\n      \"title\": \"Set lock on j.sheppard\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/1\",\n      \"title\": \"John Sheppard - j.sheppard\"\n     },\n     \"showUser\": {\n      \"href\": \"/users/1\",\n      \"type\": \"text/html\"\n     }\n    },\n    \"_type\": \"User\",\n    \"avatar\": \"https://example.org/users/1/avatar\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"firstName\": \"John\",\n    \"id\": 1,\n    \"lastName\": \"Sheppard\",\n    \"login\": \"j.sheppard\",\n    \"mail\": \"shep@mail.com\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   },\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/2\",\n      \"method\": \"DELETE\",\n      \"title\": \"Delete j.sheppard2\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/2/lock\",\n      \"method\": \"POST\",\n      \"title\": \"Set lock on j.sheppard2\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Jim Sheppard - j.sheppard2\"\n     }\n    },\n    \"_type\": \"User\",\n    \"avatar\": \"https://example.org/users/1/avatar\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"firstName\": \"Jim\",\n    \"id\": 2,\n    \"lastName\": \"Sheppard\",\n    \"login\": \"j.sheppard2\",\n    \"mail\": \"shep@mail.net\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/14/watchers\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work package watchers\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see the watchers of this work package.\"\n}"
												},
												{
													"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package\n\n*Note that you will effectively not be able to see the watchers of a work package without being able to ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
												}
											]
										},
										{
											"name": "Add watcher",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"user\": {\n        \"href\": \"/api/v3/users/1\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"watchers"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												},
												"description": "Adds a watcher to the specified work package.\n\nThe request is expected to contain a single JSON object, that contains a link object under the `user` key.\n\nThe response will be user added as watcher.\nIn case the user was already watching the work package an `HTTP 200` is returned, an\n`HTTP 201` if the user was added as a new watcher."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"user\": {\n        \"href\": \"/api/v3/users/1\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"user\": {\n        \"href\": \"/api/v3/users/1\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Occurs when the client did not send a valid JSON object in the request body.\n\nFor example:\n\n* The request did not contain a single JSON object\n\n* The JSON object did not contain the key `user`\n\n* The value of `users` was not a link object",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"user\": {\n        \"href\": \"/api/v3/users/1\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permissions:**\n\n* view work package (for self)\n\n* add work package watchers (for other users)\n\n*Note that you will only receive this error, if you are at least allowed to see the cor",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"user\": {\n        \"href\": \"/api/v3/users/1\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to add watchers to this work package.\"\n}"
												},
												{
													"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package\n\n*Note that you will effectively not be able to change the watchers of a work package without being able ",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"user\": {\n        \"href\": \"/api/v3/users/1\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
												},
												{
													"name": "Returned if:\n\n* the client tries to specify a link to a resource that is not a user (`ResourceTypeMismatch`)\n\n* the user specified is not allowed to watch that work package (`PropertyConstraintViolation`)\n\n* the user specified does not exist (`PropertyCon",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"user\": {\n        \"href\": \"/api/v3/users/1\"\n    }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Remove watcher",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"watchers",
														":user_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														},
														{
															"key": "user_id",
															"value": "-45617088",
															"description": "(Required) User id"
														}
													]
												},
												"description": "Removes the specified user from the list of watchers for the given work package.\n\nIf the request succeeds, the specified user is not watching the work package anymore.\n\n*Note: This might also be the case, if the specified user did not watch the work package prior to the request.*"
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																},
																{
																	"key": "user_id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** delete work package watchers\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																},
																{
																	"key": "user_id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to remove watchers from this work package.\"\n}"
												},
												{
													"name": "Returned in one of the following cases:\n\nEither the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package\n\nOr the specified user does not exist at all.\n\n*Note that you will ef",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: basic",
																"key": "Authorization",
																"value": "Basic <credentials>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/v3/work_packages/:id/watchers/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"v3",
																"work_packages",
																":id",
																"watchers",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "-45617088",
																	"description": "(Required) Work package id"
																},
																{
																	"key": "user_id",
																	"value": "-45617088",
																	"description": "(Required) User id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/hal+json"
														}
													],
													"cookie": [],
													"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete Work Package",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Work package id"
												}
											]
										},
										"description": "Deletes the work package, as well as:\n\n* all associated time entries\n\n* its hierarchy of child work packages"
									},
									"response": [
										{
											"name": "Returned if the work package was deleted successfully.\n\nNote that the response body is empty as of now. In future versions of the API a body\n*might* be returned along with an appropriate HTTP status.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** delete work package",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to delete this work package.\"\n}"
										},
										{
											"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
										}
									]
								},
								{
									"name": "View Work Package",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Work package id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"addAttachment\": {\n   \"href\": \"/api/v3/work_packages/1528/attachments\",\n   \"method\": \"post\"\n  },\n  \"addComment\": {\n   \"href\": \"/api/v3/work_packages/1528/activities\",\n   \"method\": \"post\",\n   \"title\": \"Add comment\"\n  },\n  \"addRelation\": {\n   \"href\": \"/api/v3/relations\",\n   \"method\": \"post\",\n   \"title\": \"Add relation\"\n  },\n  \"addWatcher\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\",\n   \"method\": \"post\",\n   \"payload\": {\n    \"user\": {\n     \"href\": \"/api/v3/users/{user_id}\"\n    }\n   },\n   \"templated\": true\n  },\n  \"ancestors\": [\n   {\n    \"href\": \"/api/v3/work_packages/1290\",\n    \"title\": \"Root node of hierarchy\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1291\",\n    \"title\": \"Intermediate node of hierarchy\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1298\",\n    \"title\": \"nisi eligendi officiis eos delectus quis voluptas dolores\"\n   }\n  ],\n  \"assignee\": {\n   \"href\": \"/api/v3/users/11\",\n   \"title\": \"Emmie Okuneva - Adele5450\"\n  },\n  \"attachments\": {\n   \"href\": \"/api/v3/work_packages/1528/attachments\"\n  },\n  \"author\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin - admin\"\n  },\n  \"availableWatchers\": {\n   \"href\": \"/api/v3/work_packages/1528/available_watchers\"\n  },\n  \"category\": {\n   \"href\": \"/api/v3/categories/1298\",\n   \"title\": \"eligend isi\"\n  },\n  \"changeParent\": {\n   \"href\": \"/api/v3/work_packages/694\",\n   \"method\": \"patch\",\n   \"title\": \"Change parent of Bug in OpenProject\"\n  },\n  \"children\": [\n   {\n    \"href\": \"/api/v3/work_packages/1529\",\n    \"title\": \"Write API documentation\"\n   }\n  ],\n  \"customActions\": [\n   {\n    \"href\": \"/api/v3/work_packages/1528/custom_actions/153/execute\",\n    \"method\": \"post\",\n    \"title\": \"Reset\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1528/custom_actions/94/execute\",\n    \"method\": \"post\",\n    \"title\": \"Forward to accounting\"\n   }\n  ],\n  \"customField3\": {\n   \"href\": \"api/v3/users/14\"\n  },\n  \"delete\": {\n   \"href\": \"/work_packages/bulk?ids=1528\",\n   \"method\": \"delete\",\n   \"title\": \"Delete Develop API\"\n  },\n  \"logTime\": {\n   \"href\": \"/work_packages/1528/time_entries/new\",\n   \"title\": \"Log time on Develop API\",\n   \"type\": \"text/html\"\n  },\n  \"move\": {\n   \"href\": \"/work_packages/1528/move/new\",\n   \"title\": \"Move Develop API\",\n   \"type\": \"text/html\"\n  },\n  \"parent\": {\n   \"href\": \"/api/v3/work_packages/1298\",\n   \"title\": \"nisi eligendi officiis eos delectus quis voluptas dolores\"\n  },\n  \"priority\": {\n   \"href\": \"/api/v3/priorities/2\",\n   \"title\": \"Normal\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"A Test Project\"\n  },\n  \"relations\": {\n   \"href\": \"/api/v3/work_packages/1528/relations\",\n   \"title\": \"Show relations\"\n  },\n  \"removeWatcher\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers/{user_id}\",\n   \"method\": \"delete\",\n   \"templated\": true\n  },\n  \"responsible\": {\n   \"href\": \"/api/v3/users/23\",\n   \"title\": \"Laron Leuschke - Alaina5788\"\n  },\n  \"revisions\": {\n   \"href\": \"/api/v3/work_packages/1528/revisions\"\n  },\n  \"schema\": {\n   \"href\": \"/api/v3/work_packages/schemas/11-2\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/1528\",\n   \"title\": \"Develop API\"\n  },\n  \"status\": {\n   \"href\": \"/api/v3/statuses/1\",\n   \"title\": \"New\"\n  },\n  \"timeEntries\": {\n   \"href\": \"/work_packages/1528/time_entries\",\n   \"title\": \"Time entries\",\n   \"type\": \"text/html\"\n  },\n  \"type\": {\n   \"href\": \"/api/v3/types/1\",\n   \"title\": \"A Type\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/work_packages/1528\",\n   \"method\": \"patch\",\n   \"title\": \"Update Develop API\"\n  },\n  \"version\": {\n   \"href\": \"/api/v3/versions/1\",\n   \"title\": \"Version 1\"\n  },\n  \"watch\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\",\n   \"method\": \"post\",\n   \"payload\": {\n    \"user\": {\n     \"href\": \"/api/v3/users/1\"\n    }\n   }\n  },\n  \"watchers\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\"\n  }\n },\n \"_type\": \"WorkPackage\",\n \"createdAt\": \"2014-08-29T12:40:53Z\",\n \"customField1\": \"Foo\",\n \"customField2\": 42,\n \"derivedDueDate\": null,\n \"derivedEstimatedTime\": \"PT10H\",\n \"derivedStartDate\": null,\n \"description\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Develop super cool OpenProject API.</p>\",\n  \"raw\": \"Develop super cool OpenProject API.\"\n },\n \"dueDate\": null,\n \"estimatedTime\": \"PT2H\",\n \"id\": 1528,\n \"percentageDone\": 0,\n \"scheduleManually\": false,\n \"startDate\": null,\n \"subject\": \"Develop API\",\n \"updatedAt\": \"2014-08-29T12:44:41Z\"\n}"
										},
										{
											"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
										}
									]
								},
								{
									"name": "Edit Work Package",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"parent\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": 13,\n    \"subject\": \"Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/:id?notify=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												":id"
											],
											"query": [
												{
													"key": "notify",
													"value": "true",
													"description": "Indicates whether change notifications (e.g. via E-Mail) should be sent.\nNote that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),\nnot just the current user."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Work package id"
												}
											]
										},
										"description": "When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body.\nNote that it is only allowed to provide properties or links supporting the **write** operation.\n\nAdditionally to the fields the client wants to change, it is mandatory to provide the value of `lockVersion` which was received\nby the `GET` request this change originates from.\n\nThe value of `lockVersion` is used to implement [optimistic locking](https://en.wikipedia.org/wiki/Optimistic_concurrency_control)."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"_links\": {\n        \"parent\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": 13,\n    \"subject\": \"Lorem\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id?notify=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"query": [
														{
															"key": "notify",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_links\": {\n  \"addAttachment\": {\n   \"href\": \"/api/v3/work_packages/1528/attachments\",\n   \"method\": \"post\"\n  },\n  \"addComment\": {\n   \"href\": \"/api/v3/work_packages/1528/activities\",\n   \"method\": \"post\",\n   \"title\": \"Add comment\"\n  },\n  \"addRelation\": {\n   \"href\": \"/api/v3/relations\",\n   \"method\": \"post\",\n   \"title\": \"Add relation\"\n  },\n  \"addWatcher\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\",\n   \"method\": \"post\",\n   \"payload\": {\n    \"user\": {\n     \"href\": \"/api/v3/users/{user_id}\"\n    }\n   },\n   \"templated\": true\n  },\n  \"ancestors\": [\n   {\n    \"href\": \"/api/v3/work_packages/1290\",\n    \"title\": \"Root node of hierarchy\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1291\",\n    \"title\": \"Intermediate node of hierarchy\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1298\",\n    \"title\": \"nisi eligendi officiis eos delectus quis voluptas dolores\"\n   }\n  ],\n  \"assignee\": {\n   \"href\": \"/api/v3/users/11\",\n   \"title\": \"Emmie Okuneva - Adele5450\"\n  },\n  \"attachments\": {\n   \"href\": \"/api/v3/work_packages/1528/attachments\"\n  },\n  \"author\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin - admin\"\n  },\n  \"availableWatchers\": {\n   \"href\": \"/api/v3/work_packages/1528/available_watchers\"\n  },\n  \"category\": {\n   \"href\": \"/api/v3/categories/1298\",\n   \"title\": \"eligend isi\"\n  },\n  \"changeParent\": {\n   \"href\": \"/api/v3/work_packages/694\",\n   \"method\": \"patch\",\n   \"title\": \"Change parent of Bug in OpenProject\"\n  },\n  \"children\": [\n   {\n    \"href\": \"/api/v3/work_packages/1529\",\n    \"title\": \"Write API documentation\"\n   }\n  ],\n  \"customActions\": [\n   {\n    \"href\": \"/api/v3/work_packages/1528/custom_actions/153/execute\",\n    \"method\": \"post\",\n    \"title\": \"Reset\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1528/custom_actions/94/execute\",\n    \"method\": \"post\",\n    \"title\": \"Forward to accounting\"\n   }\n  ],\n  \"customField3\": {\n   \"href\": \"api/v3/users/14\"\n  },\n  \"delete\": {\n   \"href\": \"/work_packages/bulk?ids=1528\",\n   \"method\": \"delete\",\n   \"title\": \"Delete Develop API\"\n  },\n  \"logTime\": {\n   \"href\": \"/work_packages/1528/time_entries/new\",\n   \"title\": \"Log time on Develop API\",\n   \"type\": \"text/html\"\n  },\n  \"move\": {\n   \"href\": \"/work_packages/1528/move/new\",\n   \"title\": \"Move Develop API\",\n   \"type\": \"text/html\"\n  },\n  \"parent\": {\n   \"href\": \"/api/v3/work_packages/1298\",\n   \"title\": \"nisi eligendi officiis eos delectus quis voluptas dolores\"\n  },\n  \"priority\": {\n   \"href\": \"/api/v3/priorities/2\",\n   \"title\": \"Normal\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"A Test Project\"\n  },\n  \"relations\": {\n   \"href\": \"/api/v3/work_packages/1528/relations\",\n   \"title\": \"Show relations\"\n  },\n  \"removeWatcher\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers/{user_id}\",\n   \"method\": \"delete\",\n   \"templated\": true\n  },\n  \"responsible\": {\n   \"href\": \"/api/v3/users/23\",\n   \"title\": \"Laron Leuschke - Alaina5788\"\n  },\n  \"revisions\": {\n   \"href\": \"/api/v3/work_packages/1528/revisions\"\n  },\n  \"schema\": {\n   \"href\": \"/api/v3/work_packages/schemas/11-2\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/1528\",\n   \"title\": \"Develop API\"\n  },\n  \"status\": {\n   \"href\": \"/api/v3/statuses/1\",\n   \"title\": \"New\"\n  },\n  \"timeEntries\": {\n   \"href\": \"/work_packages/1528/time_entries\",\n   \"title\": \"Time entries\",\n   \"type\": \"text/html\"\n  },\n  \"type\": {\n   \"href\": \"/api/v3/types/1\",\n   \"title\": \"A Type\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/work_packages/1528\",\n   \"method\": \"patch\",\n   \"title\": \"Update Develop API\"\n  },\n  \"version\": {\n   \"href\": \"/api/v3/versions/1\",\n   \"title\": \"Version 1\"\n  },\n  \"watch\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\",\n   \"method\": \"post\",\n   \"payload\": {\n    \"user\": {\n     \"href\": \"/api/v3/users/1\"\n    }\n   }\n  },\n  \"watchers\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\"\n  }\n },\n \"_type\": \"WorkPackage\",\n \"createdAt\": \"2014-08-29T12:40:53Z\",\n \"customField1\": \"Foo\",\n \"customField2\": 42,\n \"derivedDueDate\": null,\n \"derivedEstimatedTime\": \"PT10H\",\n \"derivedStartDate\": null,\n \"description\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Develop super cool OpenProject API.</p>\",\n  \"raw\": \"Develop super cool OpenProject API.\"\n },\n \"dueDate\": null,\n \"estimatedTime\": \"PT2H\",\n \"id\": 1528,\n \"percentageDone\": 0,\n \"scheduleManually\": false,\n \"startDate\": null,\n \"subject\": \"Develop API\",\n \"updatedAt\": \"2014-08-29T12:44:41Z\"\n}"
										},
										{
											"name": "Occurs when the client did not send a valid JSON object in the request body.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"_links\": {\n        \"parent\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": 13,\n    \"subject\": \"Lorem\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id?notify=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"query": [
														{
															"key": "notify",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package, assign version, manage subtasks or move work package",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"_links\": {\n        \"parent\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": 13,\n    \"subject\": \"Lorem\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id?notify=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"query": [
														{
															"key": "notify",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to edit the content of the work package.\"\n}"
										},
										{
											"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"_links\": {\n        \"parent\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": 13,\n    \"subject\": \"Lorem\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id?notify=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"query": [
														{
															"key": "notify",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
										},
										{
											"name": "Returned if the resource was changed since the client requested it. This is determined using the `lockVersion` property.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"_links\": {\n        \"parent\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": 13,\n    \"subject\": \"Lorem\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id?notify=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"query": [
														{
															"key": "notify",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:UpdateConflict\",\n \"message\": \"Your changes could not be saved, because the work package was changed since you've seen it the last time.\"\n}"
										},
										{
											"name": "Returned if:\n\n* the client tries to modify a read-only property (`PropertyIsReadOnly`)\n\n* a constraint for a property was violated (`PropertyConstraintViolation`)\n\n* the client provides a link to an invalid resource (`ResourceTypeMismatch`)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"_links\": {\n        \"parent\": {\n            \"href\": \"/api/v3/work_packages/42\"\n        }\n    },\n    \"lockVersion\": 13,\n    \"subject\": \"Lorem\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id?notify=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id"
													],
													"query": [
														{
															"key": "notify",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"Subject\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"The subject might not be blank.\"\n}"
										}
									]
								},
								{
									"name": "Available projects for work package",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												":id",
												"available_projects"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) work package id"
												}
											]
										},
										"description": "Gets a list of projects that are available as projects to which the work package can be moved."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_projects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"available_projects"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) work package id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/6/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/6/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/6/work_packages\",\n      \"method\": \"post\"\n     },\n     \"editWorkPackage\": {\n      \"href\": \"/api/v3//work_packages/{id}/form\",\n      \"method\": \"post\",\n      \"templated\": true\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/6\",\n      \"title\": \"A project\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/6/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"createdAt\": \"2015-07-06T13:28:14+00:00\",\n    \"description\": \"Eveniet molestias omnis quis aut qui eum adipisci. Atque aut aut in exercitationem adipisci amet. Nisi asperiores quia ratione veritatis enim exercitationem magnam. Aut fuga architecto adipisci nihil. Et repellat pariatur. Aliquam et sed perferendis nostrum quaerat. Fugit doloremque voluptatem.\",\n    \"id\": 6,\n    \"identifier\": \"a_project\",\n    \"name\": \"A project\",\n    \"type\": \"Customer Project\",\n    \"updatedAt\": \"2015-10-01T09:55:02+00:00\"\n   },\n   {\n    \"_links\": {\n     \"categories\": {\n      \"href\": \"/api/v3/projects/14/categories\"\n     },\n     \"createWorkPackage\": {\n      \"href\": \"/api/v3/projects/14/work_packages/form\",\n      \"method\": \"post\"\n     },\n     \"createWorkPackageImmediate\": {\n      \"href\": \"/api/v3/projects/14/work_packages\",\n      \"method\": \"post\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/projects/14\",\n      \"title\": \"Another project\"\n     },\n     \"versions\": {\n      \"href\": \"/api/v3/projects/14/versions\"\n     }\n    },\n    \"_type\": \"Project\",\n    \"createdAt\": \"2016-02-29T12:50:20+00:00\",\n    \"description\": \"\",\n    \"id\": 14,\n    \"identifier\": \"another_project\",\n    \"name\": \"Another project\",\n    \"type\": null,\n    \"updatedAt\": \"2016-02-29T12:50:20+00:00\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/5/available_projects\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_projects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"available_projects"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) work package id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_projects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"available_projects"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) work package id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
										}
									]
								},
								{
									"name": "Available relation candidates",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_relation_candidates?pageSize=55287423&filters=[{ \"status_id\": { \"operator\": \"o\", \"values\": null } }]&query=\"rollout\"&type=\"follows\"",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												":id",
												"available_relation_candidates"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "55287423",
													"description": "Maximum number of candidates to list (default 10)"
												},
												{
													"key": "filters",
													"value": "[{ \"status_id\": { \"operator\": \"o\", \"values\": null } }]",
													"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint."
												},
												{
													"key": "query",
													"value": "\"rollout\"",
													"description": "Shortcut for filtering by ID or subject"
												},
												{
													"key": "type",
													"value": "\"follows\"",
													"description": "Type of relation to find candidates for (default \"relates\")"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Project id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_relation_candidates?pageSize=55287423&filters=[{ \"status_id\": { \"operator\": \"o\", \"values\": null } }]&query=\"rollout\"&type=\"follows\"",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"available_relation_candidates"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "55287423"
														},
														{
															"key": "filters",
															"value": "[{ \"status_id\": { \"operator\": \"o\", \"values\": null } }]"
														},
														{
															"key": "query",
															"value": "\"rollout\""
														},
														{
															"key": "type",
															"value": "\"follows\""
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Project id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/work_packages/1\"\n     }\n    },\n    \"_type\": \"WorkPackage\",\n    \"id\": 1,\n    \"subject\": \"Skipped other properties for brevity\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/work_packages/2\"\n     }\n    },\n    \"_type\": \"WorkPackage\",\n    \"id\": 2,\n    \"subject\": \"Skipped other properties for brevity\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/projects/14/work_packages\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										}
									]
								},
								{
									"name": "Available watchers",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												":id",
												"available_watchers"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) work package id"
												}
											]
										},
										"description": "Gets a list of users that are able to be watchers of the specified work package."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_watchers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"available_watchers"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) work package id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/1\",\n      \"method\": \"DELETE\",\n      \"title\": \"Delete j.sheppard\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/1/lock\",\n      \"method\": \"POST\",\n      \"title\": \"Set lock on j.sheppard\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/1\",\n      \"title\": \"John Sheppard - j.sheppard\"\n     }\n    },\n    \"_type\": \"User\",\n    \"avatar\": \"https://example.org/users/1/avatar\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"email\": \"shep@mail.com\",\n    \"firstName\": \"John\",\n    \"id\": 1,\n    \"lastName\": \"Sheppard\",\n    \"login\": \"j.sheppard\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   },\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/2\",\n      \"method\": \"DELETE\",\n      \"title\": \"Delete j.sheppard2\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/2/lock\",\n      \"method\": \"POST\",\n      \"title\": \"Set lock on j.sheppard2\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Jim Sheppard - j.sheppard2\"\n     }\n    },\n    \"_type\": \"User\",\n    \"avatar\": \"https://example.org/users/1/avatar\",\n    \"createdAt\": \"2014-05-21T08:51:20Z\",\n    \"email\": \"shep@mail.net\",\n    \"firstName\": \"Jim\",\n    \"id\": 2,\n    \"lastName\": \"Sheppard\",\n    \"login\": \"j.sheppard2\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2014-05-21T08:51:20Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/1/available_watchers\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add work package watchers\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_watchers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"available_watchers"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) work package id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not authorized to access this resource.\"\n}"
										},
										{
											"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/available_watchers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"available_watchers"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) work package id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
										}
									]
								},
								{
									"name": "Work Package Edit Form",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/:id/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												":id",
												"form"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) ID of the work package being modified"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the work package being modified"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** edit work package, assign version, manage subtasks or move work package\n\n*Note that you will only receive this error, if you are at least allowed to see the correspondi",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the work package being modified"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to edit the specified work package.\"\n}"
										},
										{
											"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/form",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"form"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) ID of the work package being modified"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work package does not exist.\"\n}"
										}
									]
								},
								{
									"name": "Revisions",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/:id/revisions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												":id",
												"revisions"
											],
											"variable": [
												{
													"key": "id",
													"value": "-45617088",
													"description": "(Required) Work package id"
												}
											]
										},
										"description": "Gets a list of revisions that are linked to this work package, e.g., because it is referenced in the commit message of the revision.\nOnly linked revisions from repositories are shown if the user has the view changesets permission in the defining project."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/revisions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"revisions"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"author\": {\n      \"href\": \"/api/v3/users/1\",\n      \"title\": \"John Sheppard - j.sheppard\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/1\",\n      \"title\": \"A Test Project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/revisions/13\"\n     },\n     \"showRevision\": {\n      \"href\": \"/projects/identifier/repository/revision/11f4b07\"\n     }\n    },\n    \"_type\": \"Revision\",\n    \"authorName\": \"John Sheppard\",\n    \"createdAt\": \"2015-07-21T13:36:59Z\",\n    \"formattedIdentifier\": \"11f4b07\",\n    \"id\": 13,\n    \"identifier\": \"11f4b07dff4f4ce9548a52b7d002daca7cd63ec6\",\n    \"message\": {\n     \"format\": \"plain\",\n     \"html\": \"<p>This revision provides new features<br/><br/>An elaborate description</p>\",\n     \"raw\": \"This revision provides new features\\n\\nAn elaborate description\"\n    }\n   },\n   {\n    \"_links\": {\n     \"author\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Jim Sheppard - j.sheppard\"\n     },\n     \"project\": {\n      \"href\": \"/api/v3/projects/1\",\n      \"title\": \"A Test Project\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/revisions/14\"\n     },\n     \"showRevision\": {\n      \"href\": \"/projects/identifier/repository/revision/029ed72a\"\n     }\n    },\n    \"_type\": \"Revision\",\n    \"authorName\": \"j1msheppard\",\n    \"createdAt\": \"2015-06-30T08:47:00Z\",\n    \"formattedIdentifier\": \"029ed72a\",\n    \"id\": 13,\n    \"identifier\": \"029ed72a3b7b7c4ab332b1f6eaa6576e7c946059\",\n    \"message\": {\n     \"format\": \"plain\",\n     \"html\": \"<p>This revision fixes some stuff<br/><br/>More information here</p>\",\n     \"raw\": \"This revision fixes some stuff\\n\\nMore information here\"\n    }\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/42/revisions\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
										},
										{
											"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages for the project the work package is contained in.\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/revisions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"revisions"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see linked revisions for this work package.\"\n}"
										},
										{
											"name": "Returned if the work package does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: basic",
														"key": "Authorization",
														"value": "Basic <credentials>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v3/work_packages/:id/revisions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v3",
														"work_packages",
														":id",
														"revisions"
													],
													"variable": [
														{
															"key": "id",
															"value": "-45617088",
															"description": "(Required) Work package id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/hal+json"
												}
											],
											"cookie": [],
											"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified work project does not exist.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List work packages",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/work_packages?offset=1&pageSize=55287423&filters=[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"work_packages"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "Page number inside the requested collection."
										},
										{
											"key": "pageSize",
											"value": "55287423",
											"description": "Number of elements to display per page."
										},
										{
											"key": "filters",
											"value": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]",
											"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. If no filter is to be applied, the client should send an empty array (`[]`)."
										},
										{
											"key": "sortBy",
											"value": "[[\"status\", \"asc\"]]",
											"description": "JSON specifying sort criteria.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint."
										},
										{
											"key": "groupBy",
											"value": "status",
											"description": "The column to group by."
										},
										{
											"key": "showSums",
											"value": "false",
											"description": "Indicates whether properties should be summed up if they support it."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages?offset=1&pageSize=55287423&filters=[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "filters",
													"value": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]"
												},
												{
													"key": "sortBy",
													"value": "[[\"status\", \"asc\"]]"
												},
												{
													"key": "groupBy",
													"value": "status"
												},
												{
													"key": "showSums",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/work_packages/1\"\n     }\n    },\n    \"_type\": \"WorkPackage\",\n    \"id\": 1,\n    \"subject\": \"Skipped other properties for brevity\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/work_packages/2\"\n     }\n    },\n    \"_type\": \"WorkPackage\",\n    \"id\": 2,\n    \"subject\": \"Skipped other properties for brevity\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/work_packages\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 2,\n \"total\": 2\n}"
								},
								{
									"name": "Returned if the client sends a query parameter, that the server knows, but does not understand.\nE.g. by providing a syntactically incorrect `filters` parameter.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages?offset=1&pageSize=55287423&filters=[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "filters",
													"value": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]"
												},
												{
													"key": "sortBy",
													"value": "[[\"status\", \"asc\"]]"
												},
												{
													"key": "groupBy",
													"value": "status"
												},
												{
													"key": "showSums",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidQuery\",\n \"message\": \"Operator can't be blank.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages (globally or in any project)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages?offset=1&pageSize=55287423&filters=[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]&sortBy=[[\"status\", \"asc\"]]&groupBy=status&showSums=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages"
											],
											"query": [
												{
													"key": "offset",
													"value": "1"
												},
												{
													"key": "pageSize",
													"value": "55287423"
												},
												{
													"key": "filters",
													"value": "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]"
												},
												{
													"key": "sortBy",
													"value": "[[\"status\", \"asc\"]]"
												},
												{
													"key": "groupBy",
													"value": "status"
												},
												{
													"key": "showSums",
													"value": "false"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see work packages.\"\n}"
								}
							]
						},
						{
							"name": "Create Work Package",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"_links\": {\n        \"assignee\": {\n            \"href\": \"/api/v3/users/8\"\n        },\n        \"customField32\": {\n            \"href\": \"/api/v3/users/3\"\n        },\n        \"project\": {\n            \"href\": \"/api/v3/project/42\"\n        },\n        \"type\": {\n            \"href\": \"/api/v3/type/123\"\n        }\n    },\n    \"customField41\": 8,\n    \"startDate\": \"2048-01-03\",\n    \"subject\": \"Lorem\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v3/work_packages?notify=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"work_packages"
									],
									"query": [
										{
											"key": "notify",
											"value": "true",
											"description": "Indicates whether change notifications (e.g. via E-Mail) should be sent.\nNote that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),\nnot just the current user."
										}
									]
								},
								"description": "When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.\nThe required fields of a WorkPackage can be found in its schema, which is embedded in the respective form.\nNote that it is only allowed to provide properties or links supporting the write operation.\n\nA project link must be set when creating work packages through this route."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"assignee\": {\n            \"href\": \"/api/v3/users/8\"\n        },\n        \"customField32\": {\n            \"href\": \"/api/v3/users/3\"\n        },\n        \"project\": {\n            \"href\": \"/api/v3/project/42\"\n        },\n        \"type\": {\n            \"href\": \"/api/v3/type/123\"\n        }\n    },\n    \"customField41\": 8,\n    \"startDate\": \"2048-01-03\",\n    \"subject\": \"Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages?notify=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages"
											],
											"query": [
												{
													"key": "notify",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_links\": {\n  \"addAttachment\": {\n   \"href\": \"/api/v3/work_packages/1528/attachments\",\n   \"method\": \"post\"\n  },\n  \"addComment\": {\n   \"href\": \"/api/v3/work_packages/1528/activities\",\n   \"method\": \"post\",\n   \"title\": \"Add comment\"\n  },\n  \"addRelation\": {\n   \"href\": \"/api/v3/relations\",\n   \"method\": \"post\",\n   \"title\": \"Add relation\"\n  },\n  \"addWatcher\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\",\n   \"method\": \"post\",\n   \"payload\": {\n    \"user\": {\n     \"href\": \"/api/v3/users/{user_id}\"\n    }\n   },\n   \"templated\": true\n  },\n  \"ancestors\": [\n   {\n    \"href\": \"/api/v3/work_packages/1290\",\n    \"title\": \"Root node of hierarchy\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1291\",\n    \"title\": \"Intermediate node of hierarchy\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1298\",\n    \"title\": \"nisi eligendi officiis eos delectus quis voluptas dolores\"\n   }\n  ],\n  \"assignee\": {\n   \"href\": \"/api/v3/users/11\",\n   \"title\": \"Emmie Okuneva - Adele5450\"\n  },\n  \"attachments\": {\n   \"href\": \"/api/v3/work_packages/1528/attachments\"\n  },\n  \"author\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"OpenProject Admin - admin\"\n  },\n  \"availableWatchers\": {\n   \"href\": \"/api/v3/work_packages/1528/available_watchers\"\n  },\n  \"category\": {\n   \"href\": \"/api/v3/categories/1298\",\n   \"title\": \"eligend isi\"\n  },\n  \"changeParent\": {\n   \"href\": \"/api/v3/work_packages/694\",\n   \"method\": \"patch\",\n   \"title\": \"Change parent of Bug in OpenProject\"\n  },\n  \"children\": [\n   {\n    \"href\": \"/api/v3/work_packages/1529\",\n    \"title\": \"Write API documentation\"\n   }\n  ],\n  \"customActions\": [\n   {\n    \"href\": \"/api/v3/work_packages/1528/custom_actions/153/execute\",\n    \"method\": \"post\",\n    \"title\": \"Reset\"\n   },\n   {\n    \"href\": \"/api/v3/work_packages/1528/custom_actions/94/execute\",\n    \"method\": \"post\",\n    \"title\": \"Forward to accounting\"\n   }\n  ],\n  \"customField3\": {\n   \"href\": \"api/v3/users/14\"\n  },\n  \"delete\": {\n   \"href\": \"/work_packages/bulk?ids=1528\",\n   \"method\": \"delete\",\n   \"title\": \"Delete Develop API\"\n  },\n  \"logTime\": {\n   \"href\": \"/work_packages/1528/time_entries/new\",\n   \"title\": \"Log time on Develop API\",\n   \"type\": \"text/html\"\n  },\n  \"move\": {\n   \"href\": \"/work_packages/1528/move/new\",\n   \"title\": \"Move Develop API\",\n   \"type\": \"text/html\"\n  },\n  \"parent\": {\n   \"href\": \"/api/v3/work_packages/1298\",\n   \"title\": \"nisi eligendi officiis eos delectus quis voluptas dolores\"\n  },\n  \"priority\": {\n   \"href\": \"/api/v3/priorities/2\",\n   \"title\": \"Normal\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\",\n   \"title\": \"A Test Project\"\n  },\n  \"relations\": {\n   \"href\": \"/api/v3/work_packages/1528/relations\",\n   \"title\": \"Show relations\"\n  },\n  \"removeWatcher\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers/{user_id}\",\n   \"method\": \"delete\",\n   \"templated\": true\n  },\n  \"responsible\": {\n   \"href\": \"/api/v3/users/23\",\n   \"title\": \"Laron Leuschke - Alaina5788\"\n  },\n  \"revisions\": {\n   \"href\": \"/api/v3/work_packages/1528/revisions\"\n  },\n  \"schema\": {\n   \"href\": \"/api/v3/work_packages/schemas/11-2\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/work_packages/1528\",\n   \"title\": \"Develop API\"\n  },\n  \"status\": {\n   \"href\": \"/api/v3/statuses/1\",\n   \"title\": \"New\"\n  },\n  \"timeEntries\": {\n   \"href\": \"/work_packages/1528/time_entries\",\n   \"title\": \"Time entries\",\n   \"type\": \"text/html\"\n  },\n  \"type\": {\n   \"href\": \"/api/v3/types/1\",\n   \"title\": \"A Type\"\n  },\n  \"update\": {\n   \"href\": \"/api/v3/work_packages/1528\",\n   \"method\": \"patch\",\n   \"title\": \"Update Develop API\"\n  },\n  \"version\": {\n   \"href\": \"/api/v3/versions/1\",\n   \"title\": \"Version 1\"\n  },\n  \"watch\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\",\n   \"method\": \"post\",\n   \"payload\": {\n    \"user\": {\n     \"href\": \"/api/v3/users/1\"\n    }\n   }\n  },\n  \"watchers\": {\n   \"href\": \"/api/v3/work_packages/1528/watchers\"\n  }\n },\n \"_type\": \"WorkPackage\",\n \"createdAt\": \"2014-08-29T12:40:53Z\",\n \"customField1\": \"Foo\",\n \"customField2\": 42,\n \"derivedDueDate\": null,\n \"derivedEstimatedTime\": \"PT10H\",\n \"derivedStartDate\": null,\n \"description\": {\n  \"format\": \"markdown\",\n  \"html\": \"<p>Develop super cool OpenProject API.</p>\",\n  \"raw\": \"Develop super cool OpenProject API.\"\n },\n \"dueDate\": null,\n \"estimatedTime\": \"PT2H\",\n \"id\": 1528,\n \"percentageDone\": 0,\n \"scheduleManually\": false,\n \"startDate\": null,\n \"subject\": \"Develop API\",\n \"updatedAt\": \"2014-08-29T12:44:41Z\"\n}"
								},
								{
									"name": "Occurs when the client did not send a valid JSON object in the request body.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"assignee\": {\n            \"href\": \"/api/v3/users/8\"\n        },\n        \"customField32\": {\n            \"href\": \"/api/v3/users/3\"\n        },\n        \"project\": {\n            \"href\": \"/api/v3/project/42\"\n        },\n        \"type\": {\n            \"href\": \"/api/v3/type/123\"\n        }\n    },\n    \"customField41\": 8,\n    \"startDate\": \"2048-01-03\",\n    \"subject\": \"Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages?notify=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages"
											],
											"query": [
												{
													"key": "notify",
													"value": "true"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:InvalidRequestBody\",\n \"message\": \"The request body was not a single JSON object.\"\n}"
								},
								{
									"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** add work packages\n\n*Note that you will only receive this error, if you are at least allowed to see the corresponding project.*",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"assignee\": {\n            \"href\": \"/api/v3/users/8\"\n        },\n        \"customField32\": {\n            \"href\": \"/api/v3/users/3\"\n        },\n        \"project\": {\n            \"href\": \"/api/v3/project/42\"\n        },\n        \"type\": {\n            \"href\": \"/api/v3/type/123\"\n        }\n    },\n    \"customField41\": 8,\n    \"startDate\": \"2048-01-03\",\n    \"subject\": \"Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages?notify=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages"
											],
											"query": [
												{
													"key": "notify",
													"value": "true"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to add work packages to this project.\"\n}"
								},
								{
									"name": "Returned if the project does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permissions:** view project\n\n*Note: A client without sufficient permissions shall not be able to test for the existence of a project.\nThat's w",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"assignee\": {\n            \"href\": \"/api/v3/users/8\"\n        },\n        \"customField32\": {\n            \"href\": \"/api/v3/users/3\"\n        },\n        \"project\": {\n            \"href\": \"/api/v3/project/42\"\n        },\n        \"type\": {\n            \"href\": \"/api/v3/type/123\"\n        }\n    },\n    \"customField41\": 8,\n    \"startDate\": \"2048-01-03\",\n    \"subject\": \"Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages?notify=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages"
											],
											"query": [
												{
													"key": "notify",
													"value": "true"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified project does not exist.\"\n}"
								},
								{
									"name": "Returned if:\n\n* the client tries to write a read-only property\n\n* a constraint for a property was violated\n\n* a property was provided in an unreadable format",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"_links\": {\n        \"assignee\": {\n            \"href\": \"/api/v3/users/8\"\n        },\n        \"customField32\": {\n            \"href\": \"/api/v3/users/3\"\n        },\n        \"project\": {\n            \"href\": \"/api/v3/project/42\"\n        },\n        \"type\": {\n            \"href\": \"/api/v3/type/123\"\n        }\n    },\n    \"customField41\": 8,\n    \"startDate\": \"2048-01-03\",\n    \"subject\": \"Lorem\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages?notify=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages"
											],
											"query": [
												{
													"key": "notify",
													"value": "true"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/hal+json"
										}
									],
									"cookie": [],
									"body": "{\n \"_embedded\": {\n  \"details\": {\n   \"attribute\": \"Subject\"\n  }\n },\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:PropertyConstraintViolation\",\n \"message\": \"The subject might not be blank.\"\n}"
								}
							]
						},
						{
							"name": "Work Package Create Form",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v3/work_packages/form",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"work_packages",
										"form"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v3/work_packages/form",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v3",
												"work_packages",
												"form"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "View root",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v3"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_links\": {\n  \"configuration\": {\n   \"href\": \"/api/v3/configuration\"\n  },\n  \"priorities\": {\n   \"href\": \"/api/v3/priorities\"\n  },\n  \"relations\": {\n   \"href\": \"/api/v3/relations\"\n  },\n  \"statuses\": {\n   \"href\": \"/api/v3/statuses\"\n  },\n  \"types\": {\n   \"href\": \"/api/v3/types\"\n  },\n  \"user\": {\n   \"href\": \"/api/v3/users/1\",\n   \"title\": \"John Sheppard\"\n  },\n  \"userPreferences\": {\n   \"href\": \"/api/v3/my_preferences\"\n  },\n  \"users\": {\n   \"href\": \"/api/v3/users\"\n  },\n  \"workPackages\": {\n   \"href\": \"/api/v3/work_packages\"\n  }\n },\n \"coreVersion\": \"10.3.0\",\n \"instanceName\": \"My own OpenProject\"\n}"
						}
					]
				},
				{
					"name": "view Budget",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v3/budgets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v3",
								"budgets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-45617088",
									"description": "(Required) Budget id"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/budgets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"budgets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Budget id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/budgets/1\",\n   \"title\": \"Q3 2015\"\n  }\n },\n \"_type\": \"Budget\",\n \"id\": 1,\n \"subject\": \"Q3 2015\"\n}"
						},
						{
							"name": "Returned if the client does not have sufficient permissions.\n\n**Required permission:** view work packages **or** view budgets (on the budgets project)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/budgets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"budgets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Budget id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:MissingPermission\",\n \"message\": \"You are not allowed to see this budget.\"\n}"
						}
					]
				},
				{
					"name": "View Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v3/categories/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v3",
								"categories",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-45617088",
									"description": "(Required) Category id"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/categories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"categories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Category id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_links\": {\n  \"defaultAssignee\": {\n   \"href\": \"/api/v3/users/42\",\n   \"title\": \"John Sheppard\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/11\",\n   \"title\": \"Example project\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/categories/10\",\n   \"title\": \"Category with assignee\"\n  }\n },\n \"_type\": \"Category\",\n \"id\": 10,\n \"name\": \"Foo\"\n}"
						},
						{
							"name": "Returned if the category does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view project (defining the category)\n\n*Note: A client without sufficient permissions shall not be able to test for the existenc",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/categories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"categories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Category id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified category does not exist.\"\n}"
						}
					]
				},
				{
					"name": "View configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v3/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v3",
								"configuration"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/configuration\"\n  },\n  \"userPreferences\": {\n   \"href\": \"/api/v3/my_preferences\"\n  }\n },\n \"_type\": \"Configuration\",\n \"maximumAttachmentFileSize\": 5242880,\n \"perPageOptions\": [\n  1,\n  10,\n  100\n ]\n}"
						}
					]
				},
				{
					"name": "View Custom Object",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v3/custom_objects/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v3",
								"custom_objects",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-45617088",
									"description": "(Required) The custom object's identifier"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/custom_objects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"custom_objects",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) The custom object's identifier"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/custom_objects/1\"\n  }\n },\n \"_type\": \"CustomObject\",\n \"value\": \"Foo\"\n}"
						},
						{
							"name": "Returned if the custom object does not exist or the client does not have sufficient permissions to see it.\n\n**Required permission:** view work package in any project the custom object's custom field is active in.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/custom_objects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"custom_objects",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) The custom object's identifier"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
						}
					]
				},
				{
					"name": "view aggregated result",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v3/examples?groupBy=status&showSums=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v3",
								"examples"
							],
							"query": [
								{
									"key": "groupBy",
									"value": "status",
									"description": "The column to group by.\nNote: Aggregation is as of now only supported by the work package collection.\nYou can pass any column name as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint."
								},
								{
									"key": "showSums",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/examples?groupBy=status&showSums=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"examples"
									],
									"query": [
										{
											"key": "groupBy",
											"value": "status"
										},
										{
											"key": "showSums",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List principals",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v3/principals?filters=[{ \"type\": { \"operator\": \"=\", \"values\": [\"User\"] } }]",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v3",
								"principals"
							],
							"query": [
								{
									"key": "filters",
									"value": "[{ \"type\": { \"operator\": \"=\", \"values\": [\"User\"] } }]",
									"description": "JSON specifying filter conditions.\nAccepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.\nCurrently supported filters are:\n\n+ type: filters principals by their type (*User*, *Group*, *PlaceholderUser*).\n\n+ member: filters principals by the projects they are members in.\n\n+ name: filters principals by the user or group name.\n\n+ any_name_attribute: filters principals by the user or group first- and last name, email or login.\n\n+ status: filters principals by their status number (active = *1*, registered = *2*, locked = *3*, invited = *4*)"
								}
							]
						},
						"description": "List all principals. The client can choose to filter the principals similar to how work packages are filtered. In addition to the provided filters, the server will reduce the result set to only contain principals who are members in projects the client is allowed to see."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/principals?filters=[{ \"type\": { \"operator\": \"=\", \"values\": [\"User\"] } }]",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"principals"
									],
									"query": [
										{
											"key": "filters",
											"value": "[{ \"type\": { \"operator\": \"=\", \"values\": [\"User\"] } }]"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_embedded\": {\n  \"elements\": [\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/4\",\n      \"method\": \"delete\",\n      \"title\": \"Delete Eliza92778\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/4/lock\",\n      \"method\": \"post\",\n      \"title\": \"Set lock on Eliza92778\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/4\",\n      \"title\": \"Danika O'Keefe\"\n     },\n     \"showUser\": {\n      \"href\": \"/users/4\",\n      \"type\": \"text/html\"\n     },\n     \"updateImmediately\": {\n      \"href\": \"/api/v3/users/4\",\n      \"method\": \"patch\",\n      \"title\": \"Update Eliza92778\"\n     }\n    },\n    \"_type\": \"User\",\n    \"admin\": false,\n    \"avatar\": \"https://example.org/users/4/avatar\",\n    \"createdAt\": \"2015-03-20T12:57:02Z\",\n    \"email\": \"jackie@dicki.org\",\n    \"firstName\": \"Danika\",\n    \"id\": 4,\n    \"identityUrl\": null,\n    \"lastName\": \"O'Keefe\",\n    \"login\": \"Eliza92778\",\n    \"name\": \"Danika O'Keefe\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2015-06-16T15:28:14Z\"\n   },\n   {\n    \"_links\": {\n     \"delete\": {\n      \"href\": \"/api/v3/users/2\",\n      \"method\": \"delete\",\n      \"title\": \"Delete Sebastian9686\"\n     },\n     \"lock\": {\n      \"href\": \"/api/v3/users/2/lock\",\n      \"method\": \"post\",\n      \"title\": \"Set lock on Sebastian9686\"\n     },\n     \"self\": {\n      \"href\": \"/api/v3/users/2\",\n      \"title\": \"Peggie Feeney\"\n     },\n     \"showUser\": {\n      \"href\": \"/users/2\",\n      \"type\": \"text/html\"\n     },\n     \"updateImmediately\": {\n      \"href\": \"/api/v3/users/2\",\n      \"method\": \"patch\",\n      \"title\": \"Update Sebastian9686\"\n     }\n    },\n    \"_type\": \"User\",\n    \"admin\": false,\n    \"avatar\": \"https://example.org/users/4/avatar\",\n    \"createdAt\": \"2015-03-20T12:56:55Z\",\n    \"email\": null,\n    \"firstName\": \"Peggie\",\n    \"id\": 2,\n    \"identityUrl\": null,\n    \"lastName\": \"Feeney\",\n    \"login\": \"Sebastian9686\",\n    \"name\": \"Peggie Feeney\",\n    \"status\": \"active\",\n    \"updatedAt\": \"2015-03-20T12:56:55Z\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/groups/9\",\n      \"title\": \"The group\"\n     }\n    },\n    \"_type\": \"Group\",\n    \"createdAt\": \"2015-09-23T11:06:36Z\",\n    \"id\": 9,\n    \"name\": \"The group\",\n    \"updatedAt\": \"2015-09-23T11:06:36Z\"\n   },\n   {\n    \"_links\": {\n     \"self\": {\n      \"href\": \"/api/v3/placeholder_users/29\",\n      \"title\": \"UX Designer\"\n     }\n    },\n    \"_type\": \"PlaceholderUser\",\n    \"createdAt\": \"2018-09-23T11:06:36Z\",\n    \"id\": 29,\n    \"name\": \"UX Designer\",\n    \"updatedAt\": \"2019-10-23T11:06:36Z\"\n   }\n  ]\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/principals\"\n  }\n },\n \"_type\": \"Collection\",\n \"count\": 4,\n \"total\": 4\n}"
						}
					]
				},
				{
					"name": "View project status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v3/project_statuses/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v3",
								"project_statuses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "on_track",
									"description": "(Required) Project status id"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/project_statuses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"project_statuses",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "on_track",
											"description": "(Required) Project status id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_links\": {\n  \"self\": {\n   \"href\": \"/api/v3/project_statuses/on_track\"\n  }\n },\n \"_type\": \"ProjectStatus\",\n \"id\": \"on_track\",\n \"name\": \"On track\"\n}"
						},
						{
							"name": "Returned if the project status does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/project_statuses/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"project_statuses",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "on_track",
											"description": "(Required) Project status id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The requested resource could not be found.\"\n}"
						}
					]
				},
				{
					"name": "View revision",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v3/revisions/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v3",
								"revisions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "-45617088",
									"description": "(Required) Revision id"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/revisions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"revisions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Revision id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_links\": {\n  \"author\": {\n   \"href\": \"/api/v3/users/1\"\n  },\n  \"project\": {\n   \"href\": \"/api/v3/projects/1\"\n  },\n  \"self\": {\n   \"href\": \"/api/v3/revisions/1\"\n  },\n  \"showRevision\": {\n   \"href\": \"/projects/identifier/repository/revision/11f4b07\"\n  }\n },\n \"_type\": \"Revision\",\n \"authorName\": \"Some Developer\",\n \"createdAt\": \"2015-07-21T13:36:59Z\",\n \"formattedIdentifier\": \"11f4b07\",\n \"id\": 1,\n \"identifier\": \"11f4b07dff4f4ce9548a52b7d002daca7cd63ec6\",\n \"message\": {\n  \"format\": \"plain\",\n  \"html\": \"<p>This revision provides new features<br/><br/>An elaborate description</p>\",\n  \"raw\": \"This revision provides new features\\n\\nAn elaborate description\"\n }\n}"
						},
						{
							"name": "Returned if the revision does not exist or the client does not have sufficient permissions\nto see it.\n\n**Required permission:** view changesets for the project the repository is created in.\n\n*Note: A client without sufficient permissions shall not be able",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v3/revisions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v3",
										"revisions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "-45617088",
											"description": "(Required) Revision id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/hal+json"
								}
							],
							"cookie": [],
							"body": "{\n \"_type\": \"Error\",\n \"errorIdentifier\": \"urn:openproject-org:api:v3:errors:NotFound\",\n \"message\": \"The specified revision does not exist.\"\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "<Basic Auth Username>",
				"type": "string"
			},
			{
				"key": "password",
				"value": "<Basic Auth Password>",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/",
			"type": "string"
		}
	]
}